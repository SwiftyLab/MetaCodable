{"hierarchy":{"paths":[["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/tutorials\/Usage\/$volume","doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"]],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","kind":"task"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","kind":"task"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential"},{"sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Applying-Common-Strategies","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Available-Common-Strategies","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Check-Your-Understanding","kind":"assessment"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","kind":"task"}]}],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials"},{"projects":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","kind":"task"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","kind":"task"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection"}]}],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic"},"sections":[{"chapter":"Advanced MetaCodable","content":[{"type":"paragraph","inlineContent":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}]}],"title":"Represent dynamic data variations with protocol","xcodeRequirement":"Xcode 15 or later","kind":"hero","estimatedTimeInMinutes":20},{"kind":"tasks","tasks":[{"title":"Create dynamic variation Codable types","anchor":"Create-dynamic-variation-Codable-types","stepsSection":[{"code":null,"media":"DynamicPost-01.png","caption":[],"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"Identify all the variations and the tags representing variations.","type":"text"}],"type":"paragraph"}]},{"caption":[],"type":"step","runtimePreview":"DynamicPost-01.png","media":null,"code":"DynamicPost-01.swift","content":[{"inlineContent":[{"text":"Create protocol containing common fields across all the data variations.","type":"text"}],"type":"paragraph"}]},{"type":"step","caption":[],"runtimePreview":"DynamicPost-01.png","media":null,"code":"DynamicPost-02.swift","content":[{"inlineContent":[{"type":"text","text":"Attach "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","isActive":true,"type":"reference"},{"text":" attribute to this protocol.","type":"text"}],"type":"paragraph"}]},{"media":null,"runtimePreview":"DynamicPost-01.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types with each type representing a variation."}]}],"code":"DynamicPost-03.swift","type":"step","caption":[]},{"media":null,"code":"DynamicPost-04.swift","runtimePreview":"DynamicPost-01.png","content":[{"type":"paragraph","inlineContent":[{"text":"Conform common data protocol for each variant data type.","type":"text"}]}],"caption":[],"type":"step"},{"caption":[],"code":"DynamicPost-05.swift","runtimePreview":"DynamicPost-01.png","content":[{"inlineContent":[{"text":"Add ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","type":"reference","isActive":true},{"type":"text","text":" conformance for each variant data type, with "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"reference"},{"type":"text","text":" returning variant tag."}],"type":"paragraph"}],"type":"step","media":null},{"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Provide multiple variant tags in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":" in case of multiple tags used to represent same variation."}]}],"type":"step","code":"DynamicPost-06.swift","runtimePreview":"DynamicPost-02.png"},{"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ignore specific type from decoding or encoding or both by attaching "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","isActive":true,"type":"reference"},{"type":"text","text":" macros respectively."}]}],"code":"DynamicPost-07.swift","runtimePreview":"DynamicPost-02.png","caption":[]},{"media":null,"runtimePreview":"DynamicPost-03.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In case of internally tagged data, attach "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" macro to "},{"type":"codeVoice","code":"protocol"},{"text":" declaration with value specifying tag field name.","type":"text"}]}],"code":"DynamicPost-08.swift","type":"step","caption":[]},{"media":null,"caption":[],"code":"DynamicPost-09.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In case of adjacently tagged data, additionally attach "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","isActive":true},{"text":" macro to ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" declaration with value specifying content field name."}]}],"runtimePreview":"DynamicPost-04.png"},{"media":null,"type":"step","code":"Plugin.swift","runtimePreview":"Plugin.png","content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to target to handle code generation."}],"type":"paragraph"}],"caption":[]},{"type":"step","content":[{"inlineContent":[{"text":"Use generated ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder"},{"text":" for protocol to decode\/encode dynamic type.","type":"text"}],"type":"paragraph"}],"caption":[],"code":"Page.swift","runtimePreview":"Page.png","media":null}],"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"overridingTitleInlineContent":[{"type":"text","text":"enums"}],"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","overridingTitle":"enums"},{"text":" external, internal and adjacently tagged data variations are supported with default being externally tagged data.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}]},{"stepsSection":[{"runtimePreview":"Plugin.png","content":[{"inlineContent":[{"text":"Add ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"type":"text","text":" build tool plugin to target to handle code generation."}],"type":"paragraph"}],"type":"step","media":null,"code":"Plugin.swift","caption":[]},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","type":"reference"},{"type":"text","text":" file in the target plugin is included."}]}],"caption":[],"code":"meta_codable_config-01.json","type":"step","media":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Provide ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan"},{"text":" mode in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"},{"type":"text","text":" file to control source files accross dependency targets scanned for "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","isActive":true,"type":"reference"},{"text":" protocol variation data.","type":"text"}]}],"caption":[],"type":"step","media":null,"runtimePreview":"MetaCodableConfig.png","code":"meta_codable_config-02.json"}],"title":"Customize dynamic data variations detection","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Customize ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin code generation."}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"Customize-dynamic-data-variations-detection"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"Represent dynamic data variations with protocol","category":"Discover MetaCodable","categoryPathComponent":"Usage","role":"project"},"variants":[{"paths":["\/tutorials\/metacodable\/dynamic"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","references":{"doc://MetaCodable/tutorials/MetaCodable/Helper#Create-custom-advanced-customizations":{"kind":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","type":"section","title":"Create custom advanced customizations","url":"\/tutorials\/metacodable\/helper#Create-custom-advanced-customizations","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}]},"DynamicPost-01.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodable\/DynamicPost-01.png"},{"url":"\/images\/MetaCodable\/DynamicPost-01~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-01.png","alt":"Post variations JSON representation","type":"image"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"kind":"symbol","abstract":[{"type":"text","text":"The configuration file providing additional customization options for "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"configuration"},{"kind":"text","text":" "},{"text":"file","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaCodableConfig","kind":"identifier"}],"title":"MetaCodableConfig","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","url":"\/documentation\/metacodable\/metacodableconfig"},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies#Check-Your-Understanding":{"url":"\/tutorials\/metacodable\/commonstrategies#Check-Your-Understanding","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Check-Your-Understanding","title":"Check Your Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"type":"link"},"doc://MetaCodable/tutorials/Usage/Advanced-MetaCodable":{"url":"\/tutorials\/usage\/advanced-metacodable","role":"article","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","title":"Advanced MetaCodable","type":"topic","kind":"article","abstract":[]},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies":{"type":"topic","url":"\/tutorials\/metacodable\/commonstrategies","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies","abstract":[{"text":"Learn how to apply strategies like ","type":"text"},{"type":"codeVoice","code":"ValueCoder"},{"type":"text","text":" to all properties automatically."}],"estimatedTime":"10min","kind":"project","title":"Using Common Strategies","role":"project"},"Page.swift":{"identifier":"Page.swift","highlights":[],"fileType":"swift","type":"file","fileName":"Page.swift","syntax":"swift","content":["import MetaCodable","","@Codable","struct Page {","    @CodedBy(","        SequenceCoder(","            elementHelper: PostCoder()","        )","    )","    let content: [Post]","    let next: String","}"]},"DynamicPost-03.swift":{"type":"file","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"identifier":"DynamicPost-03.swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"fileType":"swift","syntax":"swift"},"doc://MetaCodable/tutorials/Usage/MetaCodable-essentials":{"url":"\/tutorials\/usage\/metacodable-essentials","abstract":[],"title":"MetaCodable essentials","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials","role":"article","type":"topic","kind":"article"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Customize-field-decodingencoding":{"abstract":[{"text":"This tutorial guides you through","type":"text"}],"title":"Customize field decoding\/encoding","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/metacodable\/essential#Customize-field-decodingencoding","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-external-tag":{"title":"Create Codable enums with external tag","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","abstract":[{"text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in ","type":"text"},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-external-tag","role":"pseudoSymbol","type":"section","kind":"section"},"DynamicPost-05.swift":{"syntax":"swift","type":"file","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"picture\"","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-05.swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48}],"fileType":"swift","fileName":"Post.swift"},"DynamicPost-01.swift":{"identifier":"DynamicPost-01.swift","highlights":[],"fileType":"swift","type":"file","fileName":"Post.swift","syntax":"swift","content":["protocol Post {","    var id: UUID { get }","}"]},"DynamicPost-07.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"identifier":"DynamicPost-07.swift","fileName":"Post.swift","type":"file","fileType":"swift","syntax":"swift"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-adjacent-tag":{"title":"Create Codable enums with adjacent tag","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-adjacent-tag","role":"pseudoSymbol","type":"section","kind":"section"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"title":"DynamicCodable","url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","role":"symbol","navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","title":"Codable(commonStrategies:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}]},"Xcode 15 or later":{"identifier":"Xcode 15 or later","url":"https:\/\/itunes.apple.com\/us\/app\/xcode\/id497799835?mt=12","type":"xcodeRequirement","title":"Xcode 15 or later"},"doc://MetaCodable/tutorials/MetaCodable/Enum":{"estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","title":"Represent variations in data","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"text":".","type":"text"}],"role":"project","type":"topic","url":"\/tutorials\/metacodable\/enum","kind":"project"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Customize-dynamic-data-variations-detection":{"type":"section","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","url":"\/tutorials\/metacodable\/dynamic#Customize-dynamic-data-variations-detection","title":"Customize dynamic data variations detection","kind":"section","role":"pseudoSymbol","abstract":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}]},"Plugin.png":{"variants":[{"url":"\/images\/MetaCodable\/Plugin.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/Plugin~dark.png","traits":["1x","dark"]}],"identifier":"Plugin.png","alt":"Xcode build tool plugin settings","type":"image"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"kind":"symbol","required":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"topic","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"identifier"},{"text":": ","kind":"text"},{"text":"DynamicCodableIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa","text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"The identifier value(s) for this type."}],"title":"identifier"},"DynamicPost-02.swift":{"type":"file","syntax":"swift","identifier":"DynamicPost-02.swift","highlights":[{"line":1},{"line":2},{"line":3}],"fileName":"Post.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}"],"fileType":"swift"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Create-Codable-type-and-customize-CodingKey-of-fields":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/essential#Create-Codable-type-and-customize-CodingKey-of-fields","title":"Create Codable type and customize CodingKey of fields","abstract":[{"type":"text","text":"This tutorial guides you through"}],"kind":"section","type":"section"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig/Scan":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","type":"topic","fragments":[{"kind":"keyword","text":"configuration"},{"kind":"text","text":" "},{"text":"option","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scan","kind":"identifier"}],"title":"Scan","abstract":[{"type":"text","text":"The source file scan option for "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/metacodableconfig\/scan"},"DynamicPost-03.png":{"type":"image","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-03.png","traits":["1x","light"]},{"traits":["1x","dark"],"url":"\/images\/MetaCodable\/DynamicPost-03~dark.png"}],"identifier":"DynamicPost-03.png","alt":"Internally tagged Post variations JSON representation"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-basic-value-types-without-type-check":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/helper#DecodeEncode-basic-value-types-without-type-check","title":"Decode\/Encode basic value types without type check","abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"kind":"section","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Share-common-Codable-fields":{"abstract":[{"type":"text","text":"This tutorial guides you through"}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","kind":"section","title":"Share common Codable fields","role":"pseudoSymbol","type":"section","url":"\/tutorials\/metacodable\/essential#Share-common-Codable-fields"},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies#Applying-Common-Strategies":{"type":"section","abstract":[{"type":"text","text":"Learn how to apply strategies like "},{"type":"codeVoice","code":"ValueCoder"},{"text":" to all properties automatically.","type":"text"}],"kind":"section","url":"\/tutorials\/metacodable\/commonstrategies#Applying-Common-Strategies","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Applying-Common-Strategies","title":"Applying Common Strategies","role":"pseudoSymbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","type":"topic","url":"\/documentation\/metacodable\/ignorecoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"role":"symbol","title":"IgnoreCoding()"},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies#Available-Common-Strategies":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Available-Common-Strategies","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/commonstrategies#Available-Common-Strategies","title":"Available Common Strategies","abstract":[{"text":"Learn how to apply strategies like ","type":"text"},{"type":"codeVoice","code":"ValueCoder"},{"type":"text","text":" to all properties automatically."}],"kind":"section","type":"section"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","title":"ContentAt(_:_:)","type":"topic","abstract":[{"text":"Indicates the enum-case associated values or protocol conforming types need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/tutorials/MetaCodable/Essential":{"kind":"project","estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","type":"topic","title":"Use with general-purpose Swift types","url":"\/tutorials\/metacodable\/essential","role":"project","abstract":[{"type":"text","text":"This tutorial guides you through"}]},"DynamicPost-09.swift":{"identifier":"DynamicPost-09.swift","type":"file","highlights":[{"line":5}],"syntax":"swift","fileName":"Post.swift","content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"fileType":"swift"},"doc://MetaCodable/tutorials/MetaCodable/Helper":{"kind":"project","estimatedTime":"20min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","type":"topic","title":"Add common decoding\/encoding customizations","url":"\/tutorials\/metacodable\/helper","role":"project","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"text":" module.","type":"text"}]},"doc://MetaCodable/tutorials/MetaCodable/Dynamic":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","kind":"project","url":"\/tutorials\/metacodable\/dynamic","title":"Represent dynamic data variations with protocol","estimatedTime":"20min","type":"topic","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"role":"project"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-internal-tag":{"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","role":"pseudoSymbol","url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-internal-tag","title":"Create Codable enums with internal tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"text":" using ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"kind":"section","type":"section"},"meta_codable_config-01.json":{"highlights":[],"fileType":"json","type":"file","content":["{}"],"identifier":"meta_codable_config-01.json","fileName":"meta_codable_config.json","syntax":"json"},"DynamicPost-04.png":{"type":"image","identifier":"DynamicPost-04.png","variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodable\/DynamicPost-04.png"},{"traits":["1x","dark"],"url":"\/images\/MetaCodable\/DynamicPost-04~dark.png"}],"alt":"Adjacently tagged Post variations JSON representation"},"DynamicPost-02.png":{"type":"image","identifier":"DynamicPost-02.png","variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodable\/DynamicPost-02.png"},{"traits":["1x","dark"],"url":"\/images\/MetaCodable\/DynamicPost-02~dark.png"}],"alt":"Post variations JSON representation"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"url":"\/documentation\/metacodable\/ignoredecoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreDecoding"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","title":"IgnoreDecoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},"DynamicPost-06.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":24}],"identifier":"DynamicPost-06.swift","fileName":"Post.swift","syntax":"swift","fileType":"swift","type":"file"},"DynamicPost-04.swift":{"highlights":[{"line":9},{"line":15},{"line":22},{"line":29}],"fileType":"swift","type":"file","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-04.swift","fileName":"Post.swift","syntax":"swift"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-sequence-of-values":{"abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"code":"HelperCoders","type":"codeVoice"},{"text":" module.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","kind":"section","title":"Decode\/Encode sequence of values","role":"pseudoSymbol","type":"section","url":"\/tutorials\/metacodable\/helper#DecodeEncode-sequence-of-values"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"type":"topic","title":"HelperCoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}],"url":"\/documentation\/metacodable\/helpercoder","abstract":[{"text":"A type that helps to decode and encode underlying ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true},{"text":" type","type":"text"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and to provided "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" respectively."}],"kind":"symbol"},"meta_codable_config-02.json":{"highlights":[{"line":1},{"line":2},{"line":3}],"fileType":"json","type":"file","content":["{","    \"scan\": \"recursive\"","}"],"identifier":"meta_codable_config-02.json","fileName":"meta_codable_config.json","syntax":"json"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-date-representations":{"abstract":[{"text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of ","type":"text"},{"code":"HelperCoders","type":"codeVoice"},{"type":"text","text":" module."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","kind":"section","title":"Decode\/Encode date representations","role":"pseudoSymbol","type":"section","url":"\/tutorials\/metacodable\/helper#DecodeEncode-date-representations"},"doc://MetaCodable/tutorials/Usage":{"type":"topic","url":"\/tutorials\/usage","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","abstract":[{"type":"codeVoice","code":"MetaCodable"},{"text":" supercharges ","type":"text"},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros. Remove previous boiler-plate for "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations and create "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" conformances faster than ever before."}],"kind":"overview","title":"Discover MetaCodable","role":"overview"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}]},"DynamicPost-08.swift":{"highlights":[{"line":4}],"fileType":"swift","type":"file","content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-08.swift","fileName":"Post.swift","syntax":"swift"},"MetaCodableConfig.png":{"type":"image","identifier":"MetaCodableConfig.png","variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodable\/MetaCodableConfig.png"},{"traits":["1x","dark"],"url":"\/images\/MetaCodable\/MetaCodableConfig~dark.png"}],"alt":"MetaCodableConfig.plist configuration file"},"Page.png":{"type":"image","identifier":"Page.png","variants":[{"traits":["1x","light"],"url":"\/images\/MetaCodable\/Page.png"},{"traits":["1x","dark"],"url":"\/images\/MetaCodable\/Page~dark.png"}],"alt":"JSON representation of Page containing Posts"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","title":"IgnoreEncoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Create-dynamic-variation-Codable-types":{"abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","kind":"section","title":"Create dynamic variation Codable types","role":"pseudoSymbol","type":"section","url":"\/tutorials\/metacodable\/dynamic#Create-dynamic-variation-Codable-types"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"role":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Coded","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","kind":"symbol","type":"topic","abstract":[{"text":"The actual type of value that is going to be decoded\/encoded.","type":"text"}],"title":"Coded","required":true},"Plugin.swift":{"highlights":[],"fileType":"swift","type":"file","content":["import PackageDescription","","let appTarget = package.targets.first!","appTarget.plugins.append(","    .plugin(","        name: \"MetaProtocolCodable\",","        package: \"MetaCodable\"","    )",")"],"identifier":"Plugin.swift","fileName":"Package.swift","syntax":"swift"}}}