{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable\/foldAll(_:errorHandler:)"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftoperators\/operatortable\/foldall(_:errorhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"foldAll(_:errorHandler:)","externalID":"s:14SwiftOperators13OperatorTableV7foldAll_12errorHandler0A6Syntax0I0Vx_yAA0C5ErrorOKXEtKAF0I8ProtocolRzlF","role":"symbol","modules":[{"name":"SwiftOperators"}],"extendedModule":"SwiftOperators","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"foldAll","kind":"identifier"},{"kind":"text","text":"("},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":", ","kind":"text"},{"text":"errorHandler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"OperatorErrorHandler","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftOperators20OperatorErrorHandlera"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"foldAll"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"},{"text":", ","kind":"text"},{"text":"errorHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14SwiftOperators20OperatorErrorHandlera","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorErrorHandler","kind":"typeIdentifier","text":"OperatorErrorHandler"},{"text":" = { throw $0 }) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation replaces all sequence expressions in the given syntax"},{"type":"text","text":" "},{"text":"tree with structured syntax trees, by walking the tree and invoking","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"foldSingle"},{"text":" on each sequence expression it encounters. Use this to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provide structure to an entire tree."}]},{"type":"paragraph","inlineContent":[{"text":"Due to the inability to express the implementation of this rethrowing","type":"text"},{"type":"text","text":" "},{"text":"function, a throwing error handler will end up being called twice with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the first error that causes it to be thrown. The first call will stop"},{"text":" ","type":"text"},{"text":"the operation, then the second must also throw.","type":"text"}]}]}],"abstract":[{"type":"text","text":"Fold all sequence expressions within the given syntax tree into a"},{"text":" ","type":"text"},{"text":"structured syntax tree.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators/OperatorTable":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OperatorTable","kind":"identifier"}],"title":"OperatorTable","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Maintains and validates information about all operators in a Swift program."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable","navigatorTitle":[{"kind":"identifier","text":"OperatorTable"}],"url":"\/documentation\/swiftoperators\/operatortable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators/OperatorErrorHandler":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorErrorHandler","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"OperatorErrorHandler","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"OperatorErrorHandler"}],"kind":"symbol","abstract":[{"type":"text","text":"A function that receives an operator precedence error and may do with it"},{"text":" ","type":"text"},{"text":"whatever it likes.","type":"text"}],"type":"topic","title":"OperatorErrorHandler","url":"\/documentation\/swiftoperators\/operatorerrorhandler"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators":{"url":"\/documentation\/swiftoperators","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators","kind":"symbol","type":"topic","title":"SwiftOperators","role":"collection","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftOperators/OperatorTable/foldAll(_:errorHandler:)":{"url":"\/documentation\/swiftoperators\/operatortable\/foldall(_:errorhandler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"foldAll","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":", ","kind":"text"},{"text":"errorHandler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"OperatorErrorHandler","preciseIdentifier":"s:14SwiftOperators20OperatorErrorHandlera","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"abstract":[{"text":"Fold all sequence expressions within the given syntax tree into a","type":"text"},{"text":" ","type":"text"},{"text":"structured syntax tree.","type":"text"}],"title":"foldAll(_:errorHandler:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftOperators\/OperatorTable\/foldAll(_:errorHandler:)"}}}