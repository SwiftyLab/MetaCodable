{"metadata":{"roleHeading":"Class","role":"symbol","title":"SyntaxArena","symbolKind":"class","externalID":"s:11SwiftSyntax0B5ArenaC","modules":[{"name":"SwiftSyntax"}],"navigatorTitle":[{"text":"SyntaxArena","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxArena","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxArena"}]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The following is only relevant if you are accessing the raw syntax tree using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"RawSyntax"},{"type":"text","text":" nodes. When working with syntax trees using SwiftSyntax’s API,"},{"type":"text","text":" "},{"text":"the usage of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","type":"reference"},{"type":"text","text":" is transparent."}],"type":"paragraph"},{"inlineContent":[{"text":"Contrary to Swift’s usual memory model, syntax node’s are not individually","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reference-counted. Instead, they live in an arena. That arena allocates a"},{"text":" ","type":"text"},{"text":"chunk of memory at a time, which it can then use to store syntax nodes in.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This way, only a single memory allocation needs to be performed for multiple"},{"text":" ","type":"text"},{"type":"text","text":"syntax nodes and since memory allocations have a non-trivial cost, this"},{"type":"text","text":" "},{"type":"text","text":"significantly speeds up parsing."}],"type":"paragraph"},{"inlineContent":[{"text":"As a consequence, syntax nodes cannot be freed individually but the memory","type":"text"},{"type":"text","text":" "},{"text":"will get freed once the owning ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","type":"reference"},{"type":"text","text":" gets freed. Thus, it needs to"},{"type":"text","text":" "},{"text":"be manually ensured that the ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true,"type":"reference"},{"text":" is not deallocated while any","type":"text"},{"text":" ","type":"text"},{"text":"of its nodes are being accessed. The ","type":"text"},{"type":"codeVoice","code":"SyntaxData"},{"text":" type ensures this as","type":"text"},{"text":" ","type":"text"},{"text":"follows:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The root node has a strong reference to its "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Each node retains its parent ","type":"text"},{"type":"codeVoice","code":"SyntaxData"},{"text":", thus keeping it alive.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If any node is allocated within a different "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true},{"type":"text","text":",  that arena"},{"text":" ","type":"text"},{"type":"text","text":"is added to the root’s "},{"type":"codeVoice","code":"childRefs"},{"type":"text","text":" property and thus kept a live as long"},{"type":"text","text":" "},{"type":"text","text":"as the parent tree is alive."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"As an added benefit of the "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","type":"reference"},{"type":"text","text":", "},{"type":"codeVoice","code":"RawSyntax"},{"text":" nodes don’t need to","type":"text"},{"type":"text","text":" "},{"text":"be reference-counted, further improving the performance of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"when worked with at that level."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"A syntax arena owns the memory for all syntax nodes within it.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena\/init()"]}],"variants":[{"paths":["\/documentation\/swiftsyntax\/syntaxarena"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena"},"relationshipsSections":[{"type":"inheritedBy","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ParsingSyntaxArena"],"title":"Inherited By","kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ParsingSyntaxArena":{"type":"topic","abstract":[{"text":"SyntaxArena for parsing.","type":"text"}],"title":"ParsingSyntaxArena","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParsingSyntaxArena"}],"url":"\/documentation\/swiftsyntax\/parsingsyntaxarena","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ParsingSyntaxArena","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ParsingSyntaxArena","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxArena":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxArena"}],"url":"\/documentation\/swiftsyntax\/syntaxarena","abstract":[{"text":"A syntax arena owns the memory for all syntax nodes within it.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxArena"}],"kind":"symbol","role":"symbol","title":"SyntaxArena","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxArena/init()":{"type":"topic","abstract":[{"text":"Construct a new ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena","isActive":true},{"type":"text","text":" in which syntax nodes can be allocated."}],"title":"init()","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxarena\/init()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxArena\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}]}}}