{"metadata":{"roleHeading":"API Collection","title":"SyntaxProtocol Implementations","role":"collectionGroup","modules":[{"name":"SwiftSyntax"}]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"kind":"article","topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-73pbn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-n80"]},{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedRange"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-21gt5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-4h2u0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-5zv18","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-17eyf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-1afnx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-2jgin","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-39kb9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3a1lr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3nu9d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-41ajz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-46n9m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-47wgz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-55al3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6esiq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6n3l0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-714j6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-9xqdj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-5qqab","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-7petv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-9cee2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-4p96k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-611gj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-9068v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-1a1gr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-23d2x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-2xm7n","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-3zjei","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-54vpb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-58ztc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-5l6zw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-611d8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6ph86","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6zw2i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-89snu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-9mwk1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-br0j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-k2nw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/write(to:)"]},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/structure"],"anchor":"Type-Properties","title":"Type Properties"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-2xm7n":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-2xm7n","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-2xm7n","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-9mwk1":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-9mwk1","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-9mwk1","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/position":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/position","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/position","role":"symbol","title":"position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-714j6":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-714j6","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-714j6","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/positionAfterSkippingLeadingTrivia":{"title":"positionAfterSkippingLeadingTrivia","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/previousToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken","type":"topic","kind":"symbol","title":"previousToken","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/previoustoken","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-6esiq":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-6esiq","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6esiq","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-3nu9d":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3nu9d","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-3nu9d","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/is(_:)-4p96k":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/is(_:)-4p96k","deprecated":true,"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-4p96k","type":"topic","title":"is(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedLength":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedLength","kind":"symbol","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"title":"trimmedLength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/range":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/range","kind":"symbol","role":"symbol","title":"range","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"range","kind":"identifier"},{"kind":"text","text":": "},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/leadingTrivia":{"title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTrivia","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/leadingtrivia","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedByteRange":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmedbyterange","type":"topic","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedByteRange","kind":"symbol","title":"trimmedByteRange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-6ph86":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-6ph86","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6ph86","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/as(_:)-5zv18":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/as(_:)-5zv18","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-5zv18","type":"topic","title":"as(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/cast(_:)-5qqab":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-5qqab","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/cast(_:)-5qqab","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"type":"topic","title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-3zjei":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-3zjei","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-3zjei","title":"isProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/syntaxNodeType":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/syntaxnodetype","role":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":".Type","kind":"text"}],"kind":"symbol","title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/index":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The index of this node in a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true,"type":"reference"},{"type":"text","text":" collection."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/index","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/index","title":"index","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier","text":"SyntaxChildrenIndex"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/syntaxTextBytes":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/syntaxtextbytes","title":"syntaxTextBytes","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/syntaxTextBytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/root":{"role":"symbol","kind":"symbol","title":"root","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/root","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-54vpb":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-54vpb","kind":"symbol","role":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-54vpb"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/nextToken(viewMode:)":{"type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/nexttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken(viewMode:)","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-1afnx":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-1afnx","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-1afnx","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/detached":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/detached","title":"detached","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/totalLength":{"kind":"symbol","type":"topic","role":"symbol","title":"totalLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalLength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/totallength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasWarning":{"role":"symbol","kind":"symbol","title":"hasWarning","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/haswarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true,"type":"reference"},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/as(_:)-4h2u0":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/as(_:)-4h2u0","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-4h2u0","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"title":"as(_:)","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/parent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/parent","role":"symbol","type":"topic","abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"title":"parent","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/parent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-5l6zw":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-5l6zw","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-5l6zw","kind":"symbol","type":"topic","title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken(viewMode:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/firsttoken(viewmode:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"title":"firstToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/keyPathInParent":{"kind":"symbol","abstract":[],"title":"keyPathInParent","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/keyPathInParent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/nextToken":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/nexttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/nextToken","kind":"symbol","abstract":[],"title":"nextToken","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmed":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmed","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed","role":"symbol","type":"topic","title":"trimmed","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trailingTriviaLength":{"kind":"symbol","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"title":"trailingTriviaLength","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTriviaLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/kind":{"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"kind","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-k2nw":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-k2nw","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-k2nw","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/endPosition":{"abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/endposition","title":"endPosition","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPosition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-89snu":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-89snu","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-89snu","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/is(_:)-9068v":{"kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"title":"is(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/is(_:)-9068v","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-9068v","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/id":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/id","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/id","kind":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"title":"id","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/cast(_:)-9cee2":{"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-9cee2","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/cast(_:)-9cee2","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node.."}],"title":"cast(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-47wgz":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-47wgz","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-47wgz","type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasSequenceExpr":{"title":"hasSequenceExpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/hassequenceexpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-611d8":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-611d8","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-611d8","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/lastToken":{"abstract":[],"type":"topic","role":"symbol","title":"lastToken","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/lasttoken","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasParent":{"abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasParent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","title":"hasParent","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/hasparent","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-17eyf":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-17eyf","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-17eyf","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/endLocation(converter:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/endlocation(converter:aftertrailingtrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endLocation(converter:afterTrailingTrivia:)","title":"endLocation(converter:afterTrailingTrivia:)","role":"symbol","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-46n9m":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-46n9m","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-46n9m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/lastToken(viewMode:)":{"abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"kind":"symbol","title":"lastToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/lastToken(viewMode:)","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/lasttoken(viewmode:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/ancestorOrSelf(mapping:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"ancestorOrSelf","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"mapping","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/ancestororself(mapping:)","title":"ancestorOrSelf(mapping:)","abstract":[{"text":"Returns this node or the first ancestor that satisfies ","type":"text"},{"type":"codeVoice","code":"condition"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/ancestorOrSelf(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-58ztc":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-58ztc","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-58ztc","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/previousToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/previousToken(viewMode:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"title":"previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/previoustoken(viewmode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/tokens(viewMode:)":{"abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/tokens(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasMaximumNestingLevelOverflow","type":"topic","kind":"symbol","title":"hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/hasmaximumnestingleveloverflow","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/startLocation(converter:afterLeadingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/startlocation(converter:afterleadingtrivia:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/structure":{"abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/structure","title":"structure","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/structure","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxNodeStructure","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/with(_:_:)":{"role":"symbol","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"with(_:_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/with(_:_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSize","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/bytesize","deprecated":true,"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"title":"byteSize","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-6n3l0":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-6n3l0","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-6n3l0","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/init(_:)-n80":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-n80","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/init(_:)-n80","title":"init(_:)","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-3a1lr":{"role":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-3a1lr","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-3a1lr","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/firstToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/firstToken","title":"firstToken","abstract":[],"deprecated":true,"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/firsttoken","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/node(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/node(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/node(at:)","kind":"symbol","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"title":"node(at:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/children(viewMode:)":{"kind":"symbol","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"title":"children(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/children(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/children(viewMode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-55al3":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-55al3","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-55al3","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/hasError":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/hasError","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasError","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/haserror","type":"topic","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/byteSizeAfterTrimmingTrivia":{"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteSizeAfterTrimmingTrivia","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"byteSizeAfterTrimmingTrivia","deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/bytesizeaftertrimmingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/detach()":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/detach()","kind":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/detach()","title":"detach()","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-9xqdj":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-9xqdj","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-9xqdj","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/description":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/description","title":"description","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/as(_:)-21gt5":{"deprecated":true,"type":"topic","title":"as(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/as(_:)-21gt5","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"type":"text","text":" node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/as(_:)-21gt5","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-1a1gr":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-1a1gr","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-1a1gr","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isImplicit":{"type":"topic","kind":"symbol","title":"isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isimplicit","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isImplicit","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmed(matching:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmed(matching:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmed(matching:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"trimmed(matching:)","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-41ajz":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-41ajz","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-41ajz","role":"symbol","title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-2jgin":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-2jgin","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-2jgin","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedDescription":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmeddescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"kind":"symbol","role":"symbol","title":"trimmedDescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/cast(_:)-7petv":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/cast(_:)-7petv","kind":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/cast(_:)-7petv","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-6zw2i":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-6zw2i","type":"topic","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-6zw2i","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/init(_:)-73pbn":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/init(_:)-73pbn","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/init(_:)-73pbn","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"title":"init(_:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Children"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","kind":"typeIdentifier","text":"Children"},{"kind":"text","text":")"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/leadingTriviaLength":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/leadingTriviaLength","title":"leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/leadingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-br0j":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-br0j","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-br0j","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/is(_:)-611gj":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"text":" node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/is(_:)-611gj","title":"is(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/is(_:)-611gj","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/endPositionBeforeTrailingTrivia","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/endpositionbeforetrailingtrivia","kind":"symbol","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"title":"endPositionBeforeTrailingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/token(at:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"title":"token(at:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedDescription(matching:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmeddescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedDescription(matching:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"trimmedDescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"type":"topic","kind":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indentString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/asProtocol(_:)-39kb9":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/asprotocol(_:)-39kb9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/asProtocol(_:)-39kb9","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/debugDescription":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/debugdescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/debugDescription","role":"symbol","title":"debugDescription","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trailingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trailingTrivia","kind":"symbol","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"title":"trailingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/write(to:)":{"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/write(to:)","role":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"title":"write(to:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/write(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"text":")","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","kind":"typeIdentifier","text":"SourceRange"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","role":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","type":"topic","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/byteRange":{"type":"topic","abstract":[],"deprecated":true,"title":"byteRange","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/byterange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/byteRange","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/totalByteRange":{"kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"title":"totalByteRange","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/totalbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/totalByteRange","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/contentLength":{"title":"contentLength","abstract":[],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/contentLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/contentlength","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ConditionElementListSyntax","kind":"identifier"}],"title":"ConditionElementListSyntax","navigatorTitle":[{"text":"ConditionElementListSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/isProtocol(_:)-23d2x":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/isprotocol(_:)-23d2x","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/isProtocol(_:)-23d2x","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementListSyntax/trimmedRange":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementlistsyntax\/trimmedrange","kind":"symbol","abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"text":">","kind":"text"}],"title":"trimmedRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementListSyntax\/trimmedRange"}}}