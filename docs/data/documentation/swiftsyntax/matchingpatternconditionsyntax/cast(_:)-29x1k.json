{"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MatchingPatternConditionSyntax\/cast(_:)-29x1k","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}],"variants":[{"paths":["\/documentation\/swiftsyntax\/matchingpatternconditionsyntax\/cast(_:)-29x1k"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"metadata":{"extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax024MatchingPatternConditionB0V","symbolKind":"method","role":"symbol","modules":[{"name":"SwiftSyntax"}],"title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"}],"platforms":[{"unavailable":false,"message":"This cast will always fail","beta":false,"deprecated":true}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MatchingPatternConditionSyntax"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will always trigger a runtime crash and never return."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"content":[{"inlineContent":[{"text":"This method overloads the general ","type":"text"},{"code":"cast","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always fail."}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"},{"name":"Warning","style":"warning","type":"aside","content":[{"inlineContent":[{"text":"Invoking this method will lead to a fatal error.","type":"text"}],"type":"paragraph"}]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always fail"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MatchingPatternConditionSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MatchingPatternConditionSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/matchingpatternconditionsyntax","navigatorTitle":[{"text":"MatchingPatternConditionSyntax","kind":"identifier"}],"title":"MatchingPatternConditionSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MatchingPatternConditionSyntax","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MatchingPatternConditionSyntax/cast(_:)-29x1k":{"deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/matchingpatternconditionsyntax\/cast(_:)-29x1k","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MatchingPatternConditionSyntax\/cast(_:)-29x1k","role":"symbol","title":"cast(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"}],"abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}