{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"platforms":["macOS"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Sequence.Element"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Enumeration","navigatorTitle":[{"kind":"identifier","text":"Element"}],"title":"TypeSpecifierListSyntax.Element","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"externalID":"s:11SwiftSyntax017TypeSpecifierListB0V7ElementO","modules":[{"name":"SwiftSyntax"}],"role":"symbol"},"topicSections":[{"title":"Enumeration Cases","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/simpleTypeSpecifier(_:)"],"anchor":"Enumeration-Cases"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/init(_:)-18tcv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/init(_:)-1ulj8"],"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/as(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/cast(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/is(_:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"generated":true,"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/structure"]},{"anchor":"Default-Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/SyntaxChildChoices-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/SyntaxProtocol-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxChildChoices"}],"title":"SyntaxChildChoices","url":"\/documentation\/swiftsyntax\/syntaxchildchoices","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildChoices"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","abstract":[{"text":"Protocol for the enums nested inside ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" nodes that enumerate all the"},{"text":" ","type":"text"},{"text":"possible types a child node might have.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/init(_:)-18tcv":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/init(_:)-18tcv","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/init(_:)-18tcv","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"SimpleTypeSpecifierSyntax","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/SyntaxProtocol-Implementations":{"url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/SyntaxProtocol-Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/CustomReflectable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/CustomReflectable-Implementations","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/customreflectable-implementations","kind":"article","abstract":[],"type":"topic","title":"CustomReflectable Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/Equatable-Implementations":{"url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/equatable-implementations","title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/Equatable-Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/cast(_:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/cast(_:)","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/cast(_:)","kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax"}],"title":"cast(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/simpleTypeSpecifier(_:)":{"url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/simpletypespecifier(_:)","title":"TypeSpecifierListSyntax.Element.simpleTypeSpecifier(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"simpleTypeSpecifier"},{"kind":"text","text":"("},{"text":"SimpleTypeSpecifierSyntax","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/simpleTypeSpecifier(_:)","abstract":[{"type":"text","text":"A specifier that can be attached to a type to eg. mark a parameter as "},{"type":"codeVoice","code":"inout"},{"type":"text","text":" or "},{"code":"consuming","type":"codeVoice"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"kind":"symbol","title":"SyntaxHashable","role":"symbol","abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}],"url":"\/documentation\/swiftsyntax\/syntaxhashable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxHashable"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/structure":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier","text":"SyntaxNodeStructure"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/structure","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/structure","title":"structure","role":"symbol","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax":{"abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TypeSpecifierListSyntax","kind":"identifier"}],"type":"topic","title":"TypeSpecifierListSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeSpecifierListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/init(_:)-1ulj8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/init(_:)-1ulj8","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/init(_:)-1ulj8","kind":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":")","kind":"text"}],"title":"init(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/Hashable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/Hashable-Implementations","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/hashable-implementations","kind":"article","abstract":[],"type":"topic","title":"Hashable Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleTypeSpecifierSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SimpleTypeSpecifierSyntax","kind":"identifier"}],"title":"SimpleTypeSpecifierSyntax","kind":"symbol","type":"topic","abstract":[{"text":"A specifier that can be attached to a type to eg. mark a parameter as ","type":"text"},{"type":"codeVoice","code":"inout"},{"type":"text","text":" or "},{"type":"codeVoice","code":"consuming"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax","navigatorTitle":[{"kind":"identifier","text":"SimpleTypeSpecifierSyntax"}],"url":"\/documentation\/swiftsyntax\/simpletypespecifiersyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/SyntaxChildChoices-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/SyntaxChildChoices-Implementations","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/syntaxchildchoices-implementations","kind":"article","abstract":[],"type":"topic","title":"SyntaxChildChoices Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/as(_:)":{"url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/as(_:)","title":"as(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/as(_:)","abstract":[{"text":"Attempts to cast the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax"},{"type":"text","text":"."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element/is(_:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element\/is(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SimpleTypeSpecifierSyntax","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleTypeSpecifierSyntax","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element\/is(_:)"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSpecifierListSyntax/Element":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"title":"TypeSpecifierListSyntax.Element","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Element"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSpecifierListSyntax\/Element","url":"\/documentation\/swiftsyntax\/typespecifierlistsyntax\/element","role":"symbol","abstract":[]}}}