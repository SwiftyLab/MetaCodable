{"sections":[],"kind":"article","metadata":{"modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection","role":"collectionGroup","title":"SyntaxProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/init(_:)-2bwro"],"anchor":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedRange"],"anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/as(_:)-2diln","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/as(_:)-5wmhf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/as(_:)-60hg3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-2f5bl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-3sfg6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-4dzj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-5u46r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-62dzp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-64e47","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-6a895","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-7bp3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-7j4xg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-84du7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-8dh5i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-8wjf6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-9bd3i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-9xlcx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-7zu9g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-9nnpv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-9wcbi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/is(_:)-3aec6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/is(_:)-8dh0l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/is(_:)-8rrfu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-3ozms","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-3zxpu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-42txy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-4qe5o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-4uewg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-5b20v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-5zhlr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-73mc7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-7gud8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-7u14l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-9c8x6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-9e1f4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-9ge0w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-wzbt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/write(to:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/SyntaxProtocol-Implementations"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/init(_:)-2bwro":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/init(_:)-2bwro","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/init(_:)-2bwro","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"kind":"symbol","type":"topic","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isImplicit":{"abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"title":"isImplicit","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isImplicit","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isimplicit","deprecated":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-9e1f4":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-9e1f4","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-9e1f4","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/keyPathInParent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/keyPathInParent","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/keypathinparent","role":"symbol","abstract":[],"kind":"symbol","type":"topic","title":"keyPathInParent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/is(_:)-8dh0l":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/is(_:)-8dh0l","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/is(_:)-8dh0l","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","type":"topic","title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/as(_:)-2diln":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/as(_:)-2diln","title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/as(_:)-2diln","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-5u46r":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-5u46r","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-5u46r","title":"asProtocol(_:)","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmedLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedLength","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmedlength","role":"symbol","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"kind":"symbol","type":"topic","title":"trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/as(_:)-5wmhf":{"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/as(_:)-5wmhf","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/as(_:)-5wmhf","role":"symbol","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmedDescription(matching:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedDescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmeddescription(matching:)","title":"trimmedDescription(matching:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-7u14l":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-7u14l","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-7u14l","title":"isProtocol(_:)","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/cast(_:)-9nnpv":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/cast(_:)-9nnpv","title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-9nnpv","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-64e47":{"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-64e47","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-64e47","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/hasWarning":{"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"text":".","type":"text"}],"title":"hasWarning","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasWarning","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/haswarning","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmedDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedDescription","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmeddescription","role":"symbol","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"kind":"symbol","type":"topic","title":"trimmedDescription","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/debugDescription(includeTrivia:converter:mark:indentString:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/debugDescription(includeTrivia:converter:mark:indentString:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/debugdescription(includetrivia:converter:mark:indentstring:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/totalLength":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/totallength","title":"totalLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/totalLength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/cast(_:)-7zu9g":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-7zu9g","deprecated":true,"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/cast(_:)-7zu9g","role":"symbol","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"kind":"symbol","type":"topic","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-9bd3i":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-9bd3i","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-9bd3i","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-7j4xg":{"title":"asProtocol(_:)","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-7j4xg","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-7j4xg"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/range":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/range","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/range","role":"symbol","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"kind":"symbol","type":"topic","title":"range","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"range","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"kind":"text","text":">"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/firstToken":{"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/firsttoken","title":"firstToken","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/firstToken","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-7gud8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-7gud8","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-7gud8","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-42txy":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-42txy","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-42txy","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-8dh5i":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-8dh5i","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-8dh5i","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/syntaxNodeType":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/syntaxNodeType","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/syntaxnodetype","title":"syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":".Type"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-5zhlr":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-5zhlr","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-5zhlr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isProtocol(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-9xlcx":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-9xlcx","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-9xlcx","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-3zxpu":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","title":"isProtocol(_:)","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-3zxpu","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-3zxpu"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/node(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"node(at:)","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/node(at:)","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/previousToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/previousToken","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/previoustoken","type":"topic","kind":"symbol","title":"previousToken","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/detach()":{"title":"detach()","deprecated":true,"role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/detach()","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/detach()","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/is(_:)-3aec6":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/is(_:)-3aec6","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/is(_:)-3aec6","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"is(_:)","deprecated":true,"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-4qe5o":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-4qe5o","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-4qe5o","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmed(matching:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmed(matching:)","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"trimmed(matching:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-4dzj":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-4dzj","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-4dzj","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/byteRange":{"title":"byteRange","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/byteRange","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/byterange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/index":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/index","title":"index","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference"},{"type":"text","text":" collection."}],"type":"topic","role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/as(_:)-60hg3":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/as(_:)-60hg3","abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/as(_:)-60hg3","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"title":"as(_:)","deprecated":true,"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/lastToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/lastToken(viewMode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/lasttoken(viewmode:)","title":"lastToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-3ozms":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-3ozms","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-3ozms","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/parent":{"title":"parent","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/parent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-62dzp":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-62dzp","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-62dzp","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/with(_:_:)":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"kind":"text","text":">, "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"with(_:_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/with(_:_:)","role":"symbol","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-8wjf6":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-8wjf6","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-8wjf6","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/nextToken":{"abstract":[],"type":"topic","title":"nextToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/nextToken","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/nexttoken","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-5b20v":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-5b20v","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-5b20v","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/positionAfterSkippingLeadingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/positionAfterSkippingLeadingTrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/positionafterskippingleadingtrivia","title":"positionAfterSkippingLeadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/root":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/root","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/root","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"title":"root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/kind":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/kind","title":"kind","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/lastToken":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/lastToken","title":"lastToken","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/lasttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/hasSequenceExpr":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/hassequenceexpr","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasSequenceExpr","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/contentLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/contentLength","abstract":[],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/contentlength","deprecated":true,"title":"contentLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DifferentiabilityWithRespectToArgumentSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax","title":"DifferentiabilityWithRespectToArgumentSyntax","navigatorTitle":[{"text":"DifferentiabilityWithRespectToArgumentSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A clause containing differentiability parameters."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/byteSizeAfterTrimmingTrivia":{"role":"symbol","title":"byteSizeAfterTrimmingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/byteSizeAfterTrimmingTrivia","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/bytesizeaftertrimmingtrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/children(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/children(viewMode:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/children(viewmode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"title":"children(viewMode:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/cast(_:)-9wcbi":{"deprecated":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/cast(_:)-9wcbi","kind":"symbol","title":"cast(_:)","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-9wcbi","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/token(at:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/token(at:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"token(at:)","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/detached":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/detached","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/detached","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"title":"detached","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-7bp3":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-7bp3","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-7bp3","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/hasParent":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"title":"hasParent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasParent","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/hasparent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/write(to:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/write(to:)","kind":"symbol","role":"symbol","title":"write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Target"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/is(_:)-8rrfu":{"title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"kind":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/is(_:)-8rrfu","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/is(_:)-8rrfu","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/byteSize":{"role":"symbol","kind":"symbol","title":"byteSize","deprecated":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/bytesize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-4uewg":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-4uewg","kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-4uewg","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/previousToken(viewMode:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/previoustoken(viewmode:)","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"previousToken(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/startLocation(converter:afterLeadingTrivia:)":{"abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/startlocation(converter:afterleadingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/startLocation(converter:afterLeadingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-9ge0w":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-9ge0w","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-9ge0w","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-wzbt":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-wzbt","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-wzbt","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/debugDescription":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/debugdescription","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/debugDescription","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"debugDescription","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-3sfg6":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-3sfg6","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-3sfg6","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/position":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/position","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"title":"position","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmedRange":{"title":"trimmedRange","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedRange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmedrange","abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/nextToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/nexttoken(viewmode:)","title":"nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/totalByteRange":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/totalbyterange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/totalByteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"title":"totalByteRange","deprecated":true,"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmed","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"title":"trimmed","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trimmedByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trimmedbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trimmedByteRange","title":"trimmedByteRange","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-73mc7":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-73mc7","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-73mc7","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-6a895":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-6a895","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-6a895","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/endPosition":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/endPosition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/endposition","title":"endPosition","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/leadingTrivia":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"title":"leadingTrivia","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/leadingtrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/hasMaximumNestingLevelOverflow":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/hasmaximumnestingleveloverflow","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasMaximumNestingLevelOverflow","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasMaximumNestingLevelOverflow","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/description":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/description","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"title":"description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/ancestorOrSelf(mapping:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/ancestorOrSelf(mapping:)","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"code":"condition","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/ancestororself(mapping:)","title":"ancestorOrSelf(mapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ancestorOrSelf"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"mapping","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"text":"?) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum","title":"DifferentiabilityWithRespectToArgumentSyntax.Arguments","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Arguments","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Arguments","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/syntaxTextBytes":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/syntaxtextbytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/syntaxTextBytes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/firstToken(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/firstToken(viewMode:)","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/firsttoken(viewmode:)","title":"firstToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trailingTrivia":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trailingtrivia","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"title":"trailingTrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/tokens(viewMode:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/tokens(viewMode:)","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/tokens(viewmode:)","kind":"symbol","title":"tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier","text":"TokenSequence"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/trailingTriviaLength":{"abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"type":"topic","role":"symbol","title":"trailingTriviaLength","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/trailingTriviaLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/id":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/id","title":"id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/id","kind":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-2f5bl":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-2f5bl","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-2f5bl","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/isProtocol(_:)-9c8x6":{"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/isprotocol(_:)-9c8x6","title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/isProtocol(_:)-9c8x6","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/endPositionBeforeTrailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","title":"endPositionBeforeTrailingTrivia","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/endpositionbeforetrailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/hasError":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/haserror","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/hasError","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasError","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/leadingTriviaLength":{"title":"leadingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/leadingTriviaLength","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/leadingtrivialength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/asProtocol(_:)-84du7":{"type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/asprotocol(_:)-84du7","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/asProtocol(_:)-84du7","role":"symbol","kind":"symbol"}}}