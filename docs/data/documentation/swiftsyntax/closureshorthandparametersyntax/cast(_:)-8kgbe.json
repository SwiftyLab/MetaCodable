{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyAA0B0VAFmF::SYNTHESIZED::s:11SwiftSyntax025ClosureShorthandParameterB0V","platforms":[{"deprecated":true,"message":"Use `Syntax.init` for upcasting.","unavailable":false,"beta":false}],"extendedModule":"SwiftSyntax","modules":[{"name":"SwiftSyntax"}],"title":"cast(_:)","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","kind":"typeIdentifier","text":"Syntax"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"text":" node created from the current syntax node, as the node can always be upcast to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"This method overloads the general ","type":"text"},{"code":"as","type":"codeVoice"},{"type":"text","text":" method and is marked deprecated to produce a warning"},{"text":" ","type":"text"},{"text":"informing the user the upcast should be performed using the base nodeâ€™s initializer.","type":"text"}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/closureshorthandparametersyntax\/cast(_:)-8kgbe"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterSyntax\/cast(_:)-8kgbe"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterSyntax"]]},"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node.."}],"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `Syntax.init` for upcasting."}],"type":"paragraph"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureShorthandParameterSyntax/cast(_:)-8kgbe":{"type":"topic","url":"\/documentation\/swiftsyntax\/closureshorthandparametersyntax\/cast(_:)-8kgbe","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node..","type":"text"}],"kind":"symbol","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterSyntax\/cast(_:)-8kgbe","deprecated":true,"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureShorthandParameterSyntax":{"title":"ClosureShorthandParameterSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureShorthandParameterSyntax","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClosureShorthandParameterSyntax"}],"role":"symbol","navigatorTitle":[{"text":"ClosureShorthandParameterSyntax","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/closureshorthandparametersyntax"}}}