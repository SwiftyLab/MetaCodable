{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeSyntax\/cast(_:)-68ulg"},"abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeSyntax"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"This method will always trigger a runtime crash and never return.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"cast","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always fail.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Invoking this method will lead to a fatal error.","type":"text"}]}],"type":"aside","style":"warning","name":"Warning"}]}],"sections":[],"variants":[{"paths":["\/documentation\/swiftsyntax\/inheritedtypesyntax\/cast(_:)-68ulg"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"title":"cast(_:)","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax013InheritedTypeB0V","platforms":[{"beta":false,"deprecated":true,"unavailable":false,"message":"This cast will always fail"}],"modules":[{"name":"SwiftSyntax"}]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always fail"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InheritedTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeSyntax","title":"InheritedTypeSyntax","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"InheritedTypeSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InheritedTypeSyntax"}],"url":"\/documentation\/swiftsyntax\/inheritedtypesyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InheritedTypeSyntax/cast(_:)-68ulg":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeSyntax\/cast(_:)-68ulg","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"}],"role":"symbol","abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}],"title":"cast(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/inheritedtypesyntax\/cast(_:)-68ulg","deprecated":true,"kind":"symbol"}}}