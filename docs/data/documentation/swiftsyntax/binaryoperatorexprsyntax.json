{"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"kind":"symbol","abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operator:_:trailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operatorToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperatorToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperatorToken"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/structure"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/ExprSyntaxProtocol-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"This node represents the binary operator itself. It can occur inside a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax","isActive":true},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"after parsing and will be the ","type":"text"},{"type":"codeVoice","code":"operator"},{"type":"text","text":" child of an "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax","type":"reference"},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"after folding operator using the "},{"code":"SwiftOperators","type":"codeVoice"},{"type":"text","text":" library."}],"type":"paragraph"},{"level":3,"anchor":"Children","type":"heading","text":"Children"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"operator","type":"codeVoice"},{"type":"text","text":": "},{"type":"codeVoice","code":"<binaryOperator>"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"roleHeading":"Structure","navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"title":"BinaryOperatorExprSyntax","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"externalID":"s:11SwiftSyntax018BinaryOperatorExprB0V","modules":[{"name":"SwiftSyntax"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/binaryoperatorexprsyntax"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/syntaxprotocol-implementations","role":"collectionGroup","abstract":[]},"doc://com.SwiftyLab.HelperCoders/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/init(leadingTrivia:_:operator:_:trailingTrivia:)":{"title":"init(leadingTrivia:_:operator:_:trailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operator:_:trailingTrivia:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/init(leadingtrivia:_:operator:_:trailingtrivia:)","role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"operator"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/operator":{"title":"operator","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operator","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/operator","role":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"`operator`","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"kind":"symbol","title":"SyntaxHashable","role":"symbol","abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}],"url":"\/documentation\/swiftsyntax\/syntaxhashable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxHashable"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SequenceExprSyntax":{"navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/sequenceexprsyntax","title":"SequenceExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Equatable-Implementations","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/equatable-implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","type":"unresolvable","title":"Swift.TextOutputStreamable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedBeforeOperator":{"title":"unexpectedBeforeOperator","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperator","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedbeforeoperator","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBeforeOperator","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/init(_:)","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(_:)","title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/Hashable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/Hashable-Implementations","title":"Hashable Implementations","abstract":[],"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/hashable-implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedBeforeOperatorToken":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBeforeOperatorToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedbeforeoperatortoken","abstract":[],"deprecated":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedBeforeOperatorToken","title":"unexpectedBeforeOperatorToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/operatorToken":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/operatorToken","deprecated":true,"title":"operatorToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"operatorToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/operatortoken","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/ExprSyntaxProtocol-Implementations":{"role":"collectionGroup","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/exprsyntaxprotocol-implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/ExprSyntaxProtocol-Implementations","title":"ExprSyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedAfterOperatorToken":{"role":"symbol","title":"unexpectedAfterOperatorToken","kind":"symbol","deprecated":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedAfterOperatorToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedafteroperatortoken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperatorToken"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"url":"\/documentation\/swiftsyntax\/exprsyntax","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","role":"symbol","title":"ExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/unexpectedAfterOperator":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedAfterOperator"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/unexpectedAfterOperator","role":"symbol","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/unexpectedafteroperator","title":"unexpectedAfterOperator","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"kind":"symbol","abstract":[{"text":"Protocol to which all ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax"},{"text":" nodes conform.","type":"text"}],"title":"ExprSyntaxProtocol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/init(leadingtrivia:_:operatortoken:_:trailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","title":"init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"operatorToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"trailingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[],"deprecated":true,"role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/structure":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/structure","type":"topic","title":"structure","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/structure","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax":{"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax","type":"topic","title":"BinaryOperatorExprSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax","abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InfixOperatorExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/infixoperatorexprsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax","title":"InfixOperatorExprSyntax","role":"symbol","abstract":[{"text":"An infix operator call like ","type":"text"},{"type":"codeVoice","code":"1 + 2"},{"type":"text","text":"."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BinaryOperatorExprSyntax/CustomReflectable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BinaryOperatorExprSyntax\/CustomReflectable-Implementations","title":"CustomReflectable Implementations","abstract":[],"url":"\/documentation\/swiftsyntax\/binaryoperatorexprsyntax\/customreflectable-implementations","role":"collectionGroup"}}}