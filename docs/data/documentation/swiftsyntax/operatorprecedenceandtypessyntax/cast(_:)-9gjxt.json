{"metadata":{"modules":[{"name":"SwiftSyntax"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","platforms":[{"beta":false,"unavailable":false,"message":"This cast will always fail","deprecated":true}],"role":"symbol","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax026OperatorPrecedenceAndTypesB0V","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"symbolKind":"method","title":"cast(_:)"},"abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax"]]},"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always fail","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/cast(_:)-9gjxt"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/cast(_:)-9gjxt"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"SyntaxProtocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"This method will always trigger a runtime crash and never return.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"cast"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"text":"informing the user that the cast will always fail.","type":"text"}]}],"name":"Note","type":"aside"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"Invoking this method will lead to a fatal error."}],"type":"paragraph"}],"name":"Warning","style":"warning"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax/cast(_:)-9gjxt":{"type":"topic","url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax\/cast(_:)-9gjxt","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax\/cast(_:)-9gjxt","abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"}],"kind":"symbol","deprecated":true,"title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OperatorPrecedenceAndTypesSyntax":{"url":"\/documentation\/swiftsyntax\/operatorprecedenceandtypessyntax","navigatorTitle":[{"kind":"identifier","text":"OperatorPrecedenceAndTypesSyntax"}],"abstract":[{"type":"text","text":"A clause to specify precedence group in infix operator declarations, and designated types in any operator declaration."}],"kind":"symbol","role":"symbol","title":"OperatorPrecedenceAndTypesSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OperatorPrecedenceAndTypesSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OperatorPrecedenceAndTypesSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}