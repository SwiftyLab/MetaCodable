{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":")","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Initializer","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"externalID":"s:11SwiftSyntax028DerivativeAttributeArgumentsB0VyACSgxhcAA0B8ProtocolRzlufc","symbolKind":"init"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/init(_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax":{"title":"DerivativeAttributeArgumentsSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax","abstract":[{"type":"text","text":"The arguments for the ‘@derivative(of:)’ and ‘@transpose(of:)’ attributes: the ‘of:’ label, the original declaration name, and an optional differentiability parameter list."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DerivativeAttributeArgumentsSyntax"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DerivativeAttributeArgumentsSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DerivativeAttributeArgumentsSyntax/init(_:)":{"url":"\/documentation\/swiftsyntax\/derivativeattributeargumentssyntax\/init(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DerivativeAttributeArgumentsSyntax\/init(_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}