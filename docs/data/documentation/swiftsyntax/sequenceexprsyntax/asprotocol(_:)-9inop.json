{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/sequenceexprsyntax\/asprotocol(_:)-9inop"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithCodeBlockSyntax","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":"?","kind":"text"}],"languages":["swift"]}]}],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"symbolKind":"method","title":"asProtocol(_:)","roleHeading":"Instance Method","role":"symbol","extendedModule":"SwiftSyntax","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA013WithCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax012SequenceExprB0V"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax\/asProtocol(_:)-9inop"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SequenceExprSyntax":{"navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/sequenceexprsyntax","title":"SequenceExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/WithCodeBlockSyntax":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithCodeBlockSyntax"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithCodeBlockSyntax"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/withcodeblocksyntax","abstract":[],"title":"WithCodeBlockSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/WithCodeBlockSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SequenceExprSyntax/asProtocol(_:)-9inop":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SequenceExprSyntax\/asProtocol(_:)-9inop","kind":"symbol","url":"\/documentation\/swiftsyntax\/sequenceexprsyntax\/asprotocol(_:)-9inop","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}]}}}