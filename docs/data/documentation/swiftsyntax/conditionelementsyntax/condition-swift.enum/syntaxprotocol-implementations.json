{"kind":"article","sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/init(_:)-2aat"],"anchor":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedRange"],"anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-39sbx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-3h167","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-5igid","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-1w6kq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-2hre1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-370ps","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3hjo3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3px04","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-4iarp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-53228","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-5y3j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6k6u9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6tf4y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6y9r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7e1vv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7ti1m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-9mysk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-2idhb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-9n866","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-auk4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-3997i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-78vf9","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-9lxa4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-1lu55","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-2vdbe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-3e0to","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4s56j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4tqu1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-5uqxz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-65mmt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6m140","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6oyxs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6pi2d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-88ezp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-8k1sp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-9b65h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-k84t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/write(to:)"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/SyntaxProtocol-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedLength","kind":"symbol","role":"symbol","title":"trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmedlength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/id":{"title":"id","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"type":"topic","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-6k6u9":{"role":"symbol","title":"asProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6k6u9","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-6k6u9","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-8k1sp":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-8k1sp","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-8k1sp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/lastToken(viewMode:)":{"abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken(viewMode:)","title":"lastToken(viewMode:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/lasttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/keyPathInParent":{"role":"symbol","title":"keyPathInParent","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/keyPathInParent","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/keypathinparent","kind":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasSequenceExpr":{"title":"hasSequenceExpr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasSequenceExpr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/hassequenceexpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-9b65h":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-9b65h","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-9b65h","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasWarning":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasWarning","kind":"symbol","type":"topic","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasWarning","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/haswarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-k84t":{"role":"symbol","title":"isProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-k84t","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-k84t","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/nextToken":{"title":"nextToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/nexttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/debugDescription(includeTrivia:converter:mark:indentString:)":{"role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/debugdescription(includetrivia:converter:mark:indentstring:)","kind":"symbol","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/children(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/children(viewMode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"title":"children(viewMode:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/children(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/previousToken":{"title":"previousToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/previoustoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-4s56j":{"role":"symbol","title":"isProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4s56j","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-4s56j","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/byteSize":{"title":"byteSize","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSize","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"deprecated":true,"type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/bytesize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-6y9r":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-6y9r","role":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6y9r"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-6pi2d":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-6pi2d","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6pi2d","type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/contentLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/contentLength","type":"topic","title":"contentLength","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/contentlength","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isImplicit":{"role":"symbol","title":"isImplicit","type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isImplicit","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isimplicit","kind":"symbol","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/is(_:)-78vf9":{"title":"is(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-78vf9","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"deprecated":true,"type":"topic","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/is(_:)-78vf9"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-6tf4y":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-6tf4y","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-6tf4y"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/index":{"role":"symbol","title":"index","type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/index","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/index","kind":"symbol","abstract":[{"text":"The index of this node in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/totalByteRange":{"title":"totalByteRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalByteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"deprecated":true,"type":"topic","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/totalbyterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/as(_:)-3h167":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-3h167","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"kind":"symbol","title":"as(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/as(_:)-3h167"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/with(_:_:)":{"role":"symbol","title":"with(_:_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/with(_:_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/with(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmed(matching:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed(matching:)","type":"topic","role":"symbol","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"title":"trimmed(matching:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConditionElementSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ConditionElementSyntax"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax","title":"ConditionElementSyntax","role":"symbol","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trailingTrivia":{"abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trailingtrivia","title":"trailingTrivia","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTrivia","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-3e0to":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-3e0to","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-3e0to"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/startlocation(converter:afterleadingtrivia:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/root":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/root","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"role":"symbol","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/root","title":"root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/debugDescription":{"role":"symbol","title":"debugDescription","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/debugDescription","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/debugdescription","kind":"symbol","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/ancestorOrSelf(mapping:)":{"title":"ancestorOrSelf(mapping:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/ancestorOrSelf(mapping:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ancestorOrSelf"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mapping"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"type":"codeVoice","code":"condition"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/ancestororself(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/endLocation(converter:afterTrailingTrivia:)":{"role":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/endlocation(converter:aftertrailingtrivia:)","kind":"symbol","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-6m140":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6m140","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-6m140"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/node(at:)":{"role":"symbol","title":"node(at:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/node(at:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/node(at:)","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedDescription(matching:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmeddescription(matching:)","title":"trimmedDescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription(matching:)","kind":"symbol","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"text":" ","type":"text"},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-1w6kq":{"title":"asProtocol(_:)","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-1w6kq","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-1w6kq","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/totalLength":{"title":"totalLength","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/totalLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/totallength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/leadingTriviaLength":{"title":"leadingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/leadingtrivialength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-7ti1m":{"role":"symbol","title":"asProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7ti1m","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-7ti1m","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/as(_:)-39sbx":{"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-39sbx","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/as(_:)-39sbx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-88ezp":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-88ezp","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-88ezp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/description":{"role":"symbol","title":"description","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/description","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/description","kind":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-9mysk":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-9mysk","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-9mysk"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-3hjo3":{"title":"asProtocol(_:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3hjo3","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-3hjo3","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/endPositionBeforeTrailingTrivia":{"abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"title":"endPositionBeforeTrailingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPositionBeforeTrailingTrivia","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/endpositionbeforetrailingtrivia","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/syntaxNodeType":{"role":"symbol","title":"syntaxNodeType","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxNodeType","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/syntaxnodetype","kind":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasError":{"title":"hasError","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasError","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/haserror"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/tokens(viewMode:)":{"role":"symbol","title":"tokens(viewMode:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/tokens(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/tokens(viewmode:)","kind":"symbol","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/position":{"title":"position","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/position","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"type":"topic","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/firstToken":{"abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/firsttoken","role":"symbol","title":"firstToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-4iarp":{"role":"symbol","title":"asProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-4iarp","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-4iarp","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum","kind":"symbol","title":"ConditionElementSyntax.Condition","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Condition","kind":"identifier"}],"navigatorTitle":[{"text":"Condition","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-5y3j":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-5y3j","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-5y3j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-2idhb":{"role":"symbol","title":"cast(_:)","type":"topic","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-2idhb","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-2idhb","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/leadingTrivia":{"kind":"symbol","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/leadingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-53228":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-53228","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-53228"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmed","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmed","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"trimmed","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedDescription":{"role":"symbol","title":"trimmedDescription","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedDescription","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmeddescription","kind":"symbol","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"text":"and trailing whitespace of the last token removed.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/parent":{"title":"parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/parent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-65mmt":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-65mmt","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-65mmt","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-3px04":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-3px04","role":"symbol","title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-3px04"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/range":{"role":"symbol","title":"range","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"range"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/range","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/range","kind":"symbol","abstract":[{"text":"The range of this node including leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/detached":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"detached"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"kind":"symbol","role":"symbol","title":"detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detached","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-5uqxz":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-5uqxz","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-5uqxz"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/lastToken":{"title":"lastToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/lastToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/lasttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/byteSizeAfterTrimmingTrivia":{"role":"symbol","title":"byteSizeAfterTrimmingTrivia","type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/bytesizeaftertrimmingtrivia","kind":"symbol","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasMaximumNestingLevelOverflow","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/hasmaximumnestingleveloverflow","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/is(_:)-3997i":{"title":"is(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-3997i","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/is(_:)-3997i"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/hasParent":{"role":"symbol","title":"hasParent","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/hasParent","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/hasparent","kind":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedRange":{"title":"trimmedRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmedrange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-4tqu1":{"role":"symbol","title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-4tqu1","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-4tqu1","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}],"type":"topic","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/byteRange":{"role":"symbol","title":"byteRange","type":"topic","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier","text":"ByteSourceRange"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/byteRange","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/byterange","kind":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-370ps":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-370ps","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-370ps"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-2hre1":{"role":"symbol","title":"asProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-2hre1","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-2hre1","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/nextToken(viewMode:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/nexttoken(viewmode:)","kind":"symbol","role":"symbol","title":"nextToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/endPosition":{"title":"endPosition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/endPosition","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"type":"topic","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/endposition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/token(at:)":{"role":"symbol","title":"token(at:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/token(at:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/token(at:)","kind":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/positionAfterSkippingLeadingTrivia":{"title":"positionAfterSkippingLeadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/positionAfterSkippingLeadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"type":"topic","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/firstToken(viewMode:)":{"role":"symbol","title":"firstToken(viewMode:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/firsttoken(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/as(_:)-5igid":{"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/as(_:)-5igid","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/as(_:)-5igid"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/previousToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/previoustoken(viewmode:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/previousToken(viewMode:)","title":"previousToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/detach()":{"role":"symbol","title":"detach()","type":"topic","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/detach()","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/detach()","kind":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-1lu55":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-1lu55","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-1lu55"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trailingTriviaLength":{"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trailingtrivialength","title":"trailingTriviaLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trailingTriviaLength","kind":"symbol","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/is(_:)-9lxa4":{"role":"symbol","title":"is(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/is(_:)-9lxa4","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/is(_:)-9lxa4","kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/kind":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/kind","title":"kind","role":"symbol","type":"topic","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/kind","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/trimmedByteRange":{"title":"trimmedByteRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/trimmedByteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"kind":"text","text":": "},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/trimmedbyterange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/init(_:)-2aat":{"role":"symbol","title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/init(_:)-2aat","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/init(_:)-2aat","kind":"symbol","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-auk4":{"title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-auk4","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-auk4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/write(to:)":{"role":"symbol","title":"write(to:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Target"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/write(to:)","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/write(to:)","kind":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/cast(_:)-9n866":{"title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/cast(_:)-9n866","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node.."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/cast(_:)-9n866"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-2vdbe":{"role":"symbol","title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-2vdbe","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-2vdbe","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/asProtocol(_:)-7e1vv":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/asProtocol(_:)-7e1vv","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/asprotocol(_:)-7e1vv"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/isProtocol(_:)-6oyxs":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/isProtocol(_:)-6oyxs","title":"isProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/isprotocol(_:)-6oyxs"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConditionElementSyntax/Condition-swift.enum/syntaxTextBytes":{"role":"symbol","title":"syntaxTextBytes","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConditionElementSyntax\/Condition-swift.enum\/syntaxTextBytes","url":"\/documentation\/swiftsyntax\/conditionelementsyntax\/condition-swift.enum\/syntaxtextbytes","kind":"symbol","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}]}}}