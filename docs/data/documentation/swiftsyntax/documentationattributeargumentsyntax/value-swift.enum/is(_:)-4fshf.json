{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/documentationattributeargumentsyntax\/value-swift.enum\/is(_:)-4fshf"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always fail"}]}],"metadata":{"platforms":[{"deprecated":true,"message":"This cast will always fail","unavailable":false,"beta":false}],"externalID":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF::SYNTHESIZED::s:11SwiftSyntax030DocumentationAttributeArgumentB0V5ValueO","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"is(_:)","role":"symbol","extendedModule":"SwiftSyntax","symbolKind":"method"},"abstract":[{"type":"text","text":"Checks if the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices"},{"text":" instance can be cast to a given specialized syntax type.","type":"text"}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SyntaxProtocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the node can be cast, "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method is marked as deprecated because it is advised not to use it for unrelated casts.","type":"text"}]}],"name":"Note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DocumentationAttributeArgumentSyntax\/Value-swift.enum\/is(_:)-4fshf"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DocumentationAttributeArgumentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DocumentationAttributeArgumentSyntax\/Value-swift.enum"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DocumentationAttributeArgumentSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DocumentationAttributeArgumentSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DocumentationAttributeArgumentSyntax"}],"title":"DocumentationAttributeArgumentSyntax","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DocumentationAttributeArgumentSyntax","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/documentationattributeargumentsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DocumentationAttributeArgumentSyntax/Value-swift.enum":{"title":"DocumentationAttributeArgumentSyntax.Value","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DocumentationAttributeArgumentSyntax\/Value-swift.enum","kind":"symbol","url":"\/documentation\/swiftsyntax\/documentationattributeargumentsyntax\/value-swift.enum","role":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxChildChoices"}],"title":"SyntaxChildChoices","url":"\/documentation\/swiftsyntax\/syntaxchildchoices","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildChoices"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","abstract":[{"text":"Protocol for the enums nested inside ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" nodes that enumerate all the"},{"text":" ","type":"text"},{"text":"possible types a child node might have.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DocumentationAttributeArgumentSyntax/Value-swift.enum/is(_:)-4fshf":{"type":"topic","title":"is(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DocumentationAttributeArgumentSyntax\/Value-swift.enum\/is(_:)-4fshf","abstract":[{"text":"Checks if the current ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","type":"reference"},{"text":" instance can be cast to a given specialized syntax type.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/documentationattributeargumentsyntax\/value-swift.enum\/is(_:)-4fshf"}}}