{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax\/unexpectedBetweenFirstNameAndSecondName","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","title":"unexpectedBetweenFirstNameAndSecondName","symbolKind":"property","roleHeading":"Instance Property","modules":[{"name":"SwiftSyntax"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unexpectedBetweenFirstNameAndSecondName","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?"}],"externalID":"s:11SwiftSyntax016ClosureParameterB0V035unexpectedBetweenFirstNameAndSecondH0AA015UnexpectedNodesB0VSgvp"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/closureparametersyntax\/unexpectedbetweenfirstnameandsecondname"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenFirstNameAndSecondName","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureParameterSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosureParameterSyntax","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/closureparametersyntax","navigatorTitle":[{"text":"ClosureParameterSyntax","kind":"identifier"}],"title":"ClosureParameterSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureParameterSyntax/unexpectedBetweenFirstNameAndSecondName":{"role":"symbol","kind":"symbol","title":"unexpectedBetweenFirstNameAndSecondName","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBetweenFirstNameAndSecondName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/closureparametersyntax\/unexpectedbetweenfirstnameandsecondname","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax\/unexpectedBetweenFirstNameAndSecondName"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"}}}