{"metadata":{"roleHeading":"Instance Method","platforms":[{"deprecated":true,"beta":false,"unavailable":false,"message":"This cast will always succeed"}],"modules":[{"name":"SwiftSyntax"}],"role":"symbol","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyxSgxmF::SYNTHESIZED::s:11SwiftSyntax07MissingB0V","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"title":"as(_:)","symbolKind":"method"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax\/as(_:)-7q8mq","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftsyntax\/missingsyntax\/as(_:)-7q8mq"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","deprecationSummary":[{"inlineContent":[{"text":"This cast will always succeed","type":"text"}],"type":"paragraph"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"The current syntax node.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"as"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always succeed.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax"]]},"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingSyntax":{"abstract":[{"text":"In case the source code is missing a syntax node, this node stands in place of the missing node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MissingSyntax","kind":"identifier"}],"title":"MissingSyntax","navigatorTitle":[{"text":"MissingSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/missingsyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingSyntax/as(_:)-7q8mq":{"url":"\/documentation\/swiftsyntax\/missingsyntax\/as(_:)-7q8mq","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax\/as(_:)-7q8mq","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"kind":"symbol","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"role":"symbol","title":"as(_:)"}}}