{"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/filter(_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"filter(_:)","externalID":"s:11SwiftSyntax0B10CollectionPAAE6filteryxSb7ElementQzKXEKF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"SwiftSyntax","modules":[{"name":"SwiftSyntax"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax"]]},"abstract":[{"text":"Returns a new ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true,"type":"reference"},{"text":" that just contains the elements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"satisfying the given predicate."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"filter"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"isIncluded","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"isIncluded","content":[{"inlineContent":[{"type":"text","text":"A closure that takes an element of the"},{"text":" ","type":"text"},{"type":"text","text":"collection as its argument and returns a Boolean value indicating"},{"text":" ","type":"text"},{"type":"text","text":"whether the element should be included in the returned collection."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection"},{"text":" of the elements that ","type":"text"},{"code":"isIncluded","type":"codeVoice"},{"type":"text","text":" allowed."}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This creates a new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection"},{"type":"text","text":" node. If the resulting node"},{"type":"text","text":" "},{"text":"is not needed (e.g. because itâ€™s only being iterated), convert the","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection"},{"type":"text","text":" to an array first or use the "},{"code":"where","type":"codeVoice"},{"text":" clause in","type":"text"},{"text":" ","type":"text"},{"text":"a ","type":"text"},{"type":"codeVoice","code":"for"},{"type":"text","text":" statement."}]}],"name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/filter(_:)"]}],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax/filter(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax\/filter(_:)","title":"filter(_:)","abstract":[{"text":"Returns a new ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true,"type":"reference"},{"type":"text","text":" that just contains the elements"},{"type":"text","text":" "},{"type":"text","text":"satisfying the given predicate."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:SK7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax\/filter(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SimpleStringLiteralSegmentListSyntax","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/simplestringliteralsegmentlistsyntax","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SimpleStringLiteralSegmentListSyntax","kind":"identifier"}],"title":"SimpleStringLiteralSegmentListSyntax","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxCollection":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","url":"\/documentation\/swiftsyntax\/syntaxcollection","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxCollection"}],"navigatorTitle":[{"text":"SyntaxCollection","kind":"identifier"}],"role":"symbol","title":"SyntaxCollection","type":"topic"}}}