{"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The current syntax node.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"code":"cast","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"type":"text","text":" "},{"text":"informing the user that the cast will always succeed.","type":"text"}]}]}]}],"kind":"symbol","sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","extendedModule":"SwiftSyntax","roleHeading":"Instance Method","symbolKind":"method","platforms":[{"deprecated":true,"unavailable":false,"message":"This cast will always succeed","beta":false}],"title":"cast(_:)","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax013StringSegmentB0V","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/cast(_:)-24inz","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/stringsegmentsyntax\/cast(_:)-24inz"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax","title":"StringSegmentSyntax","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringSegmentSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"StringSegmentSyntax","kind":"identifier"}],"abstract":[{"text":"A literal segment inside a string segment.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax/cast(_:)-24inz":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax\/cast(_:)-24inz","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax\/cast(_:)-24inz","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"cast(_:)","deprecated":true,"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"role":"symbol"}}}