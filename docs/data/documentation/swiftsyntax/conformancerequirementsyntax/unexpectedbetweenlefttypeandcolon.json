{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBetweenLeftTypeAndColon","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/swiftsyntax\/conformancerequirementsyntax\/unexpectedbetweenlefttypeandcolon"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConformanceRequirementSyntax"]]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConformanceRequirementSyntax\/unexpectedBetweenLeftTypeAndColon","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax022ConformanceRequirementB0V33unexpectedBetweenLeftTypeAndColonAA015UnexpectedNodesB0VSgvp","title":"unexpectedBetweenLeftTypeAndColon","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftTypeAndColon","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"symbolKind":"property","role":"symbol","roleHeading":"Instance Property"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConformanceRequirementSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConformanceRequirementSyntax","abstract":[],"type":"topic","navigatorTitle":[{"text":"ConformanceRequirementSyntax","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ConformanceRequirementSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/conformancerequirementsyntax","title":"ConformanceRequirementSyntax","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ConformanceRequirementSyntax/unexpectedBetweenLeftTypeAndColon":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ConformanceRequirementSyntax\/unexpectedBetweenLeftTypeAndColon","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBetweenLeftTypeAndColon","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"abstract":[],"title":"unexpectedBetweenLeftTypeAndColon","kind":"symbol","url":"\/documentation\/swiftsyntax\/conformancerequirementsyntax\/unexpectedbetweenlefttypeandcolon","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"}}}