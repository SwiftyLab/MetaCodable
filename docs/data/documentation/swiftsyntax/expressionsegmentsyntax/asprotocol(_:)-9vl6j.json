{"metadata":{"extendedModule":"SwiftSyntax","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":"?","kind":"text"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA09DeclGroupB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax017ExpressionSegmentB0V","modules":[{"name":"SwiftSyntax"}],"title":"asProtocol(_:)","roleHeading":"Instance Method","role":"symbol"},"variants":[{"paths":["\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-9vl6j"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-9vl6j","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclGroupSyntax","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclGroupSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-9vl6j":{"type":"topic","title":"asProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-9vl6j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-9vl6j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclGroupSyntax":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclGroupSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"DeclGroupSyntax","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/declgroupsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclGroupSyntax","title":"DeclGroupSyntax","role":"symbol","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax","title":"ExpressionSegmentSyntax","abstract":[{"type":"text","text":"An interpolated expression inside a string literal."}],"role":"symbol","kind":"symbol","type":"topic"}}}