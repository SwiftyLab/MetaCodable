{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/unexpectedBetweenLeftParenAndExpressions","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBetweenLeftParenAndExpressions","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftParenAndExpressions","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"roleHeading":"Instance Property","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax017ExpressionSegmentB0V40unexpectedBetweenLeftParenAndExpressionsAA015UnexpectedNodesB0VSgvp","symbolKind":"property","role":"symbol","title":"unexpectedBetweenLeftParenAndExpressions"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftsyntax\/expressionsegmentsyntax\/unexpectedbetweenleftparenandexpressions"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/unexpectedBetweenLeftParenAndExpressions":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/unexpectedbetweenleftparenandexpressions","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unexpectedBetweenLeftParenAndExpressions","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/unexpectedBetweenLeftParenAndExpressions","type":"topic","role":"symbol","abstract":[],"kind":"symbol","title":"unexpectedBetweenLeftParenAndExpressions"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax","title":"ExpressionSegmentSyntax","abstract":[{"type":"text","text":"An interpolated expression inside a string literal."}],"role":"symbol","kind":"symbol","type":"topic"}}}