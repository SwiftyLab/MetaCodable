{"topicSections":[{"anchor":"Type-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag\/help(for:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag\/name(for:)"],"title":"Type Methods","generated":true}],"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s12CaseIterableP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ"],"kind":"relationships","type":"inheritsFrom"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/enumerableflag"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumerableFlag","kind":"identifier"},{"kind":"text","text":" : "},{"text":"CaseIterable","kind":"typeIdentifier","preciseIdentifier":"s:s12CaseIterableP"},{"text":", ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"For example, the ","type":"text"},{"type":"codeVoice","code":"Size"},{"text":" enumeration declared here can be used as the type of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a "},{"code":"@Flag","type":"codeVoice"},{"text":" property:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["enum Size: String, EnumerableFlag {","    case small, medium, large, extraLarge","}","","struct Example: ParsableCommand {","    @Flag var sizes: [Size]","","    mutating func run() {","        print(sizes)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, each case name is converted to a flag by using the "},{"code":".long","type":"codeVoice"},{"type":"text","text":" name"},{"type":"text","text":" "},{"type":"text","text":"specification, so a user can call "},{"type":"codeVoice","code":"example"},{"type":"text","text":" like this:"}]},{"type":"codeListing","syntax":null,"code":["$ example --small --large","[.small, .large]"]},{"inlineContent":[{"text":"Provide alternative or additional name specifications for each case by","type":"text"},{"type":"text","text":" "},{"text":"implementing the ","type":"text"},{"type":"codeVoice","code":"name(for:)"},{"type":"text","text":" static method on your "},{"code":"EnumerableFlag","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"},{"syntax":"swift","code":["extension Size {","    static func name(for value: Self) -> NameSpecification {","        switch value {","        case .extraLarge:","            return [.customShort(\"x\"), .long]","        default:","            return .shortAndLong","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"With this extension, a user can use short or long versions of the flags:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["$ example -s -l -x --medium","[.small, .large, .extraLarge, .medium]"],"type":"codeListing"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser"]]},"abstract":[{"type":"text","text":"A type that represents the different possible flags to be used by a"},{"type":"text","text":" "},{"code":"@Flag","type":"codeVoice"},{"text":" property.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag"},"metadata":{"title":"EnumerableFlag","role":"symbol","modules":[{"name":"ArgumentParser"}],"externalID":"s:14ArgumentParser14EnumerableFlagP","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumerableFlag","kind":"identifier"}],"navigatorTitle":[{"text":"EnumerableFlag","kind":"identifier"}],"roleHeading":"Protocol"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/EnumerableFlag/name(for:)":{"url":"\/documentation\/argumentparser\/enumerableflag\/name(for:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"name","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"}],"required":true,"defaultImplementations":1,"title":"name(for:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns the name specification to use for the given flag."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag\/name(for:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/s12CaseIterableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s12CaseIterableP","type":"unresolvable","title":"Swift.CaseIterable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/EnumerableFlag":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumerableFlag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/enumerableflag","abstract":[{"text":"A type that represents the different possible flags to be used by a","type":"text"},{"type":"text","text":" "},{"code":"@Flag","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"EnumerableFlag","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"EnumerableFlag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/EnumerableFlag/help(for:)":{"abstract":[{"type":"text","text":"Returns the help information to show for the given flag."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag\/help(for:)","defaultImplementations":1,"required":true,"type":"topic","url":"\/documentation\/argumentparser\/enumerableflag\/help(for:)","role":"symbol","kind":"symbol","title":"help(for:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"help","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/SQ":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","type":"unresolvable","title":"Swift.Equatable"}}}