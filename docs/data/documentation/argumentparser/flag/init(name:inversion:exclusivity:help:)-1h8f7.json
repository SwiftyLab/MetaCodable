{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","kind":"typeIdentifier"},{"text":" = .long, ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier","text":"FlagExclusivity"},{"kind":"text","text":" = .chooseLast, "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","text":"ArgumentHelp","kind":"typeIdentifier"},{"text":"? = nil)","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"name","content":[{"inlineContent":[{"text":"A specification for what names are allowed for this flag.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The method for converting this flags name into an on\/off"},{"text":" ","type":"text"},{"type":"text","text":"pair."}],"type":"paragraph"}],"name":"inversion"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The behavior to use when an on\/off pair of flags is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified."}]}],"name":"exclusivity"},{"name":"help","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Information about how to use this flag."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Use this initializer to create an optional Boolean flag with an on\/off"},{"text":" ","type":"text"},{"type":"text","text":"pair. With the following declaration, for example, the user can specify"},{"text":" ","type":"text"},{"type":"text","text":"either "},{"code":"--use-https","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"--no-use-https"},{"text":" to set the ","type":"text"},{"type":"codeVoice","code":"useHTTPS"},{"text":" flag to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" or "},{"code":"false","type":"codeVoice"},{"type":"text","text":", respectively. If neither is specified, the resulting"},{"type":"text","text":" "},{"type":"text","text":"flag value would be "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool?"],"type":"codeListing","syntax":null}]}],"abstract":[{"type":"text","text":"Creates a Boolean property that reads its value from the presence of"},{"text":" ","type":"text"},{"type":"text","text":"one or more inverted flags."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7"},"variants":[{"paths":["\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"kind":"symbol","metadata":{"modules":[{"name":"ArgumentParser"}],"title":"init(name:inversion:exclusivity:help:)","externalID":"s:14ArgumentParser4FlagVAASbSgRszlE4name9inversion11exclusivity4helpACyADGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","role":"symbol","symbolKind":"init","extendedModule":"ArgumentParser","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Initializer"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagExclusivity","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flagexclusivity","abstract":[{"text":"The options for treating enumeration-based flags as exclusive.","type":"text"}],"navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"FlagExclusivity","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"title":"init(name:inversion:exclusivity:help:)","abstract":[{"type":"text","text":"Creates a Boolean property that reads its value from the presence of"},{"text":" ","type":"text"},{"text":"one or more inverted flags.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"type":"topic","abstract":[{"text":"Help information for a command-line argument.","type":"text"}],"title":"ArgumentHelp","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"url":"\/documentation\/argumentparser\/flag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"type":"topic","title":"Flag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"navigatorTitle":[{"text":"Flag","kind":"identifier"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"NameSpecification","kind":"identifier"}],"url":"\/documentation\/argumentparser\/namespecification","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"text":"label.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"kind":"symbol","role":"symbol","title":"NameSpecification","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","title":"FlagInversion","type":"topic","abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"type":"codeVoice","code":"true"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flaginversion"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"}}}