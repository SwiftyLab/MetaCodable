{"defaultImplementationsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-3a03s","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-10zcu"],"title":"ExpressibleByLiteralSyntax Implementations","anchor":"ExpressibleByLiteralSyntax-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"roleHeading":"Instance Method","title":"makeLiteralSyntax()","symbolKind":"method","role":"symbol","required":true,"externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P04makefB00F4TypeQzyF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"LiteralType","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P0F4TypeQa","kind":"typeIdentifier"}],"modules":[{"name":"SwiftSyntaxBuilder"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"text":"LiteralType","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/LiteralType","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P0F4TypeQa"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This method is usually not called directly. Instead, conforming types can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be turned into syntax trees using "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","isActive":true,"type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."]},{"type":"paragraph","inlineContent":[{"text":"Or interpolated into a Swift source code literal with the syntax","type":"text"},{"text":" ","type":"text"},{"code":"\\(literal: <value>)","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"syntax":null}],"kind":"content"}],"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ExpressibleByLiteralSyntax/makeLiteralSyntax()":{"url":"\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()","title":"makeLiteralSyntax()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P0F4TypeQa","text":"LiteralType","kind":"typeIdentifier"}],"kind":"symbol","required":true,"role":"symbol","defaultImplementations":2,"type":"topic","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ExpressibleByLiteralSyntax/makeLiteralSyntax()-3a03s":{"kind":"symbol","title":"makeLiteralSyntax()","type":"topic","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()-3a03s","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-3a03s"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ExpressibleByLiteralSyntax/makeLiteralSyntax()-10zcu":{"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier"}],"type":"topic","title":"makeLiteralSyntax()","kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()-10zcu","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"BinaryInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-10zcu"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ExpressibleByLiteralSyntax":{"type":"topic","kind":"symbol","title":"ExpressibleByLiteralSyntax","abstract":[{"type":"text","text":"A Swift type whose value can be represented directly in source code by a"},{"type":"text","text":" "},{"type":"text","text":"Swift literal."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByLiteralSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax","url":"\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByLiteralSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"literal","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ExpressibleByLiteralSyntax","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","title":"init(literal:)","role":"symbol","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"code":"Array<String>","type":"codeVoice"},{"text":" will result in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an array literal containing string literals:"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ExpressibleByLiteralSyntax/LiteralType":{"kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiteralType"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP","kind":"typeIdentifier","text":"ExprSyntaxProtocol"}],"abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax\/literaltype","role":"symbol","title":"LiteralType","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax\/LiteralType"}}}