{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/default(_:)"]}],"kind":"symbol","seeAlsoSections":[{"title":"Fallback value","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)"],"anchor":"Fallback-value"}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"default"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The default value to use.","type":"text"}],"type":"paragraph"}],"name":"default"}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"If the value is missing or has incorrect data type, the default value","type":"text"},{"text":" ","type":"text"},{"text":"will be used instead of throwing error and terminating decoding.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"i.e. for a field declared as:"}],"type":"paragraph"},{"syntax":"swift","code":["@Default(\"some\")","let field: String"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"if empty json provided or type at "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" is different"}]},{"type":"codeListing","syntax":"json","code":["{ \"field\": 5 } \/\/ or {}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"the default value provided in this case "},{"code":"some","type":"codeVoice"},{"type":"text","text":" will be used as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"field"},{"text":"’s value.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"This macro on its own only validates if attached declaration","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is a variable declaration. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)"},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"text":"when generating final implementations.","type":"text"}]}],"name":"Note","type":"aside","style":"note"},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"text":"The field type must confirm to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"default value type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" must be the same as field type."}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"symbolKind":"macro","modules":[{"name":"MetaCodable"}],"externalID":"s:11MetaCodable7Defaultyyxclufm","role":"symbol","platforms":[{"introducedAt":"5.9","deprecated":false,"name":"Swift","beta":false,"unavailable":false}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"roleHeading":"Macro","title":"Default(_:)"},"abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"references":{"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/metacodable\/default(_:)","kind":"symbol","title":"Default(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","role":"symbol","abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:forErrors:)":{"url":"\/documentation\/metacodable\/default(ifmissing:forerrors:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Provides different "},{"code":"default","type":"codeVoice"},{"text":" values to be used for missing value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoding errors."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ifMissing","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"forErrors"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"Default(ifMissing:forErrors:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:)":{"title":"Default(ifMissing:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ifMissing"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Provides a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when value is missing"},{"text":" ","type":"text"},{"type":"text","text":"and when not initialized explicitly in memberwise initializer(s)."}],"kind":"symbol","url":"\/documentation\/metacodable\/default(ifmissing:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)"},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","title":"Codable(commonStrategies:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}]}}}