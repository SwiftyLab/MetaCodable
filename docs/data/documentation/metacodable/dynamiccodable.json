{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/metacodable\/dynamiccodable"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"],"title":"Dynamic Coding","generated":true,"anchor":"Dynamic-Coding"}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue"],"anchor":"Associated-Types","title":"Associated Types"},{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"],"title":"Type Properties"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"IdentifierValue","preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type declared "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"reference","isActive":true},{"text":" is used to decode conformed type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if matches, and encode to represent data for the conformed type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming to this "},{"type":"codeVoice","code":"protocol"},{"text":" allows type to be decoded\/encoded dynamically","type":"text"},{"text":" ","type":"text"},{"text":"if it conforms to any additional ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":"(s) that declare dynamic","type":"text"},{"type":"text","text":" "},{"text":"decoding\/encoding with attached ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","isActive":true},{"type":"text","text":" macro, while the conformed"},{"text":" ","type":"text"},{"type":"text","text":"types can be declared in several different targets."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use dynamic decoding, first declare a protocol with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)"},{"text":" macro","type":"text"},{"text":" ","type":"text"},{"text":"attached that represents common data. i.e. for dynamic ","type":"text"},{"code":"Post","type":"codeVoice"},{"type":"text","text":" data:"}]},{"syntax":"json","code":["[","  {","    \"id\": \"00005678-abcd-efab-0123-456789abcdef\",","    \"type\": \"text\",","    \"author\": \"12345678-abcd-efab-0123-456789abcdef\",","    \"likes\": 145,","    \"createdAt\": \"2021-07-23T07:36:43Z\",","    \"text\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","    \"type\": \"picture\",","    \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","    \"likes\": 370,","    \"createdAt\": \"2021-07-23T09:32:13Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","    \"caption\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"43215678-abcd-efab-0123-456789abcdef\",","    \"type\": \"photo\",","    \"author\": \"abcd5678-abcd-efab-0123-456789abcdef\",","    \"likes\": 370,","    \"createdAt\": \"2021-07-23T09:32:13Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/picture.png\",","    \"caption\": \"Lorem Ipsium\"","  },","  {","    \"id\": \"64475bcb-caff-48c1-bb53-8376628b350b\",","    \"type\": \"audio\",","    \"author\": \"4c17c269-1c56-45ab-8863-d8924ece1d0b\",","    \"likes\": 25,","    \"createdAt\": \"2021-07-23T09:33:48Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/audio.aac\",","    \"duration\": 60","  },","  {","    \"id\": \"98765432-abcd-efab-0123-456789abcdef\",","    \"type\": \"video\",","    \"author\": \"04355678-abcd-efab-0123-456789abcdef\",","    \"likes\": 2345,","    \"createdAt\": \"2021-07-23T09:36:38Z\",","    \"url\": \"https:\/\/a.url.com\/to\/a\/video.mp4\",","    \"duration\": 460,","    \"thumbnail\": \"https:\/\/a.url.com\/to\/a\/thumbnail.png\"","  }","]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"new protocol ","type":"text"},{"code":"Post","type":"codeVoice"},{"text":" can be created, with the type of identifier tagging","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(external, internal or adjacent) indicated, here tagging is "},{"type":"codeVoice","code":"internal"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Data type of identifier can also be specified with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()"},{"type":"text","text":" if"},{"type":"text","text":" "},{"text":"varies from ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},{"code":["@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","    var author: UUID { get }","    var likes: Int { get }","    var createdAt: String { get }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Individual "},{"type":"codeVoice","code":"Post"},{"text":" data type can be created conforming to ","type":"text"},{"code":"Post","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"code":"DynamicCodable","type":"codeVoice"},{"type":"text","text":", specifying one or multiple identifier:"}],"type":"paragraph"},{"code":["@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"text\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> {","        return [\"picture\", \"photo\"]","    }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"audio\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"video\" }","","    let id: UUID","    let author: UUID","    let likes: Int","    let createdAt: String","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Include "},{"code":"MetaProtocolCodable","type":"codeVoice"},{"type":"text","text":" build tool plugin to generate protocol"},{"type":"text","text":" "},{"type":"text","text":"decoding\/encoding "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","isActive":true},{"text":" named ","type":"text"},{"code":"\\(protocolName)Coder","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"where "},{"code":"\\(protocolName)","type":"codeVoice"},{"type":"text","text":" is replaced with the protocol name."}]}]}],"metadata":{"navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"title":"DynamicCodable","modules":[{"name":"MetaCodable"}],"externalID":"s:11MetaCodable07DynamicB0P","symbolKind":"protocol","roleHeading":"Protocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DynamicCodable","kind":"identifier"}]},"references":{"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","title":"Codable(commonStrategies:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"role":"symbol","url":"\/documentation\/metacodable\/helpercoder\/coded","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Coded","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","kind":"symbol","type":"topic","abstract":[{"text":"The actual type of value that is going to be decoded\/encoded.","type":"text"}],"title":"Coded","required":true},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"kind":"symbol","abstract":[{"type":"text","text":"The configuration file providing additional customization options for "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"configuration"},{"kind":"text","text":" "},{"text":"file","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaCodableConfig","kind":"identifier"}],"title":"MetaCodableConfig","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","url":"\/documentation\/metacodable\/metacodableconfig"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/IdentifierValue":{"required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifierValue"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"role":"symbol","abstract":[{"text":"The type of identifier value.","type":"text"}],"title":"IdentifierValue","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/IdentifierValue","url":"\/documentation\/metacodable\/dynamiccodable\/identifiervalue","type":"topic"},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"kind":"symbol","required":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"topic","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"identifier"},{"text":": ","kind":"text"},{"text":"DynamicCodableIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa","text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"The identifier value(s) for this type."}],"title":"identifier"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodable"}],"title":"DynamicCodable","url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"text":"A type that can be decoded\/encoded dynamically based on unique identifier.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","role":"symbol","navigatorTitle":[{"text":"DynamicCodable","kind":"identifier"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicCodableIdentifier"}],"title":"DynamicCodableIdentifier","url":"\/documentation\/metacodable\/dynamiccodableidentifier","abstract":[{"text":"The identifier option for ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true,"type":"reference"},{"type":"text","text":" types."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicCodableIdentifier"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","url":"\/documentation\/metacodable\/codedas()","title":"CodedAs()","type":"topic","abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"type":"topic","title":"HelperCoder","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HelperCoder","kind":"identifier"}],"url":"\/documentation\/metacodable\/helpercoder","abstract":[{"text":"A type that helps to decode and encode underlying ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","isActive":true},{"text":" type","type":"text"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and to provided "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" respectively."}],"kind":"symbol"}}}