{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(peer) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"CodingKey"},{"text":" path value located at.","type":"text"}]}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If single argument provided for ","type":"text"},{"type":"codeVoice","code":"path"},{"type":"text","text":", then that argument is"},{"text":" ","type":"text"},{"text":"chosen as ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":". i.e for JSON:"}]},{"syntax":"json","code":["{ \"key\": \"value\" }"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"the field can declare custom key:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@CodedAt(\"key\")","let field: String"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If multiple arguments provided, then field is decoded\/encoded"},{"type":"text","text":" "},{"type":"text","text":"nested by all the arguments as "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":". i.e for JSON:"}]},{"syntax":"json","type":"codeListing","code":["{ \"deeply\": { \"nested\": { \"key\": \"value\" } } }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"the field can declare custom key:"}]},{"type":"codeListing","code":["@CodedAt(\"deeply\", \"nested\", \"key\")","let field: String"],"syntax":"swift"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If no arguments provided, then field needs to be directly decoded from"},{"text":" ","type":"text"},{"type":"text","text":"and encoded to parent "},{"code":"decoder","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"encoder"},{"type":"text","text":" respectively rather"},{"type":"text","text":" "},{"text":"than at a ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"decoder","type":"codeVoice"},{"type":"text","text":" instance in parent type "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" implementation’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"init(from:)"},{"type":"text","text":" and "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" instance in parent type "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" "},{"type":"text","text":"implementation’s "},{"type":"codeVoice","code":"encode(to:)"},{"type":"text","text":" method is directly passed to field type’s"},{"text":" ","type":"text"},{"code":"init(from:)","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"encode(to:)"},{"type":"text","text":" method respectively."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Using this some core ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types can be reused across multiple"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations. i.e. for different vehicle types in JSON:"}]},{"code":["[","  {","    \"id\": 5,","    \"name\": \"Maruti Suzuki Dzire\",","    \"type\": \"Sedan\",","    \"brand\": \"Maruti\"","  },","  {","    \"id\": 105,","    \"name\": \"Vande Bharat Express\",","    \"start\": \"Delhi\",","    \"destination\": \"Bhopal\"","  }","]"],"syntax":"json","type":"codeListing"},{"inlineContent":[{"text":"core ","type":"text"},{"type":"codeVoice","code":"Vehicle"},{"text":" model with common properties can be used with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specialized "},{"code":"Car","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Train"},{"text":" models:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Codable","struct Vehicle {","    let id: Int","    let name: String","}","","@Codable","struct Car {","    @CodedAt","    let base: Vehicle","    let type: String","    let brand: String","}","","@Codable","struct Train {","    @CodedAt","    let base: Vehicle","    let start: String","    let destination: String","}"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For enums\/protocols, this attribute can be used to support internally"},{"text":" ","type":"text"},{"type":"text","text":"tagged data. The "},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided represents the path","type":"text"},{"type":"text","text":" "},{"text":"where value identifying each case\/conforming type respectively is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoded\/encoded. By default, this value is decoded\/encoded as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" unless different type specified with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","isActive":true},{"text":" and","type":"text"},{"type":"text","text":" "},{"text":"compared with value for each enum-case identifier or conformed type","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":". i.e. for enum:"}]},{"type":"codeListing","syntax":"swift","code":["@Codable","@CodedAt(\"type\")","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","}"]},{"type":"paragraph","inlineContent":[{"text":"or protocol:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@Codable","@CodedAt(\"type\")","@CodedAs<Int>","protocol Command {","    var key: String { get }","}","","@Codable","struct Load: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"load\" }","    let key: String","}","","@Codable","struct Store: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"store\" }","    let key: String","    let value: Int","}"]},{"type":"paragraph","inlineContent":[{"text":"the encoded JSON for internally tagged data will be of following variations:","type":"text"}]},{"type":"codeListing","syntax":"json","code":["{ \"key\": \"MyKey\", \"type\": \"load\" }"]},{"syntax":"json","code":["{ \"key\": \"MyKey\", \"value\": 42, \"type\": \"store\" }"],"type":"codeListing"}]}],"type":"unorderedList"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"text":" ","type":"text"},{"type":"text","text":"is a variable declaration. "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","type":"reference"},{"text":" macro uses this macro","type":"text"},{"type":"text","text":" "},{"text":"when generating final implementations.","type":"text"}],"type":"paragraph"}]},{"style":"important","content":[{"inlineContent":[{"type":"text","text":"When applied to fields, the field type must confirm to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"Important","type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/codedat(_:)"]}],"metadata":{"platforms":[{"name":"Swift","introducedAt":"5.9","unavailable":false,"beta":false,"deprecated":false}],"modules":[{"name":"MetaCodable"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","externalID":"s:11MetaCodable7CodedAtyys12StaticStringVd_tcfm","role":"symbol","symbolKind":"macro","roleHeading":"Macro"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DecodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/EncodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy"],"title":"Strategies","anchor":"Strategies"}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://MetaCodable/documentation/MetaCodable/CodableCommonStrategy":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CodableCommonStrategy"}],"url":"\/documentation\/metacodable\/codablecommonstrategy","kind":"symbol","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableCommonStrategy"}],"title":"CodableCommonStrategy","abstract":[{"type":"text","text":"A marker type used to represent a common type conversion strategy for the "},{"type":"codeVoice","code":"@Codable"},{"text":" macro.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","title":"ContentAt(_:_:)","type":"topic","abstract":[{"text":"Indicates the enum-case associated values or protocol conforming types need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/documentation/MetaCodable/EncodedAt(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/metacodable\/encodedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/EncodedAt(_:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"...)"}],"title":"EncodedAt(_:)","abstract":[{"text":"Indicates the field needs to be encoded to a specific","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided, different from the decoding path."}]},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","title":"CodedIn(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"text":" ","type":"text"},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedIn"},{"text":"(","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/documentation/MetaCodable/UnTagged()":{"type":"topic","kind":"symbol","url":"\/documentation\/metacodable\/untagged()","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnTagged"},{"text":"()","kind":"text"}],"title":"UnTagged()","abstract":[{"text":"Indicates the cases of enum lack distinct identifier.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/DecodedAt(_:)":{"type":"topic","url":"\/documentation\/metacodable\/decodedat(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DecodedAt(_:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":"...)","kind":"text"}],"title":"DecodedAt(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded to a specific"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided, different from the encoding path."}]},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","url":"\/documentation\/metacodable\/codedas()","title":"CodedAs()","type":"topic","abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Inherits(decodable:encodable:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","kind":"symbol","url":"\/documentation\/metacodable\/inherits(decodable:encodable:)","title":"Inherits(decodable:encodable:)","type":"topic","abstract":[{"text":"Indicates whether super class conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" or not."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inherits","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"decodable"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"encodable","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedas(_:_:)","title":"CodedAs(_:_:)","type":"topic","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"text":" ","type":"text"},{"type":"text","text":"additional variable "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"kind":"symbol","required":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"topic","role":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"identifier"},{"text":": ","kind":"text"},{"text":"DynamicCodableIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa","text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"The identifier value(s) for this type."}],"title":"identifier"},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","title":"Codable(commonStrategies:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names\/associated value label will be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the provided case format."}],"url":"\/documentation\/metacodable\/codingkeys(_:)","role":"symbol","title":"CodingKeys(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"text":"CodingKeyNameStrategy","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"text":")","kind":"text"}],"type":"topic"}}}