{"abstract":[{"type":"text","text":"Generate "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"actor"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"text":"declarations. This macro is named ","type":"text"},{"type":"codeVoice","code":"ConformEncodable"},{"type":"text","text":" to avoid conflicts"},{"type":"text","text":" "},{"type":"text","text":"with the standard library "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" protocol."}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConformEncodable"},{"kind":"text","text":"("},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}],"platforms":[{"deprecated":false,"name":"Swift","introducedAt":"5.9","beta":false,"unavailable":false}],"role":"symbol","modules":[{"name":"MetaCodable"}],"externalID":"s:11MetaCodable16ConformEncodable16commonStrategiesySayAA0B14CommonStrategyVG_tcfm","symbolKind":"macro","roleHeading":"Macro","title":"ConformEncodable(commonStrategies:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/conformencodable(commonstrategies:)"]}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformEncodable(commonStrategies:)","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformDecodable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"],"anchor":"Macros","generated":true,"title":"Macros"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":", names: named(CodingKeys), named(encode(to:))) "},{"text":"@attached","kind":"attribute"},{"text":"(member, conformances: ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"kind":"text","text":", names: named(CodingKeys), named(encode(to:))) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConformEncodable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"text":": [","kind":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier","text":"CodableCommonStrategy"},{"kind":"text","text":"] = [])"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of CodableCommonStrategy values specifying"},{"text":" ","type":"text"},{"text":"type conversion strategies to be automatically applied to all properties of the type.","type":"text"}]}],"name":"commonStrategies"}]},{"kind":"content","content":[{"text":"Usage","level":1,"type":"heading","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default the field name is used as "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field value during"},{"type":"text","text":" "},{"type":"text","text":"encoding. Following customization can be done on fields to"},{"type":"text","text":" "},{"type":"text","text":"provide custom encode behavior:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"text":" providing single string value as custom coding key.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"text":" providing multiple string value as nested coding","type":"text"},{"type":"text","text":" "},{"text":"key path.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)"},{"text":" with one or more string value as nested container","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"coding key path, with variable name as coding key."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" with no path arguments, when type is composition"},{"text":" ","type":"text"},{"type":"text","text":"of multiple "},{"type":"codeVoice","code":"Encodable"},{"text":" types.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","isActive":true,"type":"reference"},{"text":" to provide additional coding key values where","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"field value can appear."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","isActive":true,"type":"reference"},{"text":" to provide custom encoding behavior for","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Encodable"},{"text":" types or implement encoding for non-","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" types."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","isActive":true,"type":"reference"},{"type":"text","text":" to provide custom values for enum cases."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" to provide enum-case\/protocol identifier tag path."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","isActive":true,"type":"reference"},{"type":"text","text":" to provide enum-case\/protocol identifier tag type."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","isActive":true},{"type":"text","text":" to provided enum-case\/protocol content path."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},{"type":"text","text":" to ignore specific"},{"text":" ","type":"text"},{"text":"properties\/cases\/types from encoding.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","isActive":true},{"type":"text","text":" "},{"type":"text","text":"to ignore encoding based on custom conditions."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","isActive":true,"type":"reference"},{"text":" to work with different case style ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"s."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","isActive":true,"type":"reference"},{"type":"text","text":" to ignore encoding"},{"text":" ","type":"text"},{"text":"all initialized properties\/case associated variables.","type":"text"}]}]}],"type":"unorderedList"},{"text":"Effect","anchor":"Effect","level":1,"type":"heading"},{"inlineContent":[{"text":"This macro composes extension macro expansion for ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" "},{"type":"text","text":"conformance of type:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extension macro expansion, to confirm to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" protocol"},{"type":"text","text":" "},{"text":"if the type doesnâ€™t already conform to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"Extension macro expansion, to generate custom ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" type for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the attached declaration named "},{"type":"codeVoice","code":"CodingKeys"},{"text":" and use this type for","type":"text"},{"type":"text","text":" "},{"code":"Encodable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"type":"codeVoice","code":"encode(to:)"},{"text":" method.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If attached declaration already conforms to "},{"type":"codeVoice","code":"Encodable"},{"text":" this macro expansion","type":"text"},{"text":" ","type":"text"},{"text":"is skipped.","type":"text"}]}]}]},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The attached declaration must be of a "},{"code":"struct","type":"codeVoice"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" "},{"text":"or ","type":"text"},{"code":"actor","type":"codeVoice"},{"type":"text","text":" type. "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","type":"reference","overridingTitle":"See the limitations for this macro","overridingTitleInlineContent":[{"type":"text","text":"See the limitations for this macro"}],"isActive":true},{"type":"text","text":"."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the attached type\/enum-case will be ignored for decoding\/encoding."}],"url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol","title":"IgnoreCodingInitialized()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"â€™s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names\/associated value label will be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the provided case format."}],"url":"\/documentation\/metacodable\/codingkeys(_:)","role":"symbol","title":"CodingKeys(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"text":"CodingKeyNameStrategy","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"text":")","kind":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","title":"CodedIn(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"text":" ","type":"text"},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedIn"},{"text":"(","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/metacodable\/codedby(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field or enum\/protocol identifier needs to be decoded and"},{"type":"text","text":" "},{"type":"text","text":"encoded by the provided "},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}],"title":"CodedBy(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"},"doc://MetaCodable/documentation/MetaCodable/Limitations":{"url":"\/documentation\/metacodable\/limitations","abstract":[{"type":"text","text":"All the usage limitations for "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","isActive":true},{"text":".","type":"text"}],"role":"article","title":"Limitations","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","type":"topic","kind":"article"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","url":"\/documentation\/metacodable\/codedas()","title":"CodedAs()","type":"topic","abstract":[{"type":"text","text":"Provides the identifier actual type for internally\/adjacently tagged enums"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/MemberInit()":{"url":"\/documentation\/metacodable\/memberinit()","abstract":[{"type":"text","text":"Generate memberwise initializer(s) of "},{"code":"struct","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" types","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by leveraging custom attributes provided on variable declarations."}],"role":"symbol","title":"MemberInit()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberInit","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","type":"topic","url":"\/documentation\/metacodable\/ignorecoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"role":"symbol","title":"IgnoreCoding()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","title":"IgnoreEncoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}]},"doc://MetaCodable/documentation/MetaCodable/ConformDecodable(commonStrategies:)":{"url":"\/documentation\/metacodable\/conformdecodable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"enum"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations. This macro is named "},{"type":"codeVoice","code":"ConformDecodable"},{"type":"text","text":" to avoid conflicts"},{"text":" ","type":"text"},{"text":"with the standard library ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" protocol."}],"role":"symbol","title":"ConformDecodable(commonStrategies:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformDecodable(commonStrategies:)","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConformDecodable"},{"kind":"text","text":"("},{"text":"commonStrategies","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedas(_:_:)","title":"CodedAs(_:_:)","type":"topic","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"text":" ","type":"text"},{"type":"text","text":"additional variable "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-1iuvv":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","type":"topic","url":"\/documentation\/metacodable\/ignoreencoding(if:)-1iuvv","abstract":[{"text":"Indicates the field\/case needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is not satisfied."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":": (repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"role":"symbol","title":"IgnoreEncoding(if:)"},"doc://MetaCodable/documentation/MetaCodable/ConformEncodable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConformEncodable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier","text":"CodableCommonStrategy"},{"kind":"text","text":"])"}],"url":"\/documentation\/metacodable\/conformencodable(commonstrategies:)","kind":"symbol","title":"ConformEncodable(commonStrategies:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformEncodable(commonStrategies:)","role":"symbol","abstract":[{"type":"text","text":"Generate "},{"code":"Encodable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"type":"codeVoice","code":"enum"},{"type":"text","text":", "},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"protocol"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"declarations. This macro is named "},{"code":"ConformEncodable","type":"codeVoice"},{"text":" to avoid conflicts","type":"text"},{"type":"text","text":" "},{"text":"with the standard library ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" protocol."}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-7toka":{"abstract":[{"type":"text","text":"Indicates the field needs to be encoded only if provided condition"},{"type":"text","text":" "},{"type":"text","text":"is not satisfied."}],"url":"\/documentation\/metacodable\/ignoreencoding(if:)-7toka","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","title":"IgnoreEncoding(if:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka"},"doc://MetaCodable/documentation/MetaCodable/CodableCommonStrategy":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CodableCommonStrategy"}],"url":"\/documentation\/metacodable\/codablecommonstrategy","kind":"symbol","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableCommonStrategy"}],"title":"CodableCommonStrategy","abstract":[{"type":"text","text":"A marker type used to represent a common type conversion strategy for the "},{"type":"codeVoice","code":"@Codable"},{"text":" macro.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","title":"ContentAt(_:_:)","type":"topic","abstract":[{"text":"Indicates the enum-case associated values or protocol conforming types need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ContentAt","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","title":"Codable(commonStrategies:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}]}}}