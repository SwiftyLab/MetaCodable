{"metadata":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"kind":"text","text":"()"}],"externalID":"s:11MetaCodable23IgnoreCodingInitializedyycfm","symbolKind":"macro","roleHeading":"Macro","title":"IgnoreCodingInitialized()","role":"symbol","platforms":[{"beta":false,"introducedAt":"5.9","deprecated":false,"unavailable":false,"name":"Swift"}],"modules":[{"name":"MetaCodable"}]},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(peer) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This macro can be applied to types to ignore decoding and encoding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"all initialized properties of said type:"}]},{"code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    let field: String","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Here ","type":"text"},{"code":"initialized","type":"codeVoice"},{"text":" property is ignored from decoding and encoding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"while "},{"code":"field","type":"codeVoice"},{"type":"text","text":" is decoded and encoded."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Initialized properties can explicitly considered for decoding and encoding"},{"text":" ","type":"text"},{"type":"text","text":"by attaching any coding attributes, i.e. "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","isActive":true,"type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"type":"text","text":","},{"type":"text","text":" "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","isActive":true,"type":"reference"},{"type":"text","text":" etc."}]},{"syntax":"swift","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    @CodedIn","    var explicitCode: String = \"coded\"","    let field: String","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Here ","type":"text"},{"type":"codeVoice","code":"explicitCode"},{"text":" property is decoded and encoded","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"while "},{"code":"initialized","type":"codeVoice"},{"type":"text","text":" is ignored from decoding and encoding."}]},{"inlineContent":[{"type":"text","text":"Similarly, all initialized associated values can be ignored for decoding"},{"text":" ","type":"text"},{"text":"and encoding in enum type:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Codable","@IgnoreCodingInitialized","enum CodableType {","    case one(initialized: String = \"some\")","    case two(uninitialized: String)","}"]},{"type":"paragraph","inlineContent":[{"text":"Here ","type":"text"},{"code":"initialized","type":"codeVoice"},{"text":" associated value is ignored from decoding and encoding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"while "},{"type":"codeVoice","code":"uninitialized"},{"text":" is decoded and encoded.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Also, only for particular case initialized associated values can be ignored"},{"type":"text","text":" "},{"text":"for decoding and encoding in enum type:","type":"text"}],"type":"paragraph"},{"code":["@Codable","enum CodableType {","    @IgnoreCodingInitialized","    case one(initialized: String = \"some\")","    case two(notIgnored: String = \"some\")","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Here ","type":"text"},{"type":"codeVoice","code":"initialized"},{"type":"text","text":" associated value is ignored from decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"while "},{"code":"notIgnored","type":"codeVoice"},{"text":" is decoded and encoded.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"This macro on its own only validates if attached declaration","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)"},{"text":" macro uses this macro","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when generating final implementations."}],"type":"paragraph"}],"name":"Note"},{"style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute must be used combined with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)"},{"text":".","type":"text"}]}],"type":"aside"}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","interfaceLanguage":"swift"},"sections":[],"seeAlsoSections":[{"title":"Ignoring","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(basedOn:)"],"anchor":"Ignoring"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/ignorecodinginitialized()"]}],"abstract":[{"type":"text","text":"Indicates by default initialized properties\/associated values for"},{"text":" ","type":"text"},{"type":"text","text":"the attached type\/enum-case will be ignored for decoding\/encoding."}],"references":{"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"text":"â€™s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","kind":"symbol","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-1iuvv":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","type":"topic","url":"\/documentation\/metacodable\/ignoreencoding(if:)-1iuvv","abstract":[{"text":"Indicates the field\/case needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is not satisfied."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":": (repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"role":"symbol","title":"IgnoreEncoding(if:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field\/case\/type needs to ignored from encoding."}],"url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","title":"IgnoreEncoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/metacodable\/default(_:)","kind":"symbol","title":"Default(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","role":"symbol","abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-7toka":{"abstract":[{"type":"text","text":"Indicates the field needs to be encoded only if provided condition"},{"type":"text","text":" "},{"type":"text","text":"is not satisfied."}],"url":"\/documentation\/metacodable\/ignoreencoding(if:)-7toka","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","title":"IgnoreEncoding(if:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka"},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"kind":"text","text":": ["},{"text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","title":"Codable(commonStrategies:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", "},{"code":"class","type":"codeVoice"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"type":"text","text":"declarations."}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","type":"topic","url":"\/documentation\/metacodable\/ignorecoding()","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"role":"symbol","title":"IgnoreCoding()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}],"url":"\/documentation\/metacodable\/ignoredecoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreDecoding"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","title":"IgnoreDecoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the attached type\/enum-case will be ignored for decoding\/encoding."}],"url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol","title":"IgnoreCodingInitialized()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(basedOn:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(basedOn:)","type":"topic","url":"\/documentation\/metacodable\/ignoreencoding(basedon:)","abstract":[{"text":"Indicates the field needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is not satisfied, based on the containing object."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"basedOn","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"role":"symbol","title":"IgnoreEncoding(basedOn:)"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/metacodable\/codedby(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field or enum\/protocol identifier needs to be decoded and"},{"type":"text","text":" "},{"type":"text","text":"encoded by the provided "},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}],"title":"CodedBy(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","title":"CodedIn(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"text":" ","type":"text"},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedIn"},{"text":"(","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}]}}}