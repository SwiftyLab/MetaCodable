{"abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol\/asMacroLexicalContext()"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxmacros\/swiftsyntax\/syntaxprotocol\/asmacrolexicalcontext()"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" for any syntax node that isn’t a lexical context.","type":"text"}],"type":"paragraph"}]}],"metadata":{"modules":[{"relatedModules":["SwiftSyntax"],"name":"SwiftSyntaxMacros"}],"symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","title":"asMacroLexicalContext()","extendedModule":"SwiftSyntax"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros":{"abstract":[],"title":"SwiftSyntaxMacros","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros","url":"\/documentation\/swiftsyntaxmacros"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/SwiftSyntax/SyntaxProtocol/asMacroLexicalContext()":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol\/asMacroLexicalContext()","abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntaxmacros\/swiftsyntax\/syntaxprotocol\/asmacrolexicalcontext()","title":"asMacroLexicalContext()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/SwiftSyntax":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax","title":"SwiftSyntax","kind":"symbol","abstract":[],"url":"\/documentation\/swiftsyntaxmacros\/swiftsyntax","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/SwiftSyntax/SyntaxProtocol":{"navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"url":"\/documentation\/swiftsyntaxmacros\/swiftsyntax\/syntaxprotocol","abstract":[],"kind":"symbol","type":"topic","role":"symbol","title":"SyntaxProtocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/SwiftSyntax\/SyntaxProtocol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"identifier"}]}}}