{"sections":[{"chapter":"Advanced MetaCodable","estimatedTimeInMinutes":20,"content":[{"type":"paragraph","inlineContent":[{"text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol.","type":"text"}]}],"xcodeRequirement":"Xcode 15 or later","title":"Represent dynamic data variations with protocol","kind":"hero"},{"tasks":[{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to "},{"type":"reference","overridingTitle":"enums","overridingTitleInlineContent":[{"type":"text","text":"enums"}],"isActive":true,"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum"},{"type":"text","text":" external, internal and adjacently tagged data variations are supported with default being externally tagged data."}]}],"mediaPosition":"trailing"}],"title":"Create dynamic variation Codable types","anchor":"Create-dynamic-variation-Codable-types","stepsSection":[{"media":"DynamicPost-01.png","caption":[],"runtimePreview":null,"type":"step","code":null,"content":[{"inlineContent":[{"text":"Identify all the variations and the tags representing variations.","type":"text"}],"type":"paragraph"}]},{"type":"step","content":[{"inlineContent":[{"type":"text","text":"Create protocol containing common fields across all the data variations."}],"type":"paragraph"}],"media":null,"caption":[],"code":"DynamicPost-01.swift","runtimePreview":"DynamicPost-01.png"},{"code":"DynamicPost-02.swift","runtimePreview":"DynamicPost-01.png","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Attach ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","type":"reference","isActive":true},{"type":"text","text":" attribute to this protocol."}]}],"caption":[],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"Codable"},{"text":" types with each type representing a variation.","type":"text"}]}],"caption":[],"code":"DynamicPost-03.swift","type":"step","media":null,"runtimePreview":"DynamicPost-01.png"},{"media":null,"runtimePreview":"DynamicPost-01.png","code":"DynamicPost-04.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Conform common data protocol for each variant data type."}],"type":"paragraph"}],"caption":[]},{"media":null,"type":"step","code":"DynamicPost-05.swift","runtimePreview":"DynamicPost-01.png","caption":[],"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true},{"type":"text","text":" conformance for each variant data type, with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":" returning variant tag."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Provide multiple variant tags in "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier","type":"reference"},{"type":"text","text":" in case of multiple tags used to represent same variation."}],"type":"paragraph"}],"code":"DynamicPost-06.swift","type":"step","media":null,"runtimePreview":"DynamicPost-02.png","caption":[]},{"media":null,"runtimePreview":"DynamicPost-02.png","content":[{"inlineContent":[{"text":"Ignore specific type from decoding or encoding or both by attaching ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","isActive":true},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","isActive":true},{"type":"text","text":" macros respectively."}],"type":"paragraph"}],"code":"DynamicPost-07.swift","caption":[],"type":"step"},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"In case of internally tagged data, attach ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" macro to ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" declaration with value specifying tag field name."}]}],"code":"DynamicPost-08.swift","runtimePreview":"DynamicPost-03.png","media":null},{"caption":[],"type":"step","code":"DynamicPost-09.swift","runtimePreview":"DynamicPost-04.png","content":[{"type":"paragraph","inlineContent":[{"text":"In case of adjacently tagged data, additionally attach ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","type":"reference","isActive":true},{"text":" macro to ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" declaration with value specifying content field name."}]}],"media":null},{"runtimePreview":"Plugin.png","media":null,"caption":[],"content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin to target to handle code generation."}],"type":"paragraph"}],"type":"step","code":"Plugin.swift"},{"content":[{"inlineContent":[{"text":"Use generated ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder"},{"text":" for protocol to decode\/encode dynamic type.","type":"text"}],"type":"paragraph"}],"code":"Page.swift","media":null,"runtimePreview":"Page.png","type":"step","caption":[]}]},{"anchor":"Customize-dynamic-data-variations-detection","title":"Customize dynamic data variations detection","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Customize ","type":"text"},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin code generation.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"caption":[],"runtimePreview":"Plugin.png","content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin to target to handle code generation.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"code":"Plugin.swift"},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Create ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"},{"text":" file in the target plugin is included.","type":"text"}]}],"caption":[],"media":null,"code":"meta_codable_config-01.json"},{"type":"step","runtimePreview":"MetaCodableConfig.png","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provide "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan"},{"type":"text","text":" mode in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"},{"type":"text","text":" file to control source files accross dependency targets scanned for "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","type":"reference","isActive":true},{"text":" protocol variation data.","type":"text"}]}],"code":"meta_codable_config-02.json","media":null}]}],"kind":"tasks"}],"kind":"project","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/tutorials\/Usage\/$volume","doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable"]],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage","modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","kind":"task"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Applying-Common-Strategies","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Available-Common-Strategies","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Check-Your-Understanding","kind":"assessment"}]},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","kind":"task"}]}],"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials"},{"reference":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations"},{"kind":"task","reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","kind":"task"}],"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","sections":[{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","kind":"task"},{"reference":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","kind":"task"}]}]}]},"variants":[{"paths":["\/tutorials\/metacodable\/dynamic"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","interfaceLanguage":"swift"},"metadata":{"categoryPathComponent":"Usage","role":"project","category":"Discover MetaCodable","title":"Represent dynamic data variations with protocol"},"references":{"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies#Check-Your-Understanding":{"url":"\/tutorials\/metacodable\/commonstrategies#Check-Your-Understanding","type":"link","title":"Check Your Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Check-Your-Understanding"},"doc://MetaCodable/tutorials/Usage/MetaCodable-essentials":{"url":"\/tutorials\/usage\/metacodable-essentials","role":"article","kind":"article","type":"topic","title":"MetaCodable essentials","abstract":[],"identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/MetaCodable-essentials"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"title":"ContentAt(_:_:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContentAt"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/tutorials/MetaCodable/Essential":{"url":"\/tutorials\/metacodable\/essential","estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential","title":"Use with general-purpose Swift types","type":"topic","abstract":[{"text":"This tutorial guides you through","type":"text"}],"kind":"project","role":"project"},"DynamicPost-06.swift":{"fileType":"swift","identifier":"DynamicPost-06.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":24}],"type":"file","syntax":"swift","fileName":"Post.swift"},"DynamicPost-09.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","@ContentAt(\"content\")","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-09.swift","type":"file","fileName":"Post.swift","fileType":"swift","syntax":"swift","highlights":[{"line":5}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#Create-custom-advanced-customizations":{"url":"\/tutorials\/metacodable\/helper#Create-custom-advanced-customizations","kind":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"role":"pseudoSymbol","title":"Create custom advanced customizations","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#Create-custom-advanced-customizations","type":"section"},"DynamicPost-04.png":{"alt":"Adjacently tagged Post variations JSON representation","type":"image","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-04.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-04~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-04.png"},"Xcode 15 or later":{"url":"https:\/\/itunes.apple.com\/us\/app\/xcode\/id497799835?mt=12","title":"Xcode 15 or later","type":"xcodeRequirement","identifier":"Xcode 15 or later"},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies#Applying-Common-Strategies":{"url":"\/tutorials\/metacodable\/commonstrategies#Applying-Common-Strategies","role":"pseudoSymbol","kind":"section","type":"section","title":"Applying Common Strategies","abstract":[{"type":"text","text":"Learn how to apply strategies like "},{"type":"codeVoice","code":"ValueCoder"},{"type":"text","text":" to all properties automatically."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Applying-Common-Strategies"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"title":"IgnoreEncoding()"},"meta_codable_config-02.json":{"fileType":"json","identifier":"meta_codable_config-02.json","content":["{","    \"scan\": \"recursive\"","}"],"highlights":[{"line":1},{"line":2},{"line":3}],"type":"file","syntax":"json","fileName":"meta_codable_config.json"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Create-dynamic-variation-Codable-types":{"url":"\/tutorials\/metacodable\/dynamic#Create-dynamic-variation-Codable-types","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Create-dynamic-variation-Codable-types","kind":"section","type":"section","role":"pseudoSymbol","title":"Create dynamic variation Codable types","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}]},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-external-tag":{"url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-external-tag","kind":"section","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"role":"pseudoSymbol","title":"Create Codable enums with external tag","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-external-tag","type":"section"},"DynamicPost-08.swift":{"content":["import MetaCodable","","@Codable","@CodedAt(\"type\")","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-08.swift","type":"file","fileName":"Post.swift","fileType":"swift","syntax":"swift","highlights":[{"line":4}]},"meta_codable_config-01.json":{"fileType":"json","identifier":"meta_codable_config-01.json","content":["{}"],"highlights":[],"type":"file","syntax":"json","fileName":"meta_codable_config.json"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Share-common-Codable-fields":{"url":"\/tutorials\/metacodable\/essential#Share-common-Codable-fields","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Share-common-Codable-fields","kind":"section","type":"section","role":"pseudoSymbol","title":"Share common Codable fields","abstract":[{"type":"text","text":"This tutorial guides you through"}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-date-representations":{"url":"\/tutorials\/metacodable\/helper#DecodeEncode-date-representations","kind":"section","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}],"role":"pseudoSymbol","title":"Decode\/Encode date representations","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-date-representations","type":"section"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic#Customize-dynamic-data-variations-detection":{"kind":"section","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic#Customize-dynamic-data-variations-detection","title":"Customize dynamic data variations detection","type":"section","url":"\/tutorials\/metacodable\/dynamic#Customize-dynamic-data-variations-detection","role":"pseudoSymbol"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-adjacent-tag":{"url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-adjacent-tag","role":"pseudoSymbol","kind":"section","type":"section","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-adjacent-tag","title":"Create Codable enums with adjacent tag"},"Plugin.swift":{"content":["import PackageDescription","","let appTarget = package.targets.first!","appTarget.plugins.append(","    .plugin(","        name: \"MetaProtocolCodable\",","        package: \"MetaCodable\"","    )",")"],"identifier":"Plugin.swift","type":"file","fileName":"Package.swift","fileType":"swift","syntax":"swift","highlights":[]},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","role":"symbol","url":"\/documentation\/metacodable\/metacodableconfig","fragments":[{"kind":"keyword","text":"configuration"},{"text":" ","kind":"text"},{"kind":"keyword","text":"file"},{"text":" ","kind":"text"},{"text":"MetaCodableConfig","kind":"identifier"}],"abstract":[{"text":"The configuration file providing additional customization options for ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin."}],"title":"MetaCodableConfig"},"doc://MetaCodable/tutorials/Usage":{"title":"Discover MetaCodable","abstract":[{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":" supercharges "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros. Remove previous boiler-plate for "},{"code":"Codable","type":"codeVoice"},{"text":" implementations and create ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" conformances faster than ever before."}],"role":"overview","url":"\/tutorials\/usage","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","kind":"overview","type":"topic"},"Page.swift":{"fileType":"swift","identifier":"Page.swift","content":["import MetaCodable","","@Codable","struct Page {","    @CodedBy(","        SequenceCoder(","            elementHelper: PostCoder()","        )","    )","    let content: [Post]","    let next: String","}"],"highlights":[],"type":"file","syntax":"swift","fileName":"Page.swift"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","title":"IgnoreDecoding()","url":"\/documentation\/metacodable\/ignoredecoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}]},"doc://MetaCodable/tutorials/Usage/Advanced-MetaCodable":{"type":"topic","title":"Advanced MetaCodable","kind":"article","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage\/Advanced-MetaCodable","url":"\/tutorials\/usage\/advanced-metacodable","abstract":[],"role":"article"},"DynamicPost-01.swift":{"content":["protocol Post {","    var id: UUID { get }","}"],"identifier":"DynamicPost-01.swift","type":"file","fileName":"Post.swift","fileType":"swift","syntax":"swift","highlights":[]},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"title":"Codable(commonStrategies:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"type":"text","text":" "},{"text":"declarations.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)"},"doc://MetaCodable/tutorials/MetaCodable/Essential#Customize-field-decodingencoding":{"url":"\/tutorials\/metacodable\/essential#Customize-field-decodingencoding","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Customize-field-decodingencoding","kind":"section","type":"section","role":"pseudoSymbol","title":"Customize field decoding\/encoding","abstract":[{"type":"text","text":"This tutorial guides you through"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"role":"symbol","title":"Coded","url":"\/documentation\/metacodable\/helpercoder\/coded","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coded"}],"type":"topic","kind":"symbol","required":true},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"title":"identifier","role":"symbol","type":"topic","abstract":[{"text":"The identifier value(s) for this type.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","kind":"typeIdentifier","text":"DynamicCodableIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa","text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"required":true,"kind":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},"MetaCodableConfig.png":{"alt":"MetaCodableConfig.plist configuration file","type":"image","variants":[{"url":"\/images\/MetaCodable\/MetaCodableConfig.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/MetaCodableConfig~dark.png","traits":["1x","dark"]}],"identifier":"MetaCodableConfig.png"},"DynamicPost-04.swift":{"fileType":"swift","highlights":[{"line":9},{"line":15},{"line":22},{"line":29}],"identifier":"DynamicPost-04.swift","fileName":"Post.swift","syntax":"swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost: Post {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"type":"file"},"DynamicPost-03.png":{"alt":"Internally tagged Post variations JSON representation","type":"image","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-03.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-03~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-03.png"},"Page.png":{"alt":"JSON representation of Page containing Posts","type":"image","variants":[{"url":"\/images\/MetaCodable\/Page.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/Page~dark.png","traits":["1x","dark"]}],"identifier":"Page.png"},"doc://MetaCodable/tutorials/MetaCodable/Enum#Create-Codable-enums-with-internal-tag":{"url":"\/tutorials\/metacodable\/enum#Create-Codable-enums-with-internal-tag","role":"pseudoSymbol","kind":"section","type":"section","title":"Create Codable enums with internal tag","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"type":"codeVoice","code":"MetaCodable"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum#Create-Codable-enums-with-internal-tag"},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"type":"topic","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HelperCoder","kind":"identifier"}],"title":"HelperCoder","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","url":"\/documentation\/metacodable\/helpercoder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type that helps to decode and encode underlying "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded"},{"type":"text","text":" type"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and to provided "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" respectively."}]},"DynamicPost-07.swift":{"fileType":"swift","identifier":"DynamicPost-07.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@IgnoreCoding","struct InvalidPost: Post {","    let id: UUID","    let invalid: Bool","}","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        [\"picture\", \"photo\"]","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"type":"file","syntax":"swift","fileName":"Post.swift"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"type":"text","text":"A type that can be decoded\/encoded dynamically based on unique identifier."}],"title":"DynamicCodable","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodable","kind":"identifier"}]},"doc://MetaCodable/tutorials/MetaCodable/Enum":{"title":"Represent variations in data","abstract":[{"type":"text","text":"This tutorial guides you through handling variation in data and how to represent different kinds of variations in "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":" using "},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":"."}],"role":"project","url":"\/tutorials\/metacodable\/enum","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Enum","estimatedTime":"10min","kind":"project","type":"topic"},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies#Available-Common-Strategies":{"url":"\/tutorials\/metacodable\/commonstrategies#Available-Common-Strategies","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies#Available-Common-Strategies","kind":"section","type":"section","role":"pseudoSymbol","title":"Available Common Strategies","abstract":[{"type":"text","text":"Learn how to apply strategies like "},{"type":"codeVoice","code":"ValueCoder"},{"type":"text","text":" to all properties automatically."}]},"doc://MetaCodable/tutorials/MetaCodable/Helper":{"title":"Add common decoding\/encoding customizations","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"text":" module.","type":"text"}],"role":"project","url":"\/tutorials\/metacodable\/helper","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper","estimatedTime":"20min","kind":"project","type":"topic"},"doc://MetaCodable/tutorials/MetaCodable/Dynamic":{"url":"\/tutorials\/metacodable\/dynamic","estimatedTime":"20min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Dynamic","title":"Represent dynamic data variations with protocol","type":"topic","abstract":[{"type":"text","text":"This tutorial guides you through handling dynamic variation in data and how to represent different kinds of variations as separate types, tied to a single protocol."}],"kind":"project","role":"project"},"DynamicPost-05.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","typealias Identifier =","    DynamicCodableIdentifier<String>","","@Codable","struct TextPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"text\"","    }","","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"picture\"","    }","","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"audio\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost: Post, DynamicCodable {","    static var identifier: Identifier {","        \"video\"","    }","","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"identifier":"DynamicPost-05.swift","type":"file","fileName":"Post.swift","fileType":"swift","syntax":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48}]},"DynamicPost-03.swift":{"fileType":"swift","identifier":"DynamicPost-03.swift","content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}","","@Codable","struct TextPost {","    let id: UUID","    let text: String","}","","@Codable","struct PicturePost {","    let id: UUID","    let url: URL","    let caption: String","}","","@Codable","struct AudioPost {","    let id: UUID","    let url: URL","    let duration: Int","}","","@Codable","struct VideoPost {","    let id: UUID","    let url: URL","    let duration: Int","    let thumbnail: URL","}"],"highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"type":"file","syntax":"swift","fileName":"Post.swift"},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-basic-value-types-without-type-check":{"url":"\/tutorials\/metacodable\/helper#DecodeEncode-basic-value-types-without-type-check","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-basic-value-types-without-type-check","kind":"section","type":"section","role":"pseudoSymbol","title":"Decode\/Encode basic value types without type check","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}]},"doc://MetaCodable/tutorials/MetaCodable/Helper#DecodeEncode-sequence-of-values":{"url":"\/tutorials\/metacodable\/helper#DecodeEncode-sequence-of-values","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Helper#DecodeEncode-sequence-of-values","kind":"section","type":"section","role":"pseudoSymbol","title":"Decode\/Encode sequence of values","abstract":[{"type":"text","text":"This tutorial shows how common customizations to decoding\/encoding properties can be made with the help of "},{"type":"codeVoice","code":"HelperCoders"},{"type":"text","text":" module."}]},"DynamicPost-02.swift":{"content":["import MetaCodable","","@Codable","protocol Post {","    var id: UUID { get }","}"],"identifier":"DynamicPost-02.swift","type":"file","fileName":"Post.swift","fileType":"swift","syntax":"swift","highlights":[{"line":1},{"line":2},{"line":3}]},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig/Scan":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The source file scan option for "},{"type":"codeVoice","code":"MetaProtocolCodable"},{"text":" build tool plugin.","type":"text"}],"url":"\/documentation\/metacodable\/metacodableconfig\/scan","fragments":[{"text":"configuration","kind":"keyword"},{"text":" ","kind":"text"},{"text":"option","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scan","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig\/Scan","title":"Scan"},"DynamicPost-01.png":{"alt":"Post variations JSON representation","type":"image","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-01.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-01~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-01.png"},"DynamicPost-02.png":{"alt":"Post variations JSON representation","type":"image","variants":[{"url":"\/images\/MetaCodable\/DynamicPost-02.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/DynamicPost-02~dark.png","traits":["1x","dark"]}],"identifier":"DynamicPost-02.png"},"doc://MetaCodable/tutorials/MetaCodable/CommonStrategies":{"url":"\/tutorials\/metacodable\/commonstrategies","estimatedTime":"10min","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/CommonStrategies","title":"Using Common Strategies","type":"topic","abstract":[{"type":"text","text":"Learn how to apply strategies like "},{"code":"ValueCoder","type":"codeVoice"},{"text":" to all properties automatically.","type":"text"}],"kind":"project","role":"project"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"title":"CodedAt(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/tutorials/MetaCodable/Essential#Create-Codable-type-and-customize-CodingKey-of-fields":{"url":"\/tutorials\/metacodable\/essential#Create-Codable-type-and-customize-CodingKey-of-fields","kind":"section","abstract":[{"type":"text","text":"This tutorial guides you through"}],"role":"pseudoSymbol","title":"Create Codable type and customize CodingKey of fields","identifier":"doc:\/\/MetaCodable\/tutorials\/MetaCodable\/Essential#Create-Codable-type-and-customize-CodingKey-of-fields","type":"section"},"Plugin.png":{"alt":"Xcode build tool plugin settings","type":"image","variants":[{"url":"\/images\/MetaCodable\/Plugin.png","traits":["1x","light"]},{"url":"\/images\/MetaCodable\/Plugin~dark.png","traits":["1x","dark"]}],"identifier":"Plugin.png"}}}