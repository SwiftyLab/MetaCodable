{"metadata":{"title":"isMutable(_:)","modules":[{"name":"SwiftBasicFormat"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isMutable"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"s:16SwiftBasicFormat0bC0C9isMutableySb0A6Syntax05TokenF0VF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isMutable","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"token"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/swiftbasicformat\/basicformat\/ismutable(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat"]]},"abstract":[{"type":"text","text":"Whether the formatter should consider this token as being mutable."},{"text":" ","type":"text"},{"type":"text","text":"This allows the diagnostic generator to only assume that missing nodes"},{"text":" ","type":"text"},{"type":"text","text":"will be mutated. Thus, if two tokens need to be separated by a space, it"},{"type":"text","text":" "},{"text":"will not be assumed that the space is added to an immutable previous node.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat\/isMutable(_:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenSyntax"}],"navigatorTitle":[{"text":"TokenSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Syntax node representing a single token."}],"title":"TokenSyntax","url":"\/documentation\/swiftsyntax\/tokensyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSyntax","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat":{"abstract":[],"title":"SwiftBasicFormat","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat","url":"\/documentation\/swiftbasicformat","kind":"symbol","role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat/BasicFormat":{"title":"BasicFormat","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat","abstract":[{"type":"text","text":"A rewriter that performs a “basic” format of the passed tree."}],"kind":"symbol","url":"\/documentation\/swiftbasicformat\/basicformat","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicFormat"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicFormat"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat/BasicFormat/isMutable(_:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat\/isMutable(_:)","kind":"symbol","url":"\/documentation\/swiftbasicformat\/basicformat\/ismutable(_:)","title":"isMutable(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isMutable","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Whether the formatter should consider this token as being mutable."},{"text":" ","type":"text"},{"type":"text","text":"This allows the diagnostic generator to only assume that missing nodes"},{"type":"text","text":" "},{"text":"will be mutated. Thus, if two tokens need to be separated by a space, it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will not be assumed that the space is added to an immutable previous node."}],"type":"topic"}}}