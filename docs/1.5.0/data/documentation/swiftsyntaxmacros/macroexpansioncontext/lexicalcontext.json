{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicalContext","kind":"identifier"},{"text":": [","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lexical contexts will have many of their details stripped out to prevent"},{"type":"text","text":" "},{"type":"text","text":"macros from having visibility into unrelated code. For example, functions"},{"type":"text","text":" "},{"type":"text","text":"and closures have their bodies removed, types and extensions have their"},{"type":"text","text":" "},{"text":"member lists emptied, and properties and subscripts have their accessor","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"blocks removed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first entry in the array is the innermost context. For attached"},{"type":"text","text":" "},{"type":"text","text":"macros, this is often the declaration to which the macro is attached."},{"text":" ","type":"text"},{"text":"This array can be empty if there is no context, for example when a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"freestanding macro is used at file scope."}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxmacros\/macroexpansioncontext\/lexicalcontext"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext"},"abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"text":"starting from the syntax node at which the macro expansion occurs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and containing all “context” nodes including functions, closures, types,"},{"text":" ","type":"text"},{"type":"text","text":"properties, subscripts, and extensions."}],"kind":"symbol","defaultImplementationsSections":[{"title":"MacroExpansionContext Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext-478jr"],"anchor":"MacroExpansionContext-Implementations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:17SwiftSyntaxMacros21MacroExpansionContextP07lexicalF0Say0aB00B0VGvp","symbolKind":"property","roleHeading":"Instance Property","required":true,"role":"symbol","modules":[{"name":"SwiftSyntaxMacros"}],"title":"lexicalContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lexicalContext"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"]","kind":"text"}]},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/MacroExpansionContext/lexicalContext":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"type":"text","text":" "},{"text":"starting from the syntax node at which the macro expansion occurs","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and containing all “context” nodes including functions, closures, types,"},{"type":"text","text":" "},{"type":"text","text":"properties, subscripts, and extensions."}],"kind":"symbol","defaultImplementations":1,"title":"lexicalContext","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicalContext","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"required":true,"url":"\/documentation\/swiftsyntaxmacros\/macroexpansioncontext\/lexicalcontext"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros":{"abstract":[],"title":"SwiftSyntaxMacros","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros","url":"\/documentation\/swiftsyntaxmacros"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/MacroExpansionContext/lexicalContext-478jr":{"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"starting from the syntax node at which the macro expansion occurs"},{"type":"text","text":" "},{"text":"and containing all “context” nodes including functions, closures, types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"properties, subscripts, and extensions."}],"type":"topic","role":"symbol","title":"lexicalContext","url":"\/documentation\/swiftsyntaxmacros\/macroexpansioncontext\/lexicalcontext-478jr","deprecated":true,"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext\/lexicalContext-478jr","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicalContext","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"]"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxMacros/MacroExpansionContext":{"abstract":[{"text":"Interface to extract information about the context in which a given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"macro is expanded."}],"type":"topic","url":"\/documentation\/swiftsyntaxmacros\/macroexpansioncontext","kind":"symbol","navigatorTitle":[{"text":"MacroExpansionContext","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MacroExpansionContext","kind":"identifier"}],"title":"MacroExpansionContext","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxMacros\/MacroExpansionContext"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"}}}