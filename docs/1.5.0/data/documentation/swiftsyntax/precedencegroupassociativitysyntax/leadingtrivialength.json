{"metadata":{"extendedModule":"SwiftSyntax","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE19leadingTriviaLengthAA06SourceF0Vvp::SYNTHESIZED::s:11SwiftSyntax028PrecedenceGroupAssociativityB0V","role":"symbol","title":"leadingTriviaLength","symbolKind":"property","roleHeading":"Instance Property","modules":[{"name":"SwiftSyntax"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax"]]},"variants":[{"paths":["\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax\/leadingtrivialength"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SourceLength","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax\/leadingTriviaLength"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrecedenceGroupAssociativitySyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PrecedenceGroupAssociativitySyntax","kind":"identifier"}],"abstract":[{"text":"Specifies how a sequence of operators with the same precedence level are grouped together in the absence of grouping parentheses.","type":"text"}],"url":"\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax","kind":"symbol","title":"PrecedenceGroupAssociativitySyntax","role":"symbol","navigatorTitle":[{"text":"PrecedenceGroupAssociativitySyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrecedenceGroupAssociativitySyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrecedenceGroupAssociativitySyntax\/leadingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"role":"symbol","title":"leadingTriviaLength","kind":"symbol","url":"\/documentation\/swiftsyntax\/precedencegroupassociativitysyntax\/leadingtrivialength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SourceLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SourceLength","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SourceLength","kind":"identifier"}],"title":"SourceLength","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceLength"}],"url":"\/documentation\/swiftsyntax\/sourcelength","abstract":[{"type":"text","text":"The length a syntax node spans in the source code. From any AbsolutePosition"},{"text":" ","type":"text"},{"type":"text","text":"you reach a node’s end location by adding its UTF-8 length."}],"kind":"symbol","role":"symbol"}}}