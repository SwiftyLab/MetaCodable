{"metadata":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}]},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/init(_:)-2vndw"],"anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedRange"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/as(_:)-17kai","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/as(_:)-6u7eq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/as(_:)-8epri","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-1204i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-23zoh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-2d6of","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-36mn1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-3ipf3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-3yc6g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-449zz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-50xus","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-6ga1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-79cb3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-89zqk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-999qs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-9quhg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-9vl6j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/cast(_:)-2mfs0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/cast(_:)-3p1yk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/cast(_:)-5bn43","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/is(_:)-24840","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/is(_:)-4pzzf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/is(_:)-5753t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-1559c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-2tma3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-3ca7n","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-452y5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-4h63","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-4y0xg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-5fofz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-5xbuk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-66b13","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-66qi4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-7sb6o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-7svmk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-86hj2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-8w4ok","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/with(_:_:)-6es28","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/write(to:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/SyntaxProtocol-Implementations"},"kind":"article","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-89zqk":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-89zqk","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-89zqk","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/keyPathInParent":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/keypathinparent","type":"topic","title":"keyPathInParent","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/keyPathInParent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-4y0xg":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-4y0xg","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-4y0xg","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/byteSize":{"deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/bytesize","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/byteSize","role":"symbol","title":"byteSize","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/children(viewMode:)":{"abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"type":"topic","kind":"symbol","title":"children(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/children(viewMode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/children(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/detach()":{"title":"detach()","deprecated":true,"abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/detach()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-66qi4":{"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-66qi4","kind":"symbol","role":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-66qi4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-36mn1":{"kind":"symbol","role":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-36mn1","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-36mn1"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/syntaxNodeType":{"role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/syntaxnodetype","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/syntaxNodeType","type":"topic","title":"syntaxNodeType","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxNodeType"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"kind":"text","text":".Type"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/endPosition":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/endPosition","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/endposition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"type":"topic","role":"symbol","title":"endPosition","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/hasSequenceExpr":{"type":"topic","kind":"symbol","role":"symbol","title":"hasSequenceExpr","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/hassequenceexpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasSequenceExpr","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/cast(_:)-5bn43":{"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/cast(_:)-5bn43","role":"symbol","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node..","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/cast(_:)-5bn43","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"kind":"symbol","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/description":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A source-accurate description of this node."}],"title":"description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/description","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/contentLength":{"title":"contentLength","type":"topic","deprecated":true,"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/contentlength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/contentLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-50xus":{"role":"symbol","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-50xus","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-50xus","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/ancestorOrSelf(mapping:)":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/ancestororself(mapping:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/ancestorOrSelf(mapping:)","kind":"symbol","title":"ancestorOrSelf(mapping:)","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"code":"condition","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ancestorOrSelf"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"mapping","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"text":"?) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/leadingTrivia":{"role":"symbol","kind":"symbol","title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/leadingTrivia","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/leadingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"type":"topic","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-3yc6g":{"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-3yc6g","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-3yc6g","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/debugDescription":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/debugdescription","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"title":"debugDescription","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/endLocation(converter:afterTrailingTrivia:)","title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/nextToken(viewMode:)":{"abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/nexttoken(viewmode:)","kind":"symbol","role":"symbol","type":"topic","title":"nextToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/nextToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-6ga1":{"role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-6ga1","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-6ga1","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmedDescription(matching:)":{"type":"topic","title":"trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedDescription(matching:)","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmeddescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"text":" ","type":"text"},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-452y5":{"kind":"symbol","role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-452y5","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-452y5"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/cast(_:)-3p1yk":{"title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S"}],"role":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/cast(_:)-3p1yk","type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/cast(_:)-3p1yk"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-449zz":{"title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-449zz","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-449zz","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/is(_:)-5753t":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/is(_:)-5753t","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/is(_:)-5753t","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"title":"is(_:)","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmedDescription":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmeddescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedDescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"title":"trimmedDescription","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-7svmk":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-7svmk","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-7svmk"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/byteSizeAfterTrimmingTrivia":{"deprecated":true,"type":"topic","title":"byteSizeAfterTrimmingTrivia","role":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/byteRange":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"abstract":[],"kind":"symbol","title":"byteRange","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/byteRange","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/byterange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-2d6of":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-2d6of","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-2d6of","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/id":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/id","title":"id","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/detached":{"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/detached","title":"detached","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"type":"text","text":"from its parent."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-86hj2":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-86hj2","type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-86hj2","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/is(_:)-24840":{"title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/is(_:)-24840","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/is(_:)-24840","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/token(at:)":{"title":"token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/token(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trailingTriviaLength":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trailingTriviaLength","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trailingtrivialength","title":"trailingTriviaLength","type":"topic","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-999qs":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-999qs","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-999qs","role":"symbol","title":"asProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-23zoh":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-23zoh","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-23zoh"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-5fofz":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-5fofz","type":"topic","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-5fofz","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/as(_:)-17kai":{"role":"symbol","kind":"symbol","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":"?"}],"title":"as(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/as(_:)-17kai","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/as(_:)-17kai"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/hasParent":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasParent","type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/hasparent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/parent":{"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/parent","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/parent","role":"symbol","title":"parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-3ipf3":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-3ipf3","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-3ipf3","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-79cb3":{"role":"symbol","title":"asProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-79cb3","type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-79cb3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-4h63":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-4h63","role":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-4h63"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/firstToken":{"title":"firstToken","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/firstToken","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/firsttoken","deprecated":true,"abstract":[],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-5xbuk":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-5xbuk","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-5xbuk","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-7sb6o":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-7sb6o","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-7sb6o","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmed":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmed","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmed","title":"trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isImplicit":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"text":" ","type":"text"},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isimplicit","deprecated":true,"title":"isImplicit","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/is(_:)-4pzzf":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/is(_:)-4pzzf","type":"topic","title":"is(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/is(_:)-4pzzf","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-1559c":{"type":"topic","title":"isProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-1559c","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-1559c"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/totalByteRange":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/totalbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/totalByteRange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"title":"totalByteRange","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmedLength":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedLength","kind":"symbol","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"text":"leading or trailing trivia.","type":"text"}],"type":"topic","title":"trimmedLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmed(matching:)":{"type":"topic","title":"trimmed(matching:)","role":"symbol","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmed(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-2tma3":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-2tma3","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-2tma3","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","title":"isProtocol(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trailingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trailingTrivia","title":"trailingTrivia","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trailingtrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/previousToken":{"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/previousToken","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/previoustoken","type":"topic","title":"previousToken","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/previousToken(viewMode:)":{"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/previoustoken(viewmode:)","title":"previousToken(viewMode:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/previousToken(viewMode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-8w4ok":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-8w4ok","kind":"symbol","role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-8w4ok","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/leadingTriviaLength":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/leadingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"title":"leadingTriviaLength","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/lastToken(viewMode:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/lasttoken(viewmode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"title":"lastToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/cast(_:)-2mfs0":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/cast(_:)-2mfs0","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/cast(_:)-2mfs0","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"title":"cast(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/as(_:)-6u7eq":{"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/as(_:)-6u7eq","type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/as(_:)-6u7eq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"title":"as(_:)","role":"symbol","abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmedRange":{"type":"topic","title":"trimmedRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedRange","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmedrange","abstract":[{"text":"The range of this node excluding leading and trailing trivia.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax","title":"ExpressionSegmentSyntax","abstract":[{"type":"text","text":"An interpolated expression inside a string literal."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/hasWarning":{"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/haswarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference"},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"text":".","type":"text"}],"title":"hasWarning","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasWarning","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-9quhg":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-9quhg","role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-9quhg","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-66b13":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-66b13","role":"symbol","title":"isProtocol(_:)","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-66b13"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/endPositionBeforeTrailingTrivia":{"type":"topic","title":"endPositionBeforeTrailingTrivia","role":"symbol","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/endpositionbeforetrailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/endPositionBeforeTrailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/syntaxTextBytes":{"abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/syntaxTextBytes","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"title":"syntaxTextBytes","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/syntaxtextbytes","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/index":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/index","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}],"title":"index","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/firstToken(viewMode:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/firstToken(viewMode:)","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"title":"firstToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/firsttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/root":{"type":"topic","title":"root","role":"symbol","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/trimmedByteRange":{"role":"symbol","title":"trimmedByteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/trimmedByteRange","type":"topic","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/trimmedbyterange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/with(_:_:)-6es28":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/with(_:_:)-6es28","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/with(_:_:)-6es28","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"title":"with(_:_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/kind":{"type":"topic","title":"kind","role":"symbol","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/as(_:)-8epri":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/as(_:)-8epri","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/as(_:)-8epri","role":"symbol","kind":"symbol","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"deprecated":true,"title":"as(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-1204i":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-1204i","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-1204i","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/totalLength":{"title":"totalLength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/totalLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/totallength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasMaximumNestingLevelOverflow","abstract":[],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/asProtocol(_:)-9vl6j":{"type":"topic","title":"asProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/asprotocol(_:)-9vl6j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/asProtocol(_:)-9vl6j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/hasError":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/haserror","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/hasError","title":"hasError","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/position":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/position","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"title":"position","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/init(_:)-2vndw":{"type":"topic","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/init(_:)-2vndw","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/init(_:)-2vndw"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/positionAfterSkippingLeadingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/positionafterskippingleadingtrivia","title":"positionAfterSkippingLeadingTrivia","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/nextToken":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/nexttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/nextToken","abstract":[],"title":"nextToken","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/isProtocol(_:)-3ca7n":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/isprotocol(_:)-3ca7n","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/isProtocol(_:)-3ca7n"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/write(to:)","type":"topic","title":"write(to:)","kind":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Target"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/tokens(viewMode:)":{"type":"topic","title":"tokens(viewMode:)","role":"symbol","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/range":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/range","type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/range","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"role":"symbol","title":"range","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"range","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/lastToken":{"type":"topic","title":"lastToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/lasttoken","deprecated":true,"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/lastToken","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/node(at:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/node(at:)","title":"node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax/startLocation(converter:afterLeadingTrivia:)":{"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax\/startlocation(converter:afterleadingtrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax\/startLocation(converter:afterLeadingTrivia:)","type":"topic","title":"startLocation(converter:afterLeadingTrivia:)","role":"symbol","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}]}}}