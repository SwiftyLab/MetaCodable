{"variants":[{"paths":["\/documentation\/swiftsyntax\/inheritedtypelistsyntax\/index(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeListSyntax\/index(of:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa","text":"Element"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"node","type":"codeVoice"},{"text":" is not part of this collection, returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"This method is functionally equivalent to the one that takes","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"},{"type":"text","text":". It is provided because otherwise "},{"code":"Collection.index(of:)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is chosen, which is marked as deprecated and renamed to ","type":"text"},{"type":"codeVoice","code":"firstIndex(of:)"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"externalID":"s:11SwiftSyntax0B10CollectionPAAE5index2ofAA0B13ChildrenIndexVSg7ElementQz_tF::SYNTHESIZED::s:11SwiftSyntax017InheritedTypeListB0V","extendedModule":"SwiftSyntax","symbolKind":"method","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","title":"index(of:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SK7ElementQa"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"abstract":[{"text":"Return the index of ","type":"text"},{"code":"node","type":"codeVoice"},{"text":" within this collection.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeListSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildrenIndex":{"abstract":[{"text":"An index in a syntax children collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxChildrenIndex","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildrenIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxChildrenIndex"}],"url":"\/documentation\/swiftsyntax\/syntaxchildrenindex","type":"topic","role":"symbol","title":"SyntaxChildrenIndex"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InheritedTypeListSyntax/index(of:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeListSyntax\/index(of:)","title":"index(of:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SK7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the index of ","type":"text"},{"code":"node","type":"codeVoice"},{"text":" within this collection.","type":"text"}],"url":"\/documentation\/swiftsyntax\/inheritedtypelistsyntax\/index(of:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InheritedTypeListSyntax":{"url":"\/documentation\/swiftsyntax\/inheritedtypelistsyntax","navigatorTitle":[{"text":"InheritedTypeListSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InheritedTypeListSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InheritedTypeListSyntax","title":"InheritedTypeListSyntax","role":"symbol","type":"topic","kind":"symbol"}}}