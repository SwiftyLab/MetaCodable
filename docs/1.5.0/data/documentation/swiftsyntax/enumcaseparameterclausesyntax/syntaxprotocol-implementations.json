{"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/init(_:)-2q7wr"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedRange"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-1n2fj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-4qja4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-7faxf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-28c9q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2nm49","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2zw9c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-36jyt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ek4z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ft1p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4o14y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4r4s7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-68qg1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-6r3pi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7uhr8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7vkyp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-9yohj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-e0bp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1fnh1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1ob68","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-63lc5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-3ao9c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-8orl0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-9vlqk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-20hu0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-2iqkf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3cg7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3uqnz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-4q24b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-5lxxb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-6743q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-68fi7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7gp2c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7xgvj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8bk93","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8ipq2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-9fx31","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-x4me","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/with(_:_:)-1dnxe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/write(to:)"],"title":"Instance Methods"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax"]]},"metadata":{"roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}],"role":"collectionGroup","title":"SyntaxProtocol Implementations"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-2zw9c":{"kind":"symbol","title":"asProtocol(_:)","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-2zw9c","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2zw9c"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/endPositionBeforeTrailingTrivia":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPositionBeforeTrailingTrivia","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/endpositionbeforetrailingtrivia","title":"endPositionBeforeTrailingTrivia","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-2nm49":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-2nm49","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-2nm49","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/leadingTriviaLength":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/leadingtrivialength","kind":"symbol","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"title":"leadingTriviaLength","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/byteSizeAfterTrimmingTrivia":{"kind":"symbol","title":"byteSizeAfterTrimmingTrivia","type":"topic","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/bytesizeaftertrimmingtrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-3ft1p":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-3ft1p","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ft1p"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/description":{"kind":"symbol","title":"description","type":"topic","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/description","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-8ipq2":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-8ipq2","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8ipq2","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasMaximumNestingLevelOverflow":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/hasmaximumnestingleveloverflow","kind":"symbol","abstract":[],"title":"hasMaximumNestingLevelOverflow","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/nextToken":{"kind":"symbol","title":"nextToken","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/nexttoken","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trailingTrivia":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trailingtrivia","kind":"symbol","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"title":"trailingTrivia","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/contentLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/contentlength","abstract":[],"kind":"symbol","role":"symbol","deprecated":true,"title":"contentLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/contentLength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-x4me":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-x4me","title":"isProtocol(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-x4me","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-68qg1":{"role":"symbol","title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-68qg1","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-68qg1"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/lastToken(viewMode:)":{"kind":"symbol","title":"lastToken(viewMode:)","type":"topic","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/lasttoken(viewmode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/previousToken":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/previoustoken","kind":"symbol","abstract":[],"title":"previousToken","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/detach()":{"kind":"symbol","title":"detach()","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/detach()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/cast(_:)-1ob68":{"title":"cast(_:)","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1ob68","kind":"symbol","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node.."}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/cast(_:)-1ob68","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/syntaxTextBytes":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/syntaxtextbytes","kind":"symbol","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"title":"syntaxTextBytes","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumCaseParameterClauseSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"EnumCaseParameterClauseSyntax"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax","type":"topic","abstract":[],"title":"EnumCaseParameterClauseSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/cast(_:)-1fnh1":{"kind":"symbol","title":"cast(_:)","type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/cast(_:)-1fnh1","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-1fnh1"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/totalLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/totallength","kind":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"title":"totalLength","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/kind":{"kind":"symbol","title":"kind","type":"topic","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/kind","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/previousToken(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/previoustoken(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"title":"previousToken(viewMode:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/endLocation(converter:afterTrailingTrivia:)":{"kind":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/write(to:)":{"title":"write(to:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/write(to:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/as(_:)-4qja4":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/as(_:)-4qja4","kind":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"title":"as(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-4qja4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/keyPathInParent":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/keypathinparent","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/keyPathInParent","title":"keyPathInParent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-3cg7":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-3cg7","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3cg7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/node(at:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/node(at:)","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"title":"node(at:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-3uqnz":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-3uqnz","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-3uqnz","type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-4o14y":{"kind":"symbol","title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-4o14y","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4o14y"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/index":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/index","kind":"symbol","abstract":[{"text":"The index of this node in a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference"},{"text":" collection.","type":"text"}],"title":"index","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/range":{"kind":"symbol","title":"range","type":"topic","abstract":[{"text":"The range of this node including leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/range","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"range","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","kind":"symbol","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-7xgvj":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-7xgvj","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7xgvj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmed(matching:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmed(matching:)","kind":"symbol","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"title":"trimmed(matching:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/as(_:)-1n2fj":{"kind":"symbol","title":"as(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/as(_:)-1n2fj","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-1n2fj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-28c9q":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-28c9q","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-28c9q"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedDescription":{"role":"symbol","title":"trimmedDescription","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmeddescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-7vkyp":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7vkyp","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-7vkyp","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-3ek4z":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-3ek4z","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-3ek4z","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-20hu0":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"isProtocol(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-20hu0","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-20hu0"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/lastToken":{"kind":"symbol","title":"lastToken","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/lasttoken","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/lastToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/totalByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/totalbyterange","kind":"symbol","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"title":"totalByteRange","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/totalByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmed":{"abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmed","title":"trimmed","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/is(_:)-8orl0":{"kind":"symbol","title":"is(_:)","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/is(_:)-8orl0","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-8orl0"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/as(_:)-7faxf":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/as(_:)-7faxf","kind":"symbol","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"title":"as(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/as(_:)-7faxf"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasParent":{"kind":"symbol","title":"hasParent","type":"topic","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/hasparent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/endPosition":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/endposition","kind":"symbol","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"title":"endPosition","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/endPosition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/token(at:)":{"kind":"symbol","title":"token(at:)","type":"topic","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/token(at:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasError":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasError","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/haserror","title":"hasError","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/firstToken(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/firsttoken(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"title":"firstToken(viewMode:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/ancestorOrSelf(mapping:)":{"kind":"symbol","title":"ancestorOrSelf(mapping:)","type":"topic","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"type":"codeVoice","code":"condition"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/ancestororself(mapping:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ancestorOrSelf","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"mapping","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/ancestorOrSelf(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/is(_:)-9vlqk":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/is(_:)-9vlqk","kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}],"title":"is(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-9vlqk"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/parent":{"kind":"symbol","title":"parent","type":"topic","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/parent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedLength":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmedlength","kind":"symbol","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"title":"trimmedLength","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/is(_:)-3ao9c":{"kind":"symbol","title":"is(_:)","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/is(_:)-3ao9c","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/is(_:)-3ao9c"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-7uhr8":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-7uhr8","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-7uhr8"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/init(_:)-2q7wr":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/init(_:)-2q7wr","kind":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"title":"init(_:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/init(_:)-2q7wr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-4r4s7":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-4r4s7","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-4r4s7","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasSequenceExpr":{"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/hassequenceexpr","kind":"symbol","role":"symbol","title":"hasSequenceExpr","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-6r3pi":{"kind":"symbol","title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-6r3pi","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-6r3pi"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/id":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/id","kind":"symbol","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"title":"id","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-4q24b":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-4q24b","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-4q24b","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/positionAfterSkippingLeadingTrivia":{"kind":"symbol","title":"positionAfterSkippingLeadingTrivia","type":"topic","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"text":" ","type":"text"},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/positionafterskippingleadingtrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trailingTriviaLength":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trailingtrivialength","kind":"symbol","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"title":"trailingTriviaLength","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/with(_:_:)-1dnxe":{"kind":"symbol","title":"with(_:_:)","type":"topic","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/with(_:_:)-1dnxe","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/with(_:_:)-1dnxe"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/byteRange":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/byterange","kind":"symbol","abstract":[],"title":"byteRange","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-6743q":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-6743q","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-6743q"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/syntaxNodeType":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":".Type"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/syntaxnodetype","kind":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"title":"syntaxNodeType","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-e0bp":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-e0bp","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-e0bp","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-68fi7":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-68fi7","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-68fi7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/root":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/root","kind":"symbol","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"title":"root","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-7gp2c":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-7gp2c","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-7gp2c"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-36jyt":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-36jyt","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-36jyt"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-2iqkf":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-2iqkf","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","title":"isProtocol(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-2iqkf","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/leadingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/leadingTrivia","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/leadingtrivia","role":"symbol","title":"leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedRange":{"kind":"symbol","title":"trimmedRange","type":"topic","abstract":[{"text":"The range of this node excluding leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmedrange","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/cast(_:)-63lc5":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/cast(_:)-63lc5","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"title":"cast(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/cast(_:)-63lc5"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/position":{"kind":"symbol","title":"position","type":"topic","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/position","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/children(viewMode:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier","text":"SyntaxChildren"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/children(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"title":"children(viewMode:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/children(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/detached":{"kind":"symbol","title":"detached","type":"topic","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/detached","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"type":"topic","title":"debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/debugDescription":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/debugdescription","kind":"symbol","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"title":"debugDescription","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedDescription(matching:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"title":"trimmedDescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmeddescription(matching:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/hasWarning":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/hasWarning","type":"topic","title":"hasWarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/haswarning","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-5lxxb":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-5lxxb","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-5lxxb"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/trimmedByteRange":{"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/trimmedByteRange","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"title":"trimmedByteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/trimmedbyterange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/nextToken(viewMode:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/nexttoken(viewmode:)","kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"title":"nextToken(viewMode:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-9fx31":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-9fx31","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-9fx31"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/byteSize":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/bytesize","kind":"symbol","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"title":"byteSize","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/startLocation(converter:afterLeadingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"type":"topic","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isProtocol(_:)-8bk93":{"kind":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isprotocol(_:)-8bk93","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isProtocol(_:)-8bk93"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/firstToken":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/firsttoken","kind":"symbol","abstract":[],"title":"firstToken","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/tokens(viewMode:)":{"kind":"symbol","title":"tokens(viewMode:)","type":"topic","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/tokens(viewmode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier","text":"TokenSequence"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/asProtocol(_:)-9yohj":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/asprotocol(_:)-9yohj","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/asProtocol(_:)-9yohj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseParameterClauseSyntax/isImplicit":{"url":"\/documentation\/swiftsyntax\/enumcaseparameterclausesyntax\/isimplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"kind":"symbol","deprecated":true,"type":"topic","role":"symbol","title":"isImplicit","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseParameterClauseSyntax\/isImplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}}}