{"kind":"article","metadata":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","roleHeading":"API Collection","modules":[{"name":"SwiftSyntax"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/init(_:)-49qu3"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedRange"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-10uqt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-27dpx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-3z2j7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-41p9i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-45tys","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-4rf1x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-54fw1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-5q094","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-5so74","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-5vs81","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-65bv2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-6gldw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-8az9m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-9ds13","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-2ku1u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-38l88","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-3qr6b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-48zyq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-55p3x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-5w0qt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-6g0o2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-6sc3l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-6z3s0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-7n50d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-8nny4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-8rinc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-9hqfr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-9iyeg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/write(to:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/positionAfterSkippingLeadingTrivia":{"title":"positionAfterSkippingLeadingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/positionAfterSkippingLeadingTrivia","kind":"symbol","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/positionafterskippingleadingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/previousToken":{"title":"previousToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/previousToken","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/previoustoken","type":"topic","role":"symbol","kind":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-45tys":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-45tys","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-45tys","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-2ku1u":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-2ku1u","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-2ku1u","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmed(matching:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"trimmed(matching:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmed(matching:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/nextToken":{"title":"nextToken","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/nextToken","kind":"symbol","abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/nexttoken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-5w0qt":{"type":"topic","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-5w0qt","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-5w0qt","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/firstToken(viewMode:)":{"title":"firstToken(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/firstToken(viewMode:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/firsttoken(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/endLocation(converter:afterTrailingTrivia:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"title":"endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/hasError":{"title":"hasError","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasError","kind":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/haserror","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-8az9m":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-8az9m","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-8az9m","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmedRange":{"title":"trimmedRange","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedRange","kind":"symbol","abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmedrange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-8nny4":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-8nny4","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-8nny4","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/tokens(viewMode:)","kind":"symbol","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/tokens(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/startLocation(converter:afterLeadingTrivia:)":{"type":"topic","kind":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}],"title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-48zyq":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-48zyq","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-48zyq","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/node(at:)":{"type":"topic","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"node(at:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/node(at:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/kind":{"title":"kind","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/kind","kind":"symbol","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/kind","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/leadingTrivia":{"type":"topic","kind":"symbol","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/leadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"title":"leadingTrivia","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/leadingtrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-8rinc":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-8rinc","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-8rinc","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-4rf1x":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-4rf1x","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-4rf1x","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-9iyeg":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-9iyeg","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-9iyeg","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trailingTriviaLength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trailingtrivialength","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"type":"topic","kind":"symbol","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/byteSizeAfterTrimmingTrivia":{"title":"byteSizeAfterTrimmingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","kind":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/bytesizeaftertrimmingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmedDescription(matching:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedDescription(matching:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmeddescription(matching:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/keyPathInParent":{"title":"keyPathInParent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/keyPathInParent","kind":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/keypathinparent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/previousToken(viewMode:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/previoustoken(viewmode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-54fw1":{"title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-54fw1","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-54fw1","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/with(_:_:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/with(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"with(_:_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/with(_:_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-6gldw":{"title":"asProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-6gldw","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-6gldw","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-5q094":{"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-5q094","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-5q094","kind":"symbol","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/hasSequenceExpr":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasSequenceExpr","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"hasSequenceExpr","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/hassequenceexpr","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/lastToken(viewMode:)":{"abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"lastToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/lasttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-7n50d":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-7n50d","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-7n50d","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/parent":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"title":"parent","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/parent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/totalLength":{"title":"totalLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/totalLength","kind":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/totallength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmed":{"type":"topic","kind":"symbol","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"trimmed","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmed","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trailingTrivia":{"title":"trailingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trailingTrivia","kind":"symbol","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trailingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-27dpx":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-27dpx","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-27dpx","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmedDescription":{"title":"trimmedDescription","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedDescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmeddescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-6sc3l":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-6sc3l","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-6sc3l","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/detached":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/detached","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"detached","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/detached","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/endPosition":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/endposition","kind":"symbol","title":"endPosition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/endPosition","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-3qr6b":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-3qr6b","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-3qr6b","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-38l88":{"type":"topic","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-38l88","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-38l88","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/syntaxNodeType":{"title":"syntaxNodeType","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":".Type"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/syntaxNodeType","kind":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/syntaxnodetype","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/id":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/id","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"}],"title":"id","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/id","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/firstToken":{"title":"firstToken","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/firstToken","kind":"symbol","abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/firsttoken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/hasMaximumNestingLevelOverflow":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasMaximumNestingLevelOverflow","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/hasmaximumnestingleveloverflow","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/hasParent":{"title":"hasParent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasParent","kind":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/hasparent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/totalByteRange":{"type":"topic","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"title":"totalByteRange","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/totalbyterange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-5so74":{"title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-5so74","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-5so74","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/syntaxTextBytes":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"role":"symbol","type":"topic","title":"syntaxTextBytes","kind":"symbol","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/syntaxTextBytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/byteRange":{"type":"topic","deprecated":true,"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/byteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"title":"byteRange","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/byterange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-9ds13":{"title":"asProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-9ds13","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-9ds13","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-10uqt":{"type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-10uqt","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-10uqt","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/ancestorOrSelf(mapping:)":{"title":"ancestorOrSelf(mapping:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/ancestorOrSelf(mapping:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"type":"codeVoice","code":"condition"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/ancestororself(mapping:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ancestorOrSelf","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"mapping"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"kind":"text","text":"?) -> "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-5vs81":{"role":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-5vs81","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-5vs81","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax","title":"RegexLiteralExprSyntax","type":"topic","navigatorTitle":[{"text":"RegexLiteralExprSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RegexLiteralExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/position":{"title":"position","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/position","kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/position","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/children(viewMode:)":{"title":"children(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/children(viewMode:)","kind":"symbol","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/children(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/leadingTriviaLength":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/leadingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"title":"leadingTriviaLength","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/leadingtrivialength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-55p3x":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-55p3x","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-55p3x","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-41p9i":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-41p9i","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-41p9i","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-9hqfr":{"title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-9hqfr","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-9hqfr","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/detach()":{"type":"topic","deprecated":true,"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/detach()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"detach()","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/detach()","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmedLength":{"title":"trimmedLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedLength","kind":"symbol","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmedlength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isImplicit":{"type":"topic","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isImplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isImplicit","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isimplicit","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/contentLength":{"title":"contentLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/contentLength","kind":"symbol","abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/contentlength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/debugDescription":{"type":"topic","kind":"symbol","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/debugDescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"debugDescription","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/debugdescription","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/root":{"title":"root","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/root","kind":"symbol","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/trimmedByteRange":{"type":"topic","deprecated":true,"kind":"symbol","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}],"title":"trimmedByteRange","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/trimmedbyterange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/write(to:)":{"title":"write(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/write(to:)","kind":"symbol","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/write(to:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/init(_:)-49qu3":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/init(_:)-49qu3","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"kind":"text","text":"?)"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/init(_:)-49qu3","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/endPositionBeforeTrailingTrivia":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/endPositionBeforeTrailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"title":"endPositionBeforeTrailingTrivia","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/endpositionbeforetrailingtrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/description":{"title":"description","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/description","kind":"symbol","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/description","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-6g0o2":{"title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-6g0o2","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-6g0o2","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/range":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/range","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"range"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":">","kind":"text"}],"title":"range","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/range","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/byteSize":{"type":"topic","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/bytesize","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"byteSize","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/hasWarning":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/haswarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference","isActive":true},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"type":"topic","title":"hasWarning","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-3z2j7":{"title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-3z2j7","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-3z2j7","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/isProtocol(_:)-6z3s0":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/isProtocol(_:)-6z3s0","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/isprotocol(_:)-6z3s0"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/index":{"type":"topic","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"title":"index","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/index","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/nextToken(viewMode:)","kind":"symbol","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/nexttoken(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/token(at:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/token(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"token(at:)","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/token(at:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/asProtocol(_:)-65bv2":{"title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/asProtocol(_:)-65bv2","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/asprotocol(_:)-65bv2","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/RegexLiteralExprSyntax/lastToken":{"abstract":[],"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"lastToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/RegexLiteralExprSyntax\/lastToken","url":"\/documentation\/swiftsyntax\/regexliteralexprsyntax\/lasttoken","kind":"symbol","role":"symbol"}}}