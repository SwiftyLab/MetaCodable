{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/returnclausesyntax\/cast(_:)-1poyl"]}],"metadata":{"extendedModule":"SwiftSyntax","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"title":"cast(_:)","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","role":"symbol","platforms":[{"beta":false,"unavailable":false,"message":"This cast will always fail","deprecated":true}],"externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax012ReturnClauseB0V","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ReturnClauseSyntax"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"This method will always trigger a runtime crash and never return.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"cast"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always fail."}],"type":"paragraph"}],"style":"note"},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Invoking this method will lead to a fatal error."}]}],"style":"warning"}]}],"kind":"symbol","abstract":[{"text":"Force-casts the current leaf syntax node to a different specified type.","type":"text"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always fail"}],"type":"paragraph"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ReturnClauseSyntax\/cast(_:)-1poyl","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ReturnClauseSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ReturnClauseSyntax","title":"ReturnClauseSyntax","type":"topic","navigatorTitle":[{"text":"ReturnClauseSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/returnclausesyntax","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReturnClauseSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ReturnClauseSyntax/cast(_:)-1poyl":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE4castyqd__qd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"}],"kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current leaf syntax node to a different specified type."}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/returnclausesyntax\/cast(_:)-1poyl","title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ReturnClauseSyntax\/cast(_:)-1poyl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}