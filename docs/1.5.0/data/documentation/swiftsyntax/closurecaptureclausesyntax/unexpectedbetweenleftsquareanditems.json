{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"property","title":"unexpectedBetweenLeftSquareAndItems","externalID":"s:11SwiftSyntax020ClosureCaptureClauseB0V35unexpectedBetweenLeftSquareAndItemsAA015UnexpectedNodesB0VSgvp","roleHeading":"Instance Property","role":"symbol","modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftSquareAndItems","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftsyntax\/closurecaptureclausesyntax\/unexpectedbetweenleftsquareanditems"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedBetweenLeftSquareAndItems"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureCaptureClauseSyntax\/unexpectedBetweenLeftSquareAndItems","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureCaptureClauseSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureCaptureClauseSyntax/unexpectedBetweenLeftSquareAndItems":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureCaptureClauseSyntax\/unexpectedBetweenLeftSquareAndItems","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftSquareAndItems","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/closurecaptureclausesyntax\/unexpectedbetweenleftsquareanditems","kind":"symbol","title":"unexpectedBetweenLeftSquareAndItems","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureCaptureClauseSyntax":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureCaptureClauseSyntax","navigatorTitle":[{"text":"ClosureCaptureClauseSyntax","kind":"identifier"}],"kind":"symbol","title":"ClosureCaptureClauseSyntax","role":"symbol","abstract":[],"url":"\/documentation\/swiftsyntax\/closurecaptureclausesyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosureCaptureClauseSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"}}}