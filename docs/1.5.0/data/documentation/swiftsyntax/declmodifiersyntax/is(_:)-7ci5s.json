{"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"is(_:)","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax012DeclModifierB0V","extendedModule":"SwiftSyntax","platforms":[{"message":"This cast will always fail","deprecated":true,"unavailable":false,"beta":false}],"modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always fail","type":"text"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/declmodifiersyntax\/is(_:)-7ci5s"]}],"abstract":[{"type":"text","text":"Checks if the current leaf syntax node can be cast to a different specified type."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierSyntax"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierSyntax\/is(_:)-7ci5s","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"false","type":"codeVoice"},{"text":" since the leaf node cannot be cast to a different specified type.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"type":"codeVoice","code":"is"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"informing the user that the cast will always fail."}]}],"style":"note"}]}],"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclModifierSyntax/is(_:)-7ci5s":{"type":"topic","abstract":[{"text":"Checks if the current leaf syntax node can be cast to a different specified type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierSyntax\/is(_:)-7ci5s","title":"is(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/declmodifiersyntax\/is(_:)-7ci5s"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclModifierSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclModifierSyntax","type":"topic","title":"DeclModifierSyntax","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeclModifierSyntax"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/declmodifiersyntax","navigatorTitle":[{"text":"DeclModifierSyntax","kind":"identifier"}]}}}