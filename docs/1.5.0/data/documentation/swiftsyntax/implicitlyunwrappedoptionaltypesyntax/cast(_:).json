{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/cast(_:)"]}],"metadata":{"platforms":[{"deprecated":true,"beta":false,"unavailable":false,"message":"Use `TypeSyntax.init` for upcasting"}],"role":"symbol","externalID":"s:11SwiftSyntax04TypeB8ProtocolPAAE4castyAA0cB0VAFmF::SYNTHESIZED::s:11SwiftSyntax031ImplicitlyUnwrappedOptionalTypeB0V","modules":[{"name":"SwiftSyntax"}],"title":"cast(_:)","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"TypeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"TypeSyntax","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","kind":"typeIdentifier","text":"TypeSyntax"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The base node created from the current syntax node, as the node can always be upcast to its base type.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax"]]},"abstract":[{"text":"Force-upcast the current syntax node to its base node type (","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","isActive":true},{"type":"text","text":")."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/cast(_:)"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use `TypeSyntax.init` for upcasting"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax/cast(_:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax\/cast(_:)","type":"topic","title":"cast(_:)","abstract":[{"text":"Force-upcast the current syntax node to its base node type (","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","isActive":true},{"text":").","type":"text"}],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax\/cast(_:)","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntax":{"type":"topic","url":"\/documentation\/swiftsyntax\/typesyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeSyntax"}],"abstract":[],"kind":"symbol","role":"symbol","title":"TypeSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ImplicitlyUnwrappedOptionalTypeSyntax"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax","kind":"symbol","title":"ImplicitlyUnwrappedOptionalTypeSyntax","role":"symbol","navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}]}}}