{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/as(_:)-2n0hg"},"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyxSgxmF::SYNTHESIZED::s:11SwiftSyntax028EffectsAttributeArgumentListB0V","title":"as(_:)","platforms":[{"beta":false,"message":"This cast will always succeed","unavailable":false,"deprecated":true}],"symbolKind":"method","role":"symbol","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current syntax node."}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"as","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always succeed.","type":"text"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/as(_:)-2n0hg"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax/as(_:)-2n0hg":{"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax\/as(_:)-2n0hg","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax\/as(_:)-2n0hg","type":"topic","role":"symbol","kind":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EffectsAttributeArgumentListSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectsAttributeArgumentListSyntax"}],"navigatorTitle":[{"text":"EffectsAttributeArgumentListSyntax","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/effectsattributeargumentlistsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EffectsAttributeArgumentListSyntax","title":"EffectsAttributeArgumentListSyntax","role":"symbol","abstract":[{"type":"text","text":"The arguments of the ‘@_effects’ attribute. These will be parsed during the SIL stage."}],"type":"topic"}}}