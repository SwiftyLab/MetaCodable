{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSequence"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSequence\/init(_:viewMode:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"SwiftSyntax"}],"role":"symbol","externalID":"s:11SwiftSyntax13TokenSequenceV_8viewModeAcA0B0V_AA0b8TreeViewF0Otcfc","title":"init(_:viewMode:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":", "},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":")","kind":"text"}],"symbolKind":"init"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/tokensequence\/init(_:viewmode:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All nodes that are not visible in the given "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" are skipped."}]}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Construct a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSequence","isActive":true,"type":"reference"},{"type":"text","text":" that walks all tokens in "},{"type":"codeVoice","code":"node"},{"type":"text","text":" in source order,"},{"text":" ","type":"text"},{"text":"recursively walking into child nodes.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSequence/init(_:viewMode:)":{"url":"\/documentation\/swiftsyntax\/tokensequence\/init(_:viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSequence\/init(_:viewMode:)","kind":"symbol","title":"init(_:viewMode:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Construct a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSequence","isActive":true},{"type":"text","text":" that walks all tokens in "},{"code":"node","type":"codeVoice"},{"type":"text","text":" in source order,"},{"type":"text","text":" "},{"text":"recursively walking into child nodes.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxTreeViewMode":{"abstract":[{"type":"text","text":"Specifies how missing and unexpected nodes should be handled when traversing"},{"type":"text","text":" "},{"text":"a syntax tree.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxTreeViewMode","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxTreeViewMode"}],"title":"SyntaxTreeViewMode","navigatorTitle":[{"text":"SyntaxTreeViewMode","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxtreeviewmode","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenSequence","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/tokensequence","navigatorTitle":[{"text":"TokenSequence","kind":"identifier"}],"title":"TokenSequence","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenSequence","abstract":[{"text":"Sequence of tokens that are part of the provided Syntax node.","type":"text"}]}}}