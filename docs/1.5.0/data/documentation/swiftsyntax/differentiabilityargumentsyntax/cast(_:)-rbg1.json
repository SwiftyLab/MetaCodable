{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax\/cast(_:)-rbg1"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"text":"The current syntax node.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"cast","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"text":"informing the user that the cast will always succeed.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/differentiabilityargumentsyntax\/cast(_:)-rbg1"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"platforms":[{"unavailable":false,"deprecated":true,"beta":false,"message":"This cast will always succeed"}],"title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax025DifferentiabilityArgumentB0V","role":"symbol","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax"]]},"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"sections":[],"deprecationSummary":[{"inlineContent":[{"text":"This cast will always succeed","type":"text"}],"type":"paragraph"}],"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DifferentiabilityArgumentSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityArgumentSyntax"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax","title":"DifferentiabilityArgumentSyntax","role":"symbol","abstract":[{"text":"A differentiability argument: either the “self” identifier, a function parameter name, or a function parameter index.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentSyntax/cast(_:)-rbg1":{"deprecated":true,"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentSyntax\/cast(_:)-rbg1","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentsyntax\/cast(_:)-rbg1","title":"cast(_:)"}}}