{"metadata":{"modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection","title":"SyntaxProtocol Implementations","role":"collectionGroup"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax"]]},"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/init(_:)-2qk67"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedRange"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-2873w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-5v2ud","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-63e04","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-180d7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-3q9rn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4eimb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4j403","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-5xzoj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-7sb9c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-87c2o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-8t5fs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-98yxu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-9atuo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-bfce","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-ingm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-osf5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-xgrs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-15tbx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-1qk6h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-3vjln","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-405rb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-8wni1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-92thi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1emiv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1fcai","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1xf2g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-2lnn1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-38ped","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3elmq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3m7yd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3nc7p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-4i0om","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6ad0a","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6hk3e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-7vzo8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-9pdhg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-o2cy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/write(to:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"article","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/as(_:)-2873w":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp"},{"text":"?","kind":"text"}],"abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-2873w","title":"as(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/as(_:)-2873w","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/firstToken":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/firsttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken","title":"firstToken","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/debugDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription","kind":"symbol","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/debugdescription","title":"debugDescription","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/lastToken":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/lasttoken","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken","title":"lastToken","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/detach()":{"type":"topic","title":"detach()","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/detach()","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detach()","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedDescription":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmeddescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription","kind":"symbol","role":"symbol","title":"trimmedDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trailingTriviaLength":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTriviaLength","title":"trailingTriviaLength","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trailingtrivialength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","kind":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/token(at:)":{"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/token(at:)","title":"token(at:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-3elmq":{"type":"topic","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3elmq","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-3elmq","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasSequenceExpr":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/hassequenceexpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasSequenceExpr","kind":"symbol","role":"symbol","title":"hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/previousToken(viewMode:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/previoustoken(viewmode:)","kind":"symbol","role":"symbol","title":"previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmed":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmed","title":"trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/cast(_:)-3vjln":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node.."}],"title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-3vjln","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/cast(_:)-3vjln","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-98yxu":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-98yxu","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-98yxu"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/firstToken(viewMode:)":{"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/firstToken(viewMode:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/firsttoken(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/parent":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/parent","title":"parent","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/parent","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedRange":{"title":"trimmedRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedRange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmedrange","abstract":[{"text":"The range of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/is(_:)-405rb":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-405rb","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/is(_:)-405rb","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"is(_:)","role":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}],"kind":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-8t5fs":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-8t5fs","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-8t5fs","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/id":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/id","kind":"symbol","role":"symbol","title":"id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YieldedExpressionsClauseSyntax"}],"title":"YieldedExpressionsClauseSyntax","navigatorTitle":[{"text":"YieldedExpressionsClauseSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/contentLength":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/contentLength","title":"contentLength","deprecated":true,"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/contentlength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-1emiv":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-1emiv","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1emiv","kind":"symbol","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-87c2o":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-87c2o","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-87c2o","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-1xf2g":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1xf2g","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-1xf2g","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/leadingTriviaLength":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/leadingtrivialength","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTriviaLength","title":"leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/lastToken(viewMode:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/lasttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","title":"lastToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/lastToken(viewMode:)","role":"symbol","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isImplicit":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isimplicit","deprecated":true,"title":"isImplicit","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-3m7yd":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3m7yd","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-3m7yd","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/nexttoken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken","deprecated":true,"type":"topic","role":"symbol","abstract":[],"kind":"symbol","title":"nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/cast(_:)-1qk6h":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/cast(_:)-1qk6h","deprecated":true,"title":"cast(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-1qk6h","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/keyPathInParent":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/keypathinparent","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyPathInParent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/keyPathInParent","kind":"symbol","role":"symbol","title":"keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-9atuo":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-9atuo","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-9atuo","type":"topic","title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-7vzo8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-7vzo8","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-7vzo8","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/range":{"type":"topic","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/range","title":"range","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/range","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"range","kind":"identifier"},{"kind":"text","text":": "},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":">","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasParent":{"title":"hasParent","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/hasparent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/byteSizeAfterTrimmingTrivia":{"deprecated":true,"kind":"symbol","type":"topic","role":"symbol","title":"byteSizeAfterTrimmingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSizeAfterTrimmingTrivia","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/bytesizeaftertrimmingtrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trailingTrivia":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trailingtrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trailingTrivia","title":"trailingTrivia","role":"symbol","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-180d7":{"type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-180d7","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-180d7","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/startLocation(converter:afterLeadingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","type":"topic","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol","role":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/startlocation(converter:afterleadingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/children(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier","text":"SyntaxChildren"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/children(viewmode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"kind":"symbol","role":"symbol","title":"children(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/children(viewMode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-4i0om":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-4i0om","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-4i0om","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasWarning":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/haswarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasWarning","kind":"symbol","role":"symbol","title":"hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-3nc7p":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-3nc7p","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-3nc7p","title":"isProtocol(_:)","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/ancestorOrSelf(mapping:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/ancestorOrSelf(mapping:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ancestorOrSelf"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mapping"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":") -> "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"type":"codeVoice","code":"condition"},{"text":".","type":"text"}],"title":"ancestorOrSelf(mapping:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/ancestororself(mapping:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/node(at:)":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"title":"node(at:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/leadingTrivia":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/leadingTrivia","title":"leadingTrivia","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/leadingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/as(_:)-5v2ud":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-5v2ud","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/as(_:)-5v2ud","deprecated":true,"title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/totalByteRange":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/totalbyterange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalByteRange","deprecated":true,"kind":"symbol","role":"symbol","title":"totalByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/byteRange":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteRange","title":"byteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/byterange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-4eimb":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-4eimb","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4eimb","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/init(_:)-2qk67":{"title":"init(_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/init(_:)-2qk67","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/init(_:)-2qk67","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-6hk3e":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-6hk3e","kind":"symbol","role":"symbol","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6hk3e"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-38ped":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-38ped","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-38ped","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-ingm":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-ingm","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-ingm","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/detached":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/detached","title":"detached","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/detached","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/totalLength":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/totallength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/totalLength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"title":"totalLength","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/with(_:_:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":">, "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/with(_:_:)","kind":"symbol","role":"symbol","title":"with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedLength":{"abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading or trailing trivia."}],"kind":"symbol","role":"symbol","type":"topic","title":"trimmedLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-bfce":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-bfce","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-bfce","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/nextToken(viewMode:)":{"role":"symbol","title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/nexttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/is(_:)-92thi":{"title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/is(_:)-92thi","kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-92thi","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-2lnn1":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-2lnn1","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-2lnn1","title":"isProtocol(_:)","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-1fcai":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-1fcai","kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-1fcai","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-4j403":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-4j403","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-4j403","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedDescription(matching:)":{"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmeddescription(matching:)","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"title":"trimmedDescription(matching:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedDescription(matching:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-o2cy":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-o2cy","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-o2cy","kind":"symbol","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-5xzoj":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-5xzoj","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-5xzoj","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-7sb9c":{"type":"topic","kind":"symbol","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-7sb9c","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-7sb9c","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-9pdhg":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-9pdhg","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-9pdhg","kind":"symbol","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/write(to:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/write(to:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Target"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/write(to:)","title":"write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/endPosition":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPosition","title":"endPosition","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/endposition","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/index":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/index","abstract":[{"text":"The index of this node in a ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","isActive":true,"type":"reference"},{"type":"text","text":" collection."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/index","deprecated":true,"kind":"symbol","role":"symbol","title":"index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/endPositionBeforeTrailingTrivia":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endPositionBeforeTrailingTrivia","title":"endPositionBeforeTrailingTrivia","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/endpositionbeforetrailingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasError":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasError","title":"hasError","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/haserror"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmed(matching:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmed(matching:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmed(matching:)","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" trimmed from the","type":"text"},{"text":" ","type":"text"},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"kind":"symbol","title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-osf5":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-osf5","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-osf5","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/hasMaximumNestingLevelOverflow":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/hasMaximumNestingLevelOverflow","title":"hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/hasmaximumnestingleveloverflow","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/tokens(viewMode:)":{"type":"topic","kind":"symbol","title":"tokens(viewMode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/tokens(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/is(_:)-8wni1":{"kind":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/is(_:)-8wni1","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/is(_:)-8wni1","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"title":"is(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/description":{"title":"description","role":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/description","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/description","type":"topic","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-xgrs":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-xgrs","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-xgrs","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/trimmedByteRange":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange"}],"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/trimmedByteRange","title":"trimmedByteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/trimmedbyterange","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/kind":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/kind","kind":"symbol","role":"symbol","title":"kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/asProtocol(_:)-3q9rn":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/asprotocol(_:)-3q9rn","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/asProtocol(_:)-3q9rn","kind":"symbol","role":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/isProtocol(_:)-6ad0a":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/isprotocol(_:)-6ad0a","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/isProtocol(_:)-6ad0a","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/root":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/root","title":"root","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/position":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/position","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/position","role":"symbol","type":"topic","title":"position","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/syntaxNodeType":{"title":"syntaxNodeType","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/syntaxnodetype","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/byteSize":{"kind":"symbol","deprecated":true,"role":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/byteSize","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/bytesize","type":"topic","title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/as(_:)-63e04":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/as(_:)-63e04","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/as(_:)-63e04","deprecated":true,"kind":"symbol","role":"symbol","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/previousToken":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/previousToken","title":"previousToken","role":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/previoustoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/syntaxTextBytes":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/syntaxTextBytes","title":"syntaxTextBytes","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/syntaxtextbytes","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/positionafterskippingleadingtrivia","title":"positionAfterSkippingLeadingTrivia","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/positionAfterSkippingLeadingTrivia","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/YieldedExpressionsClauseSyntax/cast(_:)-15tbx":{"type":"topic","url":"\/documentation\/swiftsyntax\/yieldedexpressionsclausesyntax\/cast(_:)-15tbx","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/YieldedExpressionsClauseSyntax\/cast(_:)-15tbx","kind":"symbol","role":"symbol","title":"cast(_:)"}}}