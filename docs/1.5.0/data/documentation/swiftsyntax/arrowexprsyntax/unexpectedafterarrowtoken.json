{"metadata":{"role":"symbol","platforms":[{"unavailable":false,"deprecated":true,"beta":false,"renamed":"unexpectedAfterArrow"}],"extendedModule":"SwiftSyntax","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedAfterArrowToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"modules":[{"name":"SwiftSyntax"}],"symbolKind":"property","title":"unexpectedAfterArrowToken","externalID":"s:11SwiftSyntax09ArrowExprB0V015unexpectedAfterC5TokenAA015UnexpectedNodesB0VSgvp","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrowExprSyntax"]]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrowExprSyntax\/unexpectedAfterArrowToken","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedAfterArrowToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/arrowexprsyntax\/unexpectedafterarrowtoken"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ArrowExprSyntax/unexpectedAfterArrowToken":{"abstract":[],"kind":"symbol","role":"symbol","deprecated":true,"type":"topic","title":"unexpectedAfterArrowToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedAfterArrowToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/arrowexprsyntax\/unexpectedafterarrowtoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrowExprSyntax\/unexpectedAfterArrowToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ArrowExprSyntax":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrowExprSyntax","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrowExprSyntax","kind":"identifier"}],"title":"ArrowExprSyntax","url":"\/documentation\/swiftsyntax\/arrowexprsyntax","navigatorTitle":[{"text":"ArrowExprSyntax","kind":"identifier"}],"abstract":[{"text":"The arrow when a type is used at a position that syntactically expectes an expression.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"}}}