{"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SK","doc:\/\/com.SwiftyLab.HelperCoders\/Sl","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/s25ExpressibleByArrayLiteralP","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/ST","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"kind":"relationships"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"abstract":[{"text":"A collection of 0 or more ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","isActive":true},{"type":"text","text":"s."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/enumcaseelementlistsyntax"]}],"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EnumCaseElementListSyntax"}],"roleHeading":"Structure","modules":[{"name":"SwiftSyntax"}],"title":"EnumCaseElementListSyntax","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EnumCaseElementListSyntax","kind":"identifier"}],"externalID":"s:11SwiftSyntax019EnumCaseElementListB0V"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumCaseElementListSyntax","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"Children","type":"heading","text":"Children","level":3},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"codeVoice","code":"*"}]},{"anchor":"Contained-in","type":"heading","text":"Contained in","level":3},{"items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseDeclSyntax"},{"type":"text","text":"."},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseDeclSyntax\/elements","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax"},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/init(_:)"],"anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Element"],"title":"Type Aliases","anchor":"Type-Aliases"},{"title":"Type Properties","generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/syntaxKind"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/BidirectionalCollection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Collection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Sequence-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/SyntaxCollection-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/SyntaxProtocol-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/CustomReflectable-Implementations","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/customreflectable-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseDeclSyntax":{"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"case","type":"codeVoice"},{"text":" declaration of a Swift ","type":"text"},{"type":"codeVoice","code":"enum"},{"type":"text","text":". It can have 1 or more "},{"code":"EnumCaseElement","type":"codeVoice"},{"text":"s inside, each declaring a different case of the enum.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumCaseDeclSyntax"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseDeclSyntax","url":"\/documentation\/swiftsyntax\/enumcasedeclsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EnumCaseDeclSyntax"}],"title":"EnumCaseDeclSyntax"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/ST":{"title":"Swift.Sequence","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/ST","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/SK":{"title":"Swift.BidirectionalCollection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SK","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/init(_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":")"}],"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"kind":"symbol","title":"init(_:)","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/syntaxKind":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/syntaxKind","type":"topic","title":"syntaxKind","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxKind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier","text":"SyntaxKind"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind","isActive":true},{"type":"text","text":" of the syntax node that conforms to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/syntaxkind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/Equatable-Implementations":{"title":"Equatable Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Equatable-Implementations","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/equatable-implementations"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/Collection-Implementations":{"title":"Collection Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Collection-Implementations","type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/collection-implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax","title":"EnumCaseElementListSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EnumCaseElementListSyntax"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax","abstract":[{"text":"A collection of 0 or more ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax"},{"type":"text","text":"s."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumCaseElementListSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/Element":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"type":"topic","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/element","kind":"symbol","role":"symbol","title":"EnumCaseElementListSyntax.Element","navigatorTitle":[{"kind":"identifier","text":"Element"}],"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Element"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"kind":"symbol","title":"SyntaxHashable","role":"symbol","abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}],"url":"\/documentation\/swiftsyntax\/syntaxhashable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxHashable"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/SyntaxCollection-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/SyntaxCollection-Implementations","kind":"article","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/syntaxcollection-implementations","title":"SyntaxCollection Implementations","abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxCollection":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxCollection","url":"\/documentation\/swiftsyntax\/syntaxcollection","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxCollection"}],"navigatorTitle":[{"text":"SyntaxCollection","kind":"identifier"}],"role":"symbol","title":"SyntaxCollection","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/Sequence-Implementations":{"kind":"article","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/sequence-implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Sequence-Implementations","role":"collectionGroup","title":"Sequence Implementations","type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s25ExpressibleByArrayLiteralP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","title":"EnumCaseElementSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EnumCaseElementSyntax"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax","abstract":[{"text":"An element of an enum case, containing the name of the case and, optionally, either associated values or an assignment to a raw value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumCaseElementSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"title":"Swift.TextOutputStreamable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind":{"kind":"symbol","abstract":[{"type":"text","text":"Enumerates the known kinds of Syntax represented in the Syntax tree."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind","role":"symbol","navigatorTitle":[{"text":"SyntaxKind","kind":"identifier"}],"type":"topic","title":"SyntaxKind","url":"\/documentation\/swiftsyntax\/syntaxkind","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxKind"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseDeclSyntax/elements":{"abstract":[{"type":"text","text":"The elements this case declares."}],"kind":"symbol","role":"symbol","type":"topic","title":"elements","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"elements","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnumCaseElementListSyntax","preciseIdentifier":"s:11SwiftSyntax019EnumCaseElementListB0V"}],"url":"\/documentation\/swiftsyntax\/enumcasedeclsyntax\/elements","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseDeclSyntax\/elements"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/BidirectionalCollection-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/BidirectionalCollection-Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations"},"doc://com.SwiftyLab.HelperCoders/Sl":{"title":"Swift.Collection","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/Sl","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/SyntaxProtocol-Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementListSyntax/Hashable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementListSyntax\/Hashable-Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/swiftsyntax\/enumcaseelementlistsyntax\/hashable-implementations","title":"Hashable Implementations"}}}