{"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax016AccessorDeclListB0V","modules":[{"name":"SwiftSyntax"}],"roleHeading":"Instance Method","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","platforms":[{"message":"This cast will always succeed","unavailable":false,"deprecated":true,"beta":false}],"symbolKind":"method","extendedModule":"SwiftSyntax"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AccessorDeclListSyntax"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always succeed","type":"text"}]}],"variants":[{"paths":["\/documentation\/swiftsyntax\/accessordecllistsyntax\/cast(_:)-9kmas"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current syntax node."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"cast","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}]}],"style":"note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AccessorDeclListSyntax\/cast(_:)-9kmas"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AccessorDeclListSyntax/cast(_:)-9kmas":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AccessorDeclListSyntax\/cast(_:)-9kmas","title":"cast(_:)","url":"\/documentation\/swiftsyntax\/accessordecllistsyntax\/cast(_:)-9kmas","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AccessorDeclListSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AccessorDeclListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AccessorDeclListSyntax","kind":"identifier"}],"title":"AccessorDeclListSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessorDeclListSyntax"}],"url":"\/documentation\/swiftsyntax\/accessordecllistsyntax","abstract":[],"kind":"symbol","role":"symbol"}}}