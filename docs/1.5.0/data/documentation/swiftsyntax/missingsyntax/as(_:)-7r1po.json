{"variants":[{"paths":["\/documentation\/swiftsyntax\/missingsyntax\/as(_:)-7r1po"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax\/as(_:)-7r1po","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax"]]},"metadata":{"platforms":[{"unavailable":false,"message":"This cast will always fail","deprecated":true,"beta":false}],"title":"as(_:)","role":"symbol","modules":[{"name":"SwiftSyntax"}],"extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax07MissingB0V","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"code":"nil","type":"codeVoice"},{"type":"text","text":" since the leaf node cannot be cast to a different specified type."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"as"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always fail."}]}]}]}],"sections":[],"abstract":[{"text":"Attempts to cast the current leaf syntax node to a different specified type.","type":"text"}],"deprecationSummary":[{"inlineContent":[{"text":"This cast will always fail","type":"text"}],"type":"paragraph"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingSyntax/as(_:)-7r1po":{"role":"symbol","title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax\/as(_:)-7r1po","kind":"symbol","type":"topic","deprecated":true,"abstract":[{"type":"text","text":"Attempts to cast the current leaf syntax node to a different specified type."}],"url":"\/documentation\/swiftsyntax\/missingsyntax\/as(_:)-7r1po","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingSyntax":{"abstract":[{"text":"In case the source code is missing a syntax node, this node stands in place of the missing node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingSyntax","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MissingSyntax","kind":"identifier"}],"title":"MissingSyntax","navigatorTitle":[{"text":"MissingSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/missingsyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]}}}