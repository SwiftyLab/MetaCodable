{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxIdentifier","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"If the identifier references a node from a different tree (ie. one that has a different root ID in the"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxIdentifier","isActive":true,"type":"reference"},{"text":") or if no node with the given identifier is a child of this syntax node, returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"sections":[],"abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/node(at:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"node(at:)","modules":[{"name":"SwiftSyntax"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4node2atAA0B0VSgAA0B10IdentifierV_tF::SYNTHESIZED::s:11SwiftSyntax015GenericArgumentB0V0D0O","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/node(at:)"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum","navigatorTitle":[{"text":"Argument","kind":"identifier"}],"abstract":[],"kind":"symbol","role":"symbol","title":"GenericArgumentSyntax.Argument","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Argument","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GenericArgumentSyntax","kind":"identifier"}],"title":"GenericArgumentSyntax","kind":"symbol","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax","navigatorTitle":[{"text":"GenericArgumentSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxIdentifier":{"url":"\/documentation\/swiftsyntax\/syntaxidentifier","navigatorTitle":[{"text":"SyntaxIdentifier","kind":"identifier"}],"abstract":[{"type":"text","text":"Provides a stable and unique identity for "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" nodes."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxIdentifier","title":"SyntaxIdentifier","role":"symbol","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/node(at:)":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"kind":"symbol","role":"symbol","title":"node(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/node(at:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}]}}}