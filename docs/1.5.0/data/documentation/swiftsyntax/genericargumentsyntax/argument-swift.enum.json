{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Argument","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"type":"conformsTo","title":"Conforms To"}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","title":"GenericArgumentSyntax.Argument","externalID":"s:11SwiftSyntax015GenericArgumentB0V0D0O","navigatorTitle":[{"kind":"identifier","text":"Argument"}],"modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Argument"}]},"variants":[{"paths":["\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/type(_:)"],"generated":true,"anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/init(_:)-73wb3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/init(_:)-835tx"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/as(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/cast(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/is(_:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"anchor":"Type-Properties","title":"Type Properties","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/structure"]},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/SyntaxChildChoices-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"references":{"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/init(_:)-835tx":{"title":"init(_:)","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/init(_:)-835tx","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolP","text":"TypeSyntaxProtocol"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/init(_:)-835tx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/init(_:)-73wb3":{"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/init(_:)-73wb3","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/init(_:)-73wb3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/CustomReflectable-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/customreflectable-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/CustomReflectable-Implementations","title":"CustomReflectable Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/Equatable-Implementations":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/equatable-implementations","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations","kind":"article","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"kind":"symbol","title":"SyntaxHashable","role":"symbol","abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}],"url":"\/documentation\/swiftsyntax\/syntaxhashable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxHashable"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxChildChoices"}],"title":"SyntaxChildChoices","url":"\/documentation\/swiftsyntax\/syntaxchildchoices","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildChoices"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","abstract":[{"text":"Protocol for the enums nested inside ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" nodes that enumerate all the"},{"text":" ","type":"text"},{"text":"possible types a child node might have.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/SyntaxProtocol-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/syntaxprotocol-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/is(_:)":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/is(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/is(_:)","role":"symbol","title":"is(_:)","kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to the type conforming to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol"},{"type":"text","text":" protocol."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"(("},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolP"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/structure":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/structure","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/structure","title":"structure","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure"}]},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/cast(_:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/cast(_:)","type":"topic","title":"cast(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/cast(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015GenericArgumentB0V0D0O4castyxxmAA04TypeB8ProtocolRzlF1SL_xmfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015GenericArgumentB0V0D0O4castyxxmAA04TypeB8ProtocolRzlF1SL_xmfp","text":"S"}],"abstract":[{"text":"Force-casts the current syntax node to the type conforming to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol","isActive":true},{"text":" protocol.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GenericArgumentSyntax","kind":"identifier"}],"title":"GenericArgumentSyntax","kind":"symbol","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax","navigatorTitle":[{"text":"GenericArgumentSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/Hashable-Implementations":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/hashable-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/Hashable-Implementations","title":"Hashable Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/SH":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/type(_:)":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/type(_:)","title":"GenericArgumentSyntax.Argument.type(_:)","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TypeSyntax","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/type(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/SQ":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/SyntaxChildChoices-Implementations":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/syntaxchildchoices-implementations","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/SyntaxChildChoices-Implementations","role":"collectionGroup","title":"SyntaxChildChoices Implementations","kind":"article","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum":{"url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum","navigatorTitle":[{"text":"Argument","kind":"identifier"}],"abstract":[],"kind":"symbol","role":"symbol","title":"GenericArgumentSyntax.Argument","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Argument","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentSyntax/Argument-swift.enum/as(_:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentsyntax\/argument-swift.enum\/as(_:)","abstract":[{"text":"Attempts to cast the current syntax node to the type conforming to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol"},{"type":"text","text":" protocol."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentSyntax\/Argument-swift.enum\/as(_:)","title":"as(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax015GenericArgumentB0V0D0O2asyxSgxmAA04TypeB8ProtocolRzlF1SL_xmfp"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015GenericArgumentB0V0D0O2asyxSgxmAA04TypeB8ProtocolRzlF1SL_xmfp"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol":{"navigatorTitle":[{"text":"TypeSyntaxProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"},{"text":" nodes conform.","type":"text"}],"title":"TypeSyntaxProtocol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol","role":"symbol"}}}