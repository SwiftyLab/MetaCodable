{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/SyntaxProtocol-Implementations"},"kind":"article","topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/init(_:)-7q3c4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/init(_:)-94ban"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedRange"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/as(_:)-3jvjy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/as(_:)-56658","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/as(_:)-5l299","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-1kgxh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-1otvr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-27on","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-2mq20","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-2wui7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-4herw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-4iadb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-5fs9g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-5kkvs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-61ix8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-7a2io","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-8tokf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-982mv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-wyn6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/cast(_:)-31l3d","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/cast(_:)-98708","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/cast(_:)-cwst","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/is(_:)-2unyd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/is(_:)-3hk3r","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/is(_:)-z1fa","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-1thqj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-22f3f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-2i6xk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-3s7x1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-3vbk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-4eo8i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-4frgt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-5q05e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-6hcw7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-75hcc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-7w6m6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-86j47","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-9tdg6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-iu3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/write(to:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/structure"],"generated":true}],"metadata":{"modules":[{"name":"SwiftSyntax"}],"role":"collectionGroup","roleHeading":"API Collection","title":"SyntaxProtocol Implementations"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/byteSizeAfterTrimmingTrivia":{"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/byteSizeAfterTrimmingTrivia","kind":"symbol","title":"byteSizeAfterTrimmingTrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/bytesizeaftertrimmingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-22f3f":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-22f3f","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-22f3f","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/range":{"abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"kind":"symbol","role":"symbol","type":"topic","title":"range","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"range"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":">","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/range","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/children(viewMode:)":{"role":"symbol","title":"children(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/children(viewMode:)","kind":"symbol","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/children(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-86j47":{"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-86j47","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-86j47","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/write(to:)":{"abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/write(to:)","title":"write(to:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/write(to:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmed(matching:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmed(matching:)","kind":"symbol","type":"topic","title":"trimmed(matching:)","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmed(matching:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/index":{"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/index","title":"index","type":"topic","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/index","kind":"symbol","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference"},{"text":" collection.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/as(_:)-3jvjy":{"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/as(_:)-3jvjy","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/as(_:)-3jvjy","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/debugDescription":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/debugDescription","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/debugdescription","title":"debugDescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-7w6m6":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-7w6m6","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-7w6m6","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trailingTriviaLength","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trailingtrivialength","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/tokens(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier","text":"TokenSequence"}],"type":"topic","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/tokens(viewmode:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-5fs9g":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-5fs9g","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-5fs9g","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmedByteRange":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedByteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmedbyterange","title":"trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/node(at:)":{"title":"node(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/node(at:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/is(_:)-2unyd":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/is(_:)-2unyd","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/is(_:)-2unyd","title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"text":" node.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-75hcc":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-75hcc","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-75hcc","kind":"symbol","title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-1otvr":{"title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-1otvr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-1otvr","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-iu3":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-iu3","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-iu3","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/endPosition":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/endPosition","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/endposition","title":"endPosition","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/hasSequenceExpr":{"abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"type":"topic","role":"symbol","title":"hasSequenceExpr","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/hassequenceexpr","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasSequenceExpr","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trailingTrivia":{"abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trailingtrivia","title":"trailingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trailingTrivia","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmedLength":{"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"text":"leading or trailing trivia.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedLength","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"trimmedLength","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmedlength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/lastToken":{"title":"lastToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/lastToken","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/lasttoken","deprecated":true,"abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/with(_:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/with(_:_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/with(_:_:)","title":"with(_:_:)","role":"symbol","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/syntaxNodeType":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":".Type","kind":"text"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/syntaxnodetype","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/syntaxNodeType","title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/firstToken":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/firstToken","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/firsttoken","title":"firstToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/parent":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"title":"parent","type":"topic","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/parent","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/parent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-982mv":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-982mv","title":"asProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-982mv"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-8tokf":{"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-8tokf","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-8tokf","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/root":{"title":"root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/root","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/root","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/id":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/id","title":"id","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/structure":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/structure","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/structure","title":"structure","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-1kgxh":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-1kgxh","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-1kgxh","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/nextToken(viewMode:)":{"title":"nextToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/nexttoken(viewmode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/leadingTrivia":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"title":"leadingTrivia","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/leadingtrivia","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmedDescription(matching:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedDescription(matching:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"title":"trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmeddescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/token(at:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/token(at:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/token(at:)","title":"token(at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax":{"title":"GenericArgumentListSyntax","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericArgumentListSyntax"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericArgumentListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/kind":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","type":"reference"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/kind","title":"kind","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"kind"},{"kind":"text","text":": "},{"text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-2mq20":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-2mq20","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-2mq20","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-61ix8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-61ix8","title":"asProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-61ix8","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/is(_:)-z1fa":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/is(_:)-z1fa","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/is(_:)-z1fa","kind":"symbol","type":"topic","title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/previousToken":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/previousToken","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/previoustoken","title":"previousToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/firstToken(viewMode:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/firstToken(viewMode:)","title":"firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/firsttoken(viewmode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/totalLength":{"title":"totalLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/totalLength","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/totallength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/byteSize":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/byteSize","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/bytesize","title":"byteSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-wyn6":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-wyn6","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-wyn6"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/cast(_:)-98708":{"abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node.."}],"title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/cast(_:)-98708","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/cast(_:)-98708","kind":"symbol","deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/hasParent":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/hasparent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasParent","type":"topic","title":"hasParent","role":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/previoustoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-27on":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-27on","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-27on","title":"asProtocol(_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-2i6xk":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-2i6xk","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-2i6xk","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-5q05e":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-5q05e","role":"symbol","title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-5q05e","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-1thqj":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-1thqj","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-1thqj","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmedDescription":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedDescription","type":"topic","role":"symbol","title":"trimmedDescription","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmeddescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/endPositionBeforeTrailingTrivia","type":"topic","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/endpositionbeforetrailingtrivia","role":"symbol","title":"endPositionBeforeTrailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/totalByteRange":{"abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/totalbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/totalByteRange","type":"topic","kind":"symbol","title":"totalByteRange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/byteRange":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/byteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/byterange","title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"abstract":[],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/lasttoken(viewmode:)","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmed":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmed","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmed","title":"trimmed","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-7a2io":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-7a2io","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-7a2io"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/hasError":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasError","title":"hasError","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/haserror","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-4frgt":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-4frgt","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-4frgt"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/ancestorOrSelf(mapping:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/ancestorOrSelf(mapping:)","type":"topic","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"type":"codeVoice","code":"condition"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/ancestororself(mapping:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ancestorOrSelf"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"mapping","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"ancestorOrSelf(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-9tdg6":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-9tdg6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-9tdg6","role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/keyPathInParent":{"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/keyPathInParent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"title":"keyPathInParent","type":"topic","kind":"symbol","role":"symbol","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/detach()":{"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/detach()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/detach()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"detach()","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/contentLength":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","kind":"symbol","role":"symbol","deprecated":true,"title":"contentLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/contentLength","abstract":[],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/contentlength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/init(_:)-7q3c4":{"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/init(_:)-7q3c4","role":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/init(_:)-7q3c4","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Children","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/as(_:)-56658":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/as(_:)-56658","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/as(_:)-56658","title":"as(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/cast(_:)-cwst":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/cast(_:)-cwst","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/cast(_:)-cwst","title":"cast(_:)","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/as(_:)-5l299":{"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/as(_:)-5l299","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/as(_:)-5l299","deprecated":true,"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/is(_:)-3hk3r":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/is(_:)-3hk3r","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/is(_:)-3hk3r","title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/hasmaximumnestingleveloverflow","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/hasWarning":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/hasWarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference"},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/haswarning","title":"hasWarning","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasWarning"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-5kkvs":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-5kkvs","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-5kkvs","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/description":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A source-accurate description of this node."}],"kind":"symbol","type":"topic","title":"description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/description","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-4eo8i":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-4eo8i","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-4eo8i","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/nextToken":{"deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/nexttoken","title":"nextToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/nextToken","abstract":[],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-3s7x1":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-3s7x1","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-3s7x1","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/cast(_:)-31l3d":{"title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/cast(_:)-31l3d","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/cast(_:)-31l3d","deprecated":true,"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isImplicit":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isImplicit","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isimplicit","title":"isImplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/positionAfterSkippingLeadingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"title":"positionAfterSkippingLeadingTrivia","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-2wui7":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-2wui7","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-2wui7","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/position":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/position","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/position","title":"position","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/syntaxTextBytes","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/syntaxtextbytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-4herw":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-4herw","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-4herw","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/asProtocol(_:)-4iadb":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/asProtocol(_:)-4iadb","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/asprotocol(_:)-4iadb","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/init(_:)-94ban":{"kind":"symbol","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"role":"symbol","title":"init(_:)","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/init(_:)-94ban","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/init(_:)-94ban"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/leadingTriviaLength":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/leadingTriviaLength","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/leadingtrivialength","title":"leadingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/trimmedRange":{"kind":"symbol","title":"trimmedRange","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/trimmedrange","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/trimmedRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/detached":{"title":"detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/detached","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"type":"text","text":"from its parent."}],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-6hcw7":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-6hcw7","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-6hcw7","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/isProtocol(_:)-3vbk":{"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/isprotocol(_:)-3vbk","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/isProtocol(_:)-3vbk","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentListSyntax\/endLocation(converter:afterTrailingTrivia:)","type":"topic","title":"endLocation(converter:afterTrailingTrivia:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}]}}}