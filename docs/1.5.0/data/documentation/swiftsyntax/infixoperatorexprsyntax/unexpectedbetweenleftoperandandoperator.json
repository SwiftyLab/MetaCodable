{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftOperandAndOperator","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"modules":[{"name":"SwiftSyntax"}],"symbolKind":"property","title":"unexpectedBetweenLeftOperandAndOperator","roleHeading":"Instance Property","externalID":"s:11SwiftSyntax017InfixOperatorExprB0V031unexpectedBetweenLeftOperandAndD0AA015UnexpectedNodesB0VSgvp"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftOperandAndOperator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax\/unexpectedBetweenLeftOperandAndOperator","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/infixoperatorexprsyntax\/unexpectedbetweenleftoperandandoperator"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InfixOperatorExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/infixoperatorexprsyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax","title":"InfixOperatorExprSyntax","role":"symbol","abstract":[{"text":"An infix operator call like ","type":"text"},{"type":"codeVoice","code":"1 + 2"},{"type":"text","text":"."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/InfixOperatorExprSyntax/unexpectedBetweenLeftOperandAndOperator":{"type":"topic","url":"\/documentation\/swiftsyntax\/infixoperatorexprsyntax\/unexpectedbetweenleftoperandandoperator","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBetweenLeftOperandAndOperator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"kind":"symbol","title":"unexpectedBetweenLeftOperandAndOperator","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/InfixOperatorExprSyntax\/unexpectedBetweenLeftOperandAndOperator","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"}}}