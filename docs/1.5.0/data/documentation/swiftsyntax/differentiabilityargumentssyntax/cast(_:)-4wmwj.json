{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"The current syntax node.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"cast","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"informing the user that the cast will always succeed."}],"type":"paragraph"}],"name":"Note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentsSyntax\/cast(_:)-4wmwj"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax026DifferentiabilityArgumentsB0V","symbolKind":"method","platforms":[{"beta":false,"unavailable":false,"deprecated":true,"message":"This cast will always succeed"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","title":"cast(_:)","modules":[{"name":"SwiftSyntax"}],"extendedModule":"SwiftSyntax","role":"symbol"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/differentiabilityargumentssyntax\/cast(_:)-4wmwj"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentsSyntax"]]},"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentsSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentsSyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityArgumentsSyntax"}],"kind":"symbol","abstract":[{"type":"text","text":"The differentiability arguments."}],"title":"DifferentiabilityArgumentsSyntax","url":"\/documentation\/swiftsyntax\/differentiabilityargumentssyntax","role":"symbol","navigatorTitle":[{"text":"DifferentiabilityArgumentsSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentsSyntax/cast(_:)-4wmwj":{"title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/differentiabilityargumentssyntax\/cast(_:)-4wmwj","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentsSyntax\/cast(_:)-4wmwj","kind":"symbol","role":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"type":"topic"}}}