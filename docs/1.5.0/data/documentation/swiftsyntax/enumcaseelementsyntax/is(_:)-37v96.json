{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" since the node is already of its own type.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"is","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}]}],"name":"Note","style":"note"}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always succeed"}],"type":"paragraph"}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/is(_:)-37v96","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/swiftsyntax\/enumcaseelementsyntax\/is(_:)-37v96"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","title":"is(_:)","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbxmF::SYNTHESIZED::s:11SwiftSyntax015EnumCaseElementB0V","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"SwiftSyntax","modules":[{"name":"SwiftSyntax"}],"platforms":[{"unavailable":false,"deprecated":true,"message":"This cast will always succeed","beta":false}],"symbolKind":"method"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax/is(_:)-37v96":{"title":"is(_:)","role":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax\/is(_:)-37v96","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax\/is(_:)-37v96","deprecated":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/EnumCaseElementSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/EnumCaseElementSyntax","title":"EnumCaseElementSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EnumCaseElementSyntax"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/enumcaseelementsyntax","abstract":[{"text":"An element of an enum case, containing the name of the case and, optionally, either associated values or an assignment to a raw value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumCaseElementSyntax","kind":"identifier"}]}}}