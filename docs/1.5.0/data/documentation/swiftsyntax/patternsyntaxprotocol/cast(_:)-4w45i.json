{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol\/cast(_:)-4w45i"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An instance of the specialized type.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"aside","name":"Warning","content":[{"inlineContent":[{"text":"This function will crash if the cast is not possible. Use ","type":"text"},{"code":"as","type":"codeVoice"},{"text":" to safely attempt a cast.","type":"text"}],"type":"paragraph"}],"style":"warning"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In most cases, this is casting a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":" to a node that is not a"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","isActive":true},{"type":"text","text":", which will always fail. If the "},{"type":"codeVoice","code":"syntaxType"},{"type":"text","text":" argument is a generic type,"},{"text":" ","type":"text"},{"text":"constrain it to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","isActive":true},{"text":" instead of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","isActive":true},{"text":".","type":"text"}]}],"name":"Note"}],"kind":"content"}],"metadata":{"extendedModule":"SwiftSyntax","title":"cast(_:)","roleHeading":"Instance Method","platforms":[{"unavailable":false,"message":"Type argument should be part of the 'PatternSyntaxProtocol' hierarchy","deprecated":true,"beta":false}],"symbolKind":"method","externalID":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp"}],"modules":[{"name":"SwiftSyntax"}],"role":"symbol"},"abstract":[{"text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/swiftsyntax\/patternsyntaxprotocol\/cast(_:)-4w45i"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type argument should be part of the 'PatternSyntaxProtocol' hierarchy"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntaxProtocol":{"type":"topic","url":"\/documentation\/swiftsyntax\/patternsyntaxprotocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","title":"PatternSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PatternSyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Protocol to which all ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","navigatorTitle":[{"text":"PatternSyntaxProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntax":{"url":"\/documentation\/swiftsyntax\/patternsyntax","navigatorTitle":[{"kind":"identifier","text":"PatternSyntax"}],"abstract":[],"kind":"symbol","role":"symbol","title":"PatternSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PatternSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntaxProtocol/cast(_:)-4w45i":{"kind":"symbol","title":"cast(_:)","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol\/cast(_:)-4w45i","url":"\/documentation\/swiftsyntax\/patternsyntaxprotocol\/cast(_:)-4w45i","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax07PatternB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp","text":"S"}],"deprecated":true,"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"}}}