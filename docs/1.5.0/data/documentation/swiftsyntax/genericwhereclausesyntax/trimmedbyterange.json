{"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedByteRange"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"symbolKind":"property","title":"trimmedByteRange","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE16trimmedByteRangeSnyAA16AbsolutePositionVGvp::SYNTHESIZED::s:11SwiftSyntax018GenericWhereClauseB0V","platforms":[{"unavailable":false,"deprecated":true,"beta":false,"renamed":"trimmedRange"}],"extendedModule":"SwiftSyntax","role":"symbol","roleHeading":"Instance Property"},"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax\/trimmedByteRange","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ByteSourceRange","text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"If this node consists of multiple tokens, only the first token’s"},{"type":"text","text":" "},{"type":"text","text":"leading and the last token’s trailing trivia will be trimmed."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/genericwhereclausesyntax\/trimmedbyterange"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericWhereClauseSyntax/trimmedByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"title":"trimmedByteRange","url":"\/documentation\/swiftsyntax\/genericwhereclausesyntax\/trimmedbyterange","type":"topic","deprecated":true,"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax\/trimmedByteRange","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ByteSourceRange":{"navigatorTitle":[{"text":"ByteSourceRange","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteSourceRange"}],"type":"topic","kind":"symbol","deprecated":true,"url":"\/documentation\/swiftsyntax\/bytesourcerange","abstract":[],"title":"ByteSourceRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ByteSourceRange","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericWhereClauseSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericWhereClauseSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"GenericWhereClauseSyntax","kind":"identifier"}],"title":"GenericWhereClauseSyntax","navigatorTitle":[{"kind":"identifier","text":"GenericWhereClauseSyntax"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"where"},{"text":" clause that places additional constraints on generic parameters like ","type":"text"},{"code":"where Element: Hashable","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/genericwhereclausesyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"}}}