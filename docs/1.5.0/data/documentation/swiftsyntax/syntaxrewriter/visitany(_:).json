{"metadata":{"symbolKind":"method","externalID":"s:11SwiftSyntax0B8RewriterC8visitAnyyAA0B0VSgAFF","title":"visitAny(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"visitAny","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"SwiftSyntax"}],"role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"Override point to choose custom visitation dispatch instead of the"},{"type":"text","text":" "},{"text":"specialized ","type":"text"},{"code":"visit(_:)","type":"codeVoice"},{"type":"text","text":" methods. Use this instead of those methods if"},{"text":" ","type":"text"},{"type":"text","text":"you intend to dynamically dispatch rewriting behavior."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/syntaxrewriter\/visitany(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter\/visitAny(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"visitAny","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"name":"Note","content":[{"inlineContent":[{"text":"If this method returns a non-nil result, the subsequent","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"visitAny(_:)"},{"type":"text","text":" methods and the specialized "},{"code":"visit(_:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"methods will not be called for this node and the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"visited node will be replaced by the returned node in the"},{"type":"text","text":" "},{"text":"rewritten tree.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"You can call the "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter\/rewrite(_:detach:)","isActive":true},{"type":"text","text":" "},{"text":"method recursively when returning a non-nil result","type":"text"},{"type":"text","text":" "},{"text":"if you want to visit the nodeâ€™s children anyway.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxRewriter":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRewriter"}],"navigatorTitle":[{"text":"SyntaxRewriter","kind":"identifier"}],"title":"SyntaxRewriter","abstract":[{"type":"text","text":"\/ Automatically generated by generate-swift-syntax"},{"text":" ","type":"text"},{"type":"text","text":"\/ Do not edit directly!"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxrewriter"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxRewriter/rewrite(_:detach:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rewrite"},{"text":"(","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"detach","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/syntaxrewriter\/rewrite(_:detach:)","abstract":[{"text":"Rewrite ","type":"text"},{"type":"codeVoice","code":"node"},{"type":"text","text":", keeping its parent unless "},{"type":"codeVoice","code":"detach"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","title":"rewrite(_:detach:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter\/rewrite(_:detach:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxRewriter/visitAny(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxRewriter\/visitAny(_:)","abstract":[{"text":"Override point to choose custom visitation dispatch instead of the","type":"text"},{"text":" ","type":"text"},{"text":"specialized ","type":"text"},{"type":"codeVoice","code":"visit(_:)"},{"text":" methods. Use this instead of those methods if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you intend to dynamically dispatch rewriting behavior."}],"url":"\/documentation\/swiftsyntax\/syntaxrewriter\/visitany(_:)","title":"visitAny(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"visitAny","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"}}}