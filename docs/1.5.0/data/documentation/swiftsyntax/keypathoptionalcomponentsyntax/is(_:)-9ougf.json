{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/KeyPathOptionalComponentSyntax\/is(_:)-9ougf","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" since the node is already of its own type."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"is","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/keypathoptionalcomponentsyntax\/is(_:)-9ougf"]}],"deprecationSummary":[{"inlineContent":[{"text":"This cast will always succeed","type":"text"}],"type":"paragraph"}],"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbxmF::SYNTHESIZED::s:11SwiftSyntax024KeyPathOptionalComponentB0V","extendedModule":"SwiftSyntax","platforms":[{"deprecated":true,"unavailable":false,"beta":false,"message":"This cast will always succeed"}],"role":"symbol","roleHeading":"Instance Method","title":"is(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/KeyPathOptionalComponentSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/KeyPathOptionalComponentSyntax":{"url":"\/documentation\/swiftsyntax\/keypathoptionalcomponentsyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyPathOptionalComponentSyntax"}],"title":"KeyPathOptionalComponentSyntax","type":"topic","abstract":[{"type":"text","text":"A key path component like "},{"type":"codeVoice","code":"?"},{"text":" or ","type":"text"},{"code":"!","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyPathOptionalComponentSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/KeyPathOptionalComponentSyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/KeyPathOptionalComponentSyntax/is(_:)-9ougf":{"deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/KeyPathOptionalComponentSyntax\/is(_:)-9ougf","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"is(_:)","url":"\/documentation\/swiftsyntax\/keypathoptionalcomponentsyntax\/is(_:)-9ougf","role":"symbol","kind":"symbol"}}}