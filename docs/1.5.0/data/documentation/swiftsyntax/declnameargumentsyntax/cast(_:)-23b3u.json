{"metadata":{"title":"cast(_:)","extendedModule":"SwiftSyntax","platforms":[{"message":"This cast will always succeed","unavailable":false,"deprecated":true,"beta":false}],"modules":[{"name":"SwiftSyntax"}],"role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax016DeclNameArgumentB0V","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current syntax node."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"type":"codeVoice","code":"cast"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}]}],"name":"Note"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax"]]},"variants":[{"paths":["\/documentation\/swiftsyntax\/declnameargumentsyntax\/cast(_:)-23b3u"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-23b3u","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"text":"This cast will always succeed","type":"text"}],"type":"paragraph"}],"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclNameArgumentSyntax","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"DeclNameArgumentSyntax","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DeclNameArgumentSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DeclNameArgumentSyntax/cast(_:)-23b3u":{"deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/declnameargumentsyntax\/cast(_:)-23b3u","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DeclNameArgumentSyntax\/cast(_:)-23b3u","role":"symbol","type":"topic","title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}]}}}