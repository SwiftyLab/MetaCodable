{"abstract":[{"type":"text","text":"Attempts to cast the current leaf syntax node to a different specified type."}],"sections":[],"metadata":{"title":"as(_:)","extendedModule":"SwiftSyntax","platforms":[{"unavailable":false,"beta":false,"message":"This cast will always fail","deprecated":true}],"role":"symbol","modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax014TypeAnnotationB0V","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeAnnotationSyntax\/as(_:)-3azpm","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"text":"? ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"}],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" since the leaf node cannot be cast to a different specified type."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"as"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always fail.","type":"text"}]}],"style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeAnnotationSyntax"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always fail"}],"type":"paragraph"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/swiftsyntax\/typeannotationsyntax\/as(_:)-3azpm"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeAnnotationSyntax/as(_:)-3azpm":{"url":"\/documentation\/swiftsyntax\/typeannotationsyntax\/as(_:)-3azpm","title":"as(_:)","abstract":[{"type":"text","text":"Attempts to cast the current leaf syntax node to a different specified type."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2asyqd__Sgqd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeAnnotationSyntax\/as(_:)-3azpm","kind":"symbol","deprecated":true,"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeAnnotationSyntax":{"url":"\/documentation\/swiftsyntax\/typeannotationsyntax","navigatorTitle":[{"kind":"identifier","text":"TypeAnnotationSyntax"}],"abstract":[],"kind":"symbol","role":"symbol","title":"TypeAnnotationSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeAnnotationSyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeAnnotationSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"}}}