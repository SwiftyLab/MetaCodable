{"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrayTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AttributedTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClassRestrictionTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CompositionTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DictionaryTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/IdentifierTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MetatypeTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/NamedOpaqueReturnTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PackElementTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PackExpansionTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SomeOrAnyTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SuppressedTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TupleTypeSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/typesyntaxprotocol"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypeSyntaxProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Extension point to add common methods to all ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"},{"text":" nodes.","type":"text"}]},{"type":"aside","style":"warning","content":[{"inlineContent":[{"text":"Do not conform to this protocol yourself.","type":"text"}],"type":"paragraph"}],"name":"Warning"}]}],"metadata":{"modules":[{"name":"SwiftSyntax"}],"externalID":"s:11SwiftSyntax04TypeB8ProtocolP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeSyntaxProtocol"}],"roleHeading":"Protocol","title":"TypeSyntaxProtocol","role":"symbol","navigatorTitle":[{"text":"TypeSyntaxProtocol","kind":"identifier"}],"symbolKind":"protocol"},"abstract":[{"type":"text","text":"Protocol to which all "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","type":"reference","isActive":true},{"type":"text","text":" nodes conform."}],"topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/as(_:)-5crw0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/as(_:)-5qpsq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/as(_:)-6mm5w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/cast(_:)-4v99i","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/cast(_:)-5i52c","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/cast(_:)-ucn1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/is(_:)-5pn9p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/is(_:)-9yb0b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/is(_:)-kxmo"]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/cast(_:)-5i52c":{"deprecated":true,"abstract":[{"type":"text","text":"Force-upcast the current syntax node to its base node type ("},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","type":"reference"},{"type":"text","text":")."}],"url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/cast(_:)-5i52c","kind":"symbol","role":"symbol","type":"topic","title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/cast(_:)-5i52c","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"TypeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"TypeSyntax","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/as(_:)-5qpsq":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax"},{"kind":"text","text":".Type) -> "},{"text":"TypeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"kind":"text","text":"?"}],"title":"as(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/as(_:)-5qpsq","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/as(_:)-5qpsq","abstract":[{"text":"Attempts to upcast the current syntax node to its base node type (","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","isActive":true},{"text":").","type":"text"}],"kind":"symbol","role":"symbol","deprecated":true,"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/NamedOpaqueReturnTypeSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/NamedOpaqueReturnTypeSyntax","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"NamedOpaqueReturnTypeSyntax","kind":"identifier"}],"title":"NamedOpaqueReturnTypeSyntax","navigatorTitle":[{"text":"NamedOpaqueReturnTypeSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/namedopaquereturntypesyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/cast(_:)-4v99i":{"abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"}],"url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/cast(_:)-4v99i","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/cast(_:)-4v99i","title":"cast(_:)","kind":"symbol","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MetatypeTypeSyntax":{"navigatorTitle":[{"kind":"identifier","text":"MetatypeTypeSyntax"}],"title":"MetatypeTypeSyntax","type":"topic","url":"\/documentation\/swiftsyntax\/metatypetypesyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetatypeTypeSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MetatypeTypeSyntax","abstract":[],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionTypeSyntax":{"url":"\/documentation\/swiftsyntax\/functiontypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionTypeSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FunctionTypeSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"FunctionTypeSyntax","kind":"identifier"}],"type":"topic","title":"FunctionTypeSyntax","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ArrayTypeSyntax":{"url":"\/documentation\/swiftsyntax\/arraytypesyntax","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ArrayTypeSyntax","abstract":[],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayTypeSyntax"}],"title":"ArrayTypeSyntax","navigatorTitle":[{"text":"ArrayTypeSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SuppressedTypeSyntax":{"title":"SuppressedTypeSyntax","type":"topic","url":"\/documentation\/swiftsyntax\/suppressedtypesyntax","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SuppressedTypeSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SuppressedTypeSyntax","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SuppressedTypeSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/is(_:)-5pn9p":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/is(_:)-5pn9p","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/is(_:)-5pn9p","role":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TupleTypeSyntax":{"navigatorTitle":[{"text":"TupleTypeSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TupleTypeSyntax","title":"TupleTypeSyntax","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/tupletypesyntax","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TupleTypeSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SomeOrAnyTypeSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SomeOrAnyTypeSyntax","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SomeOrAnyTypeSyntax","kind":"identifier"}],"title":"SomeOrAnyTypeSyntax","navigatorTitle":[{"kind":"identifier","text":"SomeOrAnyTypeSyntax"}],"url":"\/documentation\/swiftsyntax\/someoranytypesyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PackExpansionTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PackExpansionTypeSyntax","title":"PackExpansionTypeSyntax","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackExpansionTypeSyntax"}],"navigatorTitle":[{"text":"PackExpansionTypeSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/packexpansiontypesyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DictionaryTypeSyntax":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DictionaryTypeSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DictionaryTypeSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/dictionarytypesyntax","abstract":[],"title":"DictionaryTypeSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DictionaryTypeSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/as(_:)-5crw0":{"kind":"symbol","role":"symbol","abstract":[{"text":"Attempts to cast the current syntax node to a given node type from the a base node protocol hierarchy other than","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol"},{"type":"text","text":"."}],"deprecated":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE2asyqd__Sgqd__mAA0bD0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE2asyqd__Sgqd__mAA0bD0Rd__lF1SL_qd__mfp","text":"S"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/as(_:)-5crw0","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/as(_:)-5crw0","title":"as(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ImplicitlyUnwrappedOptionalTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ImplicitlyUnwrappedOptionalTypeSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ImplicitlyUnwrappedOptionalTypeSyntax"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/implicitlyunwrappedoptionaltypesyntax","kind":"symbol","title":"ImplicitlyUnwrappedOptionalTypeSyntax","role":"symbol","navigatorTitle":[{"text":"ImplicitlyUnwrappedOptionalTypeSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/IdentifierTypeSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdentifierTypeSyntax"}],"title":"IdentifierTypeSyntax","kind":"symbol","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/IdentifierTypeSyntax","navigatorTitle":[{"text":"IdentifierTypeSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/identifiertypesyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClassRestrictionTypeSyntax":{"title":"ClassRestrictionTypeSyntax","url":"\/documentation\/swiftsyntax\/classrestrictiontypesyntax","navigatorTitle":[{"text":"ClassRestrictionTypeSyntax","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClassRestrictionTypeSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClassRestrictionTypeSyntax","abstract":[],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/as(_:)-6mm5w":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/as(_:)-6mm5w","kind":"symbol","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/as(_:)-6mm5w","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"title":"as(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PackElementTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PackElementTypeSyntax","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/packelementtypesyntax","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PackElementTypeSyntax"}],"title":"PackElementTypeSyntax","navigatorTitle":[{"text":"PackElementTypeSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/OptionalTypeSyntax":{"title":"OptionalTypeSyntax","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/OptionalTypeSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/optionaltypesyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalTypeSyntax"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OptionalTypeSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/AttributedTypeSyntax":{"abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/attributedtypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/AttributedTypeSyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AttributedTypeSyntax"}],"title":"AttributedTypeSyntax","navigatorTitle":[{"text":"AttributedTypeSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CompositionTypeSyntax":{"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CompositionTypeSyntax","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CompositionTypeSyntax","kind":"identifier"}],"title":"CompositionTypeSyntax","navigatorTitle":[{"kind":"identifier","text":"CompositionTypeSyntax"}],"url":"\/documentation\/swiftsyntax\/compositiontypesyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol":{"navigatorTitle":[{"text":"TypeSyntaxProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"},{"text":" nodes conform.","type":"text"}],"title":"TypeSyntaxProtocol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/cast(_:)-ucn1":{"abstract":[{"text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF1SL_qd__mfp"}],"url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/cast(_:)-ucn1","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/cast(_:)-ucn1","title":"cast(_:)","kind":"symbol","type":"topic","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntax":{"type":"topic","url":"\/documentation\/swiftsyntax\/typesyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeSyntax"}],"abstract":[],"kind":"symbol","role":"symbol","title":"TypeSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/is(_:)-kxmo":{"title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to its base node type ("},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntax","isActive":true},{"type":"text","text":")."}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","kind":"typeIdentifier","text":"TypeSyntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/is(_:)-kxmo","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/is(_:)-kxmo","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MissingTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MissingTypeSyntax","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/missingtypesyntax","abstract":[{"text":"In case the source code is missing a type, this node stands in place of the missing type.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MissingTypeSyntax","kind":"identifier"}],"title":"MissingTypeSyntax","navigatorTitle":[{"text":"MissingTypeSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TypeSyntaxProtocol/is(_:)-9yb0b":{"title":"is(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/typesyntaxprotocol\/is(_:)-9yb0b","role":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax04TypeB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other"},{"text":" ","type":"text"},{"type":"text","text":"than "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TypeSyntaxProtocol\/is(_:)-9yb0b"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MemberTypeSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MemberTypeSyntax"}],"navigatorTitle":[{"text":"MemberTypeSyntax","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/membertypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberTypeSyntax","title":"MemberTypeSyntax","role":"symbol","abstract":[],"type":"topic"}}}