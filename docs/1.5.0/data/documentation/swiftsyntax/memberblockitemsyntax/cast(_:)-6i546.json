{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax\/cast(_:)-6i546"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/memberblockitemsyntax\/cast(_:)-6i546"]}],"sections":[],"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always succeed","type":"text"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The current syntax node.","type":"text"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"cast"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}]}]}],"kind":"content"}],"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax015MemberBlockItemB0V","modules":[{"name":"SwiftSyntax"}],"title":"cast(_:)","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":[{"beta":false,"deprecated":true,"unavailable":false,"message":"This cast will always succeed"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MemberBlockItemSyntax/cast(_:)-6i546":{"type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/memberblockitemsyntax\/cast(_:)-6i546","title":"cast(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax\/cast(_:)-6i546","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MemberBlockItemSyntax":{"navigatorTitle":[{"kind":"identifier","text":"MemberBlockItemSyntax"}],"title":"MemberBlockItemSyntax","url":"\/documentation\/swiftsyntax\/memberblockitemsyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemberBlockItemSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax","abstract":[{"text":"A member declaration of a type consisting of a declaration and an optional semicolon;","type":"text"}],"kind":"symbol","role":"symbol"}}}