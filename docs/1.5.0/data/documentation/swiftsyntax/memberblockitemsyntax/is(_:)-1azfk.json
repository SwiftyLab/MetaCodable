{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"SwiftSyntax"}],"platforms":[{"beta":false,"message":"This cast will always fail","unavailable":false,"deprecated":true}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax015MemberBlockItemB0V","title":"is(_:)","extendedModule":"SwiftSyntax","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always fail","type":"text"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/memberblockitemsyntax\/is(_:)-1azfk"]}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Checks if the current leaf syntax node can be cast to a different specified type.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"false","type":"codeVoice"},{"type":"text","text":" since the leaf node cannot be cast to a different specified type."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"is"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always fail.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax\/is(_:)-1azfk","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MemberBlockItemSyntax/is(_:)-1azfk":{"type":"topic","deprecated":true,"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax\/is(_:)-1azfk","url":"\/documentation\/swiftsyntax\/memberblockitemsyntax\/is(_:)-1azfk","title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current leaf syntax node can be cast to a different specified type."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/MemberBlockItemSyntax":{"navigatorTitle":[{"kind":"identifier","text":"MemberBlockItemSyntax"}],"title":"MemberBlockItemSyntax","url":"\/documentation\/swiftsyntax\/memberblockitemsyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemberBlockItemSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/MemberBlockItemSyntax","abstract":[{"text":"A member declaration of a type consisting of a declaration and an optional semicolon;","type":"text"}],"kind":"symbol","role":"symbol"}}}