{"sections":[],"metadata":{"roleHeading":"API Collection","title":"SyntaxProtocol Implementations","role":"collectionGroup","modules":[{"name":"SwiftSyntax"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/SyntaxProtocol-Implementations"},"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-1vz5f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-2684v"]},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedRange"],"generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-2s6hj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-68tq4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-9uv5g","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-35mvl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-4373v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-5h41q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-63v2f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-7l2ef","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-82z4p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8kv7l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8pg4w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8yzid","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9rl6y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9s6jj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9zjpf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-dvl5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-k7j7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-1n7r5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-3zyu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-4yaxg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5m9op","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5yv5w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-bmej","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-283oj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-2s3hh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-33r6m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4svh5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4vmt3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-5yxa8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-6nyb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-7a9ro","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8de75","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8gqqy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8yjo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-90vi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-ial5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-j9mw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/write(to:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/structure"],"title":"Type Properties"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-9rl6y":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9rl6y","title":"asProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-9rl6y","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/nexttoken","deprecated":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"kind":"symbol","title":"nextToken","type":"topic","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-7a9ro":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-7a9ro","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-7a9ro","role":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasSequenceExpr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"role":"symbol","title":"hasSequenceExpr","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/hassequenceexpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/is(_:)-5yv5w":{"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"title":"is(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/is(_:)-5yv5w","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5yv5w","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-8kv7l":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8kv7l","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-8kv7l","kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/syntaxNodeType":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/syntaxnodetype","title":"syntaxNodeType","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxNodeType","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/nextToken(viewMode:)":{"abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"type":"text","text":"after this node."}],"type":"topic","role":"symbol","title":"nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/nexttoken(viewmode:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedLength":{"title":"trimmedLength","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmedlength","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-33r6m":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-33r6m","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-33r6m","role":"symbol","title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/children(viewMode:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/children(viewMode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/children(viewmode:)","title":"children(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier","text":"SyntaxChildren"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-9s6jj":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-9s6jj","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9s6jj","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-5h41q":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-5h41q","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-5h41q","title":"asProtocol(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-90vi":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-90vi","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-90vi","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/lastToken":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/lasttoken","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","deprecated":true,"title":"lastToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/byteSizeAfterTrimmingTrivia":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSizeAfterTrimmingTrivia","title":"byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/bytesizeaftertrimmingtrivia","deprecated":true,"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-4373v":{"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-4373v","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-4373v","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-7l2ef":{"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-7l2ef","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-7l2ef","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/cast(_:)-3zyu":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/cast(_:)-3zyu","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-3zyu","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node.."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol","deprecated":true,"title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/lastToken(viewMode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/lasttoken(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/leadingTrivia":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/leadingtrivia","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTrivia","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"kind":"symbol","title":"leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-4svh5":{"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4svh5","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-4svh5","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/root":{"title":"root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/root","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/root","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/structure":{"type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/structure","kind":"symbol","role":"symbol","title":"structure","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/is(_:)-bmej":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/is(_:)-bmej","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-bmej","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","deprecated":true,"title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-8yjo":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8yjo","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-8yjo","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/hasmaximumnestingleveloverflow","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/as(_:)-68tq4":{"title":"as(_:)","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-68tq4","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/as(_:)-68tq4","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/token(at:)":{"role":"symbol","title":"token(at:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasParent":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/hasparent","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasParent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/init(_:)-2684v":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/init(_:)-2684v","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Children"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","kind":"typeIdentifier","text":"Children"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-2684v","role":"symbol","type":"topic","title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPositionBeforeTrailingTrivia","kind":"symbol","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/endpositionbeforetrailingtrivia","type":"topic","title":"endPositionBeforeTrailingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmedbyterange","deprecated":true,"title":"trimmedByteRange","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedByteRange","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/debugDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/debugdescription","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"kind":"symbol","title":"debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/ancestorOrSelf(mapping:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/ancestororself(mapping:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ancestorOrSelf"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"mapping","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"text":"?) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"text":"Returns this node or the first ancestor that satisfies ","type":"text"},{"code":"condition","type":"codeVoice"},{"type":"text","text":"."}],"title":"ancestorOrSelf(mapping:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/ancestorOrSelf(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-82z4p":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-82z4p","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-82z4p","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/syntaxTextBytes":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/syntaxTextBytes","title":"syntaxTextBytes","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/syntaxtextbytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasWarning":{"title":"hasWarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasWarning","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/haswarning","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/firstToken":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/firsttoken","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","deprecated":true,"title":"firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/totalByteRange":{"title":"totalByteRange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalByteRange","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/totalbyterange","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/byteSize":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/bytesize","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteSize","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","deprecated":true,"title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/endPosition":{"type":"topic","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"title":"endPosition","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/endposition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endPosition","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-8pg4w":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-8pg4w","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8pg4w","kind":"symbol","title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-9zjpf":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-9zjpf","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-9zjpf","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/init(_:)-1vz5f":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"text":"?)","kind":"text"}],"kind":"symbol","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/init(_:)-1vz5f","type":"topic","role":"symbol","title":"init(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/init(_:)-1vz5f"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/detach()":{"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/detach()","title":"detach()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detach()","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/positionAfterSkippingLeadingTrivia":{"type":"topic","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"title":"positionAfterSkippingLeadingTrivia","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/positionafterskippingleadingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/positionAfterSkippingLeadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"title":"trimmedDescription","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmeddescription","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isImplicit":{"title":"isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isImplicit","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isimplicit","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/previousToken(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"title":"previousToken(viewMode:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trailingTriviaLength":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trailingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTriviaLength","role":"symbol","title":"trailingTriviaLength","type":"topic","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trailingTrivia":{"abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trailingTrivia","type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trailingtrivia","role":"symbol","kind":"symbol","title":"trailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/description":{"title":"description","role":"symbol","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/description","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/description","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":"?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/is(_:)-5m9op":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/is(_:)-5m9op","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/is(_:)-5m9op","role":"symbol","title":"is(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/keyPathInParent":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/keypathinparent","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/keyPathInParent","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","title":"keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-8gqqy":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-8gqqy","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8gqqy","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/id":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"type":"topic","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"title":"id","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/id","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/kind":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true,"type":"reference"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}],"type":"topic","title":"kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/kind"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmed(matching:)":{"title":"trimmed(matching:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmed(matching:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","role":"symbol","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-283oj":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-283oj","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-283oj","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/as(_:)-9uv5g":{"deprecated":true,"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"title":"as(_:)","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/as(_:)-9uv5g","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-9uv5g","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmed":{"title":"trimmed","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmed","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmed","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/range":{"role":"symbol","kind":"symbol","abstract":[{"text":"The range of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"range"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"title":"range","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/range","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-8yzid":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-8yzid","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-8yzid"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/as(_:)-2s6hj":{"title":"as(_:)","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/as(_:)-2s6hj","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/as(_:)-2s6hj","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/parent":{"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/parent","kind":"symbol","role":"symbol","type":"topic","title":"parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/detached":{"title":"detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/detached","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/detached","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/previousToken":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"abstract":[],"title":"previousToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/previousToken","deprecated":true,"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/previoustoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedRange":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmedrange","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedRange","abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":">","kind":"text"}],"kind":"symbol","title":"trimmedRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-4vmt3":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-4vmt3","title":"isProtocol(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-4vmt3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/tokens(viewMode:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/tokens(viewmode:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/hasError":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/haserror","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/hasError","type":"topic","title":"hasError","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-dvl5":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-dvl5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-dvl5"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/node(at:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/node(at:)","type":"topic","title":"node(at:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-k7j7":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-k7j7","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-k7j7","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/byteRange":{"title":"byteRange","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/byteRange","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/byterange","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/write(to:)":{"title":"write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/write(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Target"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Target","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"role":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/cast(_:)-4yaxg":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-4yaxg","title":"cast(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/cast(_:)-4yaxg"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/index":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/index","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference","isActive":true},{"type":"text","text":" collection."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"kind":"symbol","deprecated":true,"title":"index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax":{"title":"DifferentiabilityArgumentListSyntax","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax","role":"symbol","navigatorTitle":[{"text":"DifferentiabilityArgumentListSyntax","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityArgumentListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-8de75":{"title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-8de75","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-8de75","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/with(_:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":">, "},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"with(_:_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/with(_:_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/leadingTriviaLength":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/leadingtrivialength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"kind":"symbol","title":"leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-6nyb":{"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-6nyb","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-6nyb","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/totalLength":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/totallength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"type":"topic","title":"totalLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-35mvl":{"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-35mvl","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-35mvl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-j9mw":{"type":"topic","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-j9mw","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-j9mw","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-ial5":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-ial5","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-ial5","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/position":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/position","kind":"symbol","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/position","type":"topic","title":"position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/asProtocol(_:)-63v2f":{"role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/asProtocol(_:)-63v2f","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/asprotocol(_:)-63v2f","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/contentLength":{"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/contentLength","title":"contentLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/contentlength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/trimmedDescription(matching:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"trimmedDescription(matching:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"text":"last token.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/trimmedDescription(matching:)","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/trimmeddescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-5yxa8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-5yxa8","url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-5yxa8","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/cast(_:)-1n7r5":{"title":"cast(_:)","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/cast(_:)-1n7r5","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/cast(_:)-1n7r5","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/isProtocol(_:)-2s3hh":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/isprotocol(_:)-2s3hh","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/isProtocol(_:)-2s3hh","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityArgumentListSyntax/firstToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/differentiabilityargumentlistsyntax\/firsttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityArgumentListSyntax\/firstToken(viewMode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"title":"firstToken(viewMode:)","role":"symbol","type":"topic","kind":"symbol"}}}