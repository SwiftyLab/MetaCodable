{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax"]]},"kind":"article","metadata":{"modules":[{"name":"SwiftSyntax"}],"role":"collectionGroup","roleHeading":"API Collection","title":"SyntaxProtocol Implementations"},"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/init(_:)-3qosc"]},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedRange"],"anchor":"Instance-Properties","title":"Instance Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-1lmjk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-39ent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-5ppgy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2dstq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2odfr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3dk5m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3l8s8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3r6yp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-5mev2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6broe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6fivv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-85ioj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8jj7y","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8tz1e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9419u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9hav3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9l192","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-27wl0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-3tjzf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-5ephz","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-1h58t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-7yvpo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-8ar7j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1ixir","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1osu2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-24l4","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3c12h","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3d9c1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3tzyl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-4zds","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-5gav7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-6be2x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-7ncpw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8lroa","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8rboe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9phum","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9rvwg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/write(to:)"],"anchor":"Instance-Methods"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/previousToken":{"role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/previoustoken","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"previousToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasSequenceExpr":{"title":"hasSequenceExpr","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/hassequenceexpr","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasSequenceExpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-85ioj":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-85ioj","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-85ioj","kind":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/syntaxNodeType":{"abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxNodeType","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/syntaxnodetype","title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isImplicit":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isimplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"kind":"symbol","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isImplicit","title":"isImplicit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-9419u":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9419u","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-9419u","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax","navigatorTitle":[{"text":"GenericArgumentClauseSyntax","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenericArgumentClauseSyntax","kind":"identifier"}],"abstract":[],"title":"GenericArgumentClauseSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/lastToken":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/lasttoken","abstract":[],"kind":"symbol","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken","title":"lastToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/cast(_:)-27wl0":{"deprecated":true,"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-27wl0","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/cast(_:)-27wl0","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasParent":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasParent","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/hasparent","kind":"symbol","title":"hasParent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Whether or not this node has a parent.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-3l8s8":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3l8s8","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-3l8s8"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-6be2x":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-6be2x","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-6be2x","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/firstToken(viewMode:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/firsttoken(viewmode:)","abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken(viewMode:)","title":"firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/is(_:)-8ar7j":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"is(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/is(_:)-8ar7j","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-8ar7j"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-9rvwg":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9rvwg","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-9rvwg"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/as(_:)-1lmjk":{"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-1lmjk","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"title":"as(_:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/as(_:)-1lmjk"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPositionBeforeTrailingTrivia","type":"topic","title":"endPositionBeforeTrailingTrivia","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/endpositionbeforetrailingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/startLocation(converter:afterLeadingTrivia:)":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/startlocation(converter:afterleadingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/totalLength":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/totallength","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalLength","title":"totalLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"type":"topic","role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":"?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trailingTriviaLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"type":"topic","role":"symbol","kind":"symbol","title":"trailingTriviaLength","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trailingtrivialength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmed(matching:)":{"kind":"symbol","type":"topic","title":"trimmed(matching:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmed(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed(matching:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/as(_:)-5ppgy":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/as(_:)-5ppgy","title":"as(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-5ppgy","kind":"symbol","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-3d9c1":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-3d9c1","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3d9c1","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/index":{"abstract":[{"type":"text","text":"The index of this node in a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","type":"reference","isActive":true},{"type":"text","text":" collection."}],"type":"topic","title":"index","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/index","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/index","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-1ixir":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-1ixir","title":"isProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1ixir","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-3c12h":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3c12h","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-3c12h","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedDescription(matching:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"kind":"symbol","title":"trimmedDescription(matching:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription(matching:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmeddescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-9hav3":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-9hav3","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9hav3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/keyPathInParent":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"kind":"symbol","title":"keyPathInParent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/keyPathInParent","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/keypathinparent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/byteRange":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier","text":"ByteSourceRange"}],"abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"byteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/byterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/position":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"kind":"symbol","title":"position","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/position","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-8rboe":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8rboe","type":"topic","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-8rboe","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasWarning":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"reference"},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"type":"topic","role":"symbol","kind":"symbol","title":"hasWarning","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/haswarning","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/previousToken(viewMode:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"kind":"symbol","title":"previousToken(viewMode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/previousToken(viewMode:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-8tz1e":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-8tz1e","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8tz1e"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/endPosition":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endPosition","title":"endPosition","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/endposition"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-24l4":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-24l4","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-24l4"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-5mev2":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-5mev2","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-5mev2"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/detached":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"kind":"symbol","title":"detached","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detached","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/nextToken":{"title":"nextToken","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/nexttoken","role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/is(_:)-7yvpo":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"type":"topic","role":"symbol","kind":"symbol","title":"is(_:)","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/is(_:)-7yvpo","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-7yvpo"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-8lroa":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-8lroa","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-8lroa","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/children(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"abstract":[{"type":"text","text":"A sequence over the children of this node."}],"kind":"symbol","title":"children(viewMode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/children(viewMode:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/children(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/contentLength":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"contentLength","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/contentlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/contentLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/positionAfterSkippingLeadingTrivia":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"kind":"symbol","title":"positionAfterSkippingLeadingTrivia","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/positionAfterSkippingLeadingTrivia","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/positionafterskippingleadingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/leadingTriviaLength":{"abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"title":"leadingTriviaLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTriviaLength","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/leadingtrivialength","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/parent":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/parent","title":"parent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/range":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/range","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"range","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"abstract":[{"text":"The range of this node including leading and trailing trivia.","type":"text"}],"title":"range","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-3r6yp":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-3r6yp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3r6yp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-6fivv":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6fivv","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-6fivv"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-9l192":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-9l192","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-9l192"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/as(_:)-39ent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/as(_:)-39ent","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" node."}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/as(_:)-39ent","kind":"symbol","title":"as(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/nextToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/nexttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","title":"nextToken(viewMode:)","type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/nextToken(viewMode:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedDescription":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"kind":"symbol","title":"trimmedDescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedDescription","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmeddescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-2odfr":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2odfr","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-2odfr","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-3tzyl":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-3tzyl","type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-3tzyl","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmed":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"trimmed","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmed","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmed"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/detach()":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/detach()","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/detach()","title":"detach()","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/root":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/root","title":"root","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/root","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/kind":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxKind","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/kind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/kind","title":"kind","role":"symbol","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true},{"type":"text","text":"."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedLength":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmedlength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedLength","title":"trimmedLength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-1osu2":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-1osu2","kind":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-1osu2","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/cast(_:)-3tjzf":{"role":"symbol","title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-3tjzf","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/cast(_:)-3tjzf","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node.."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-6broe":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-6broe","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-6broe"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/is(_:)-1h58t":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"type":"topic","role":"symbol","kind":"symbol","title":"is(_:)","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/is(_:)-1h58t","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/is(_:)-1h58t"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSize","role":"symbol","type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"title":"byteSize","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/bytesize","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/node(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"kind":"symbol","title":"node(at:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/node(at:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-5gav7":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-5gav7","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-5gav7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/tokens(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence"}],"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"kind":"symbol","title":"tokens(viewMode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/tokens(viewMode:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/tokens(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-2dstq":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-2dstq","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-2dstq","title":"asProtocol(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/totalByteRange":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"type":"topic","role":"symbol","kind":"symbol","title":"totalByteRange","deprecated":true,"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/totalbyterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/totalByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-9phum":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-9phum","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-9phum","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/cast(_:)-5ephz":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"kind":"symbol","title":"cast(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/cast(_:)-5ephz","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/cast(_:)-5ephz"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/debugDescription":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"type":"topic","role":"symbol","kind":"symbol","title":"debugDescription","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/debugdescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasMaximumNestingLevelOverflow":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"kind":"symbol","title":"hasMaximumNestingLevelOverflow","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasMaximumNestingLevelOverflow","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/hasmaximumnestingleveloverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/ancestorOrSelf(mapping:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"ancestorOrSelf","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"mapping","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":") -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns this node or the first ancestor that satisfies ","type":"text"},{"type":"codeVoice","code":"condition"},{"text":".","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"ancestorOrSelf(mapping:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/ancestororself(mapping:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/ancestorOrSelf(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"abstract":[{"text":"The range of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmedrange","role":"symbol","title":"trimmedRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-3dk5m":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-3dk5m","type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-3dk5m"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/firstToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/firstToken","abstract":[],"title":"firstToken","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/firsttoken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/id":{"type":"topic","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/id","title":"id","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/syntaxTextBytes":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"syntaxTextBytes","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/with(_:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"with(_:_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/with(_:_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/description":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A source-accurate description of this node."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/description","title":"description","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/description"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/write(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier","text":"Target"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"type":"topic","role":"symbol","kind":"symbol","title":"write(to:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/write(to:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trimmedByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"kind":"symbol","title":"trimmedByteRange","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trimmedByteRange","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trimmedbyterange","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/lastToken(viewMode:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"type":"topic","role":"symbol","kind":"symbol","title":"lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/lasttoken(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/init(_:)-3qosc":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"kind":"symbol","title":"init(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/init(_:)-3qosc","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/init(_:)-3qosc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/hasError":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"type":"topic","role":"symbol","kind":"symbol","title":"hasError","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/haserror","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/hasError"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-7ncpw":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-7ncpw","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-7ncpw","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/byteSizeAfterTrimmingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"kind":"symbol","title":"byteSizeAfterTrimmingTrivia","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/byteSizeAfterTrimmingTrivia","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/bytesizeaftertrimmingtrivia","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/leadingTrivia":{"url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/leadingtrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"title":"leadingTrivia","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/isProtocol(_:)-4zds":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/isprotocol(_:)-4zds","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/isProtocol(_:)-4zds"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/trailingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"kind":"symbol","title":"trailingTrivia","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/trailingTrivia","role":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/trailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/asProtocol(_:)-8jj7y":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/asprotocol(_:)-8jj7y","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/asProtocol(_:)-8jj7y"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/token(at:)":{"title":"token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/token(at:)","kind":"symbol","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"type":"topic","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/token(at:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/GenericArgumentClauseSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/GenericArgumentClauseSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}],"title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/genericargumentclausesyntax\/endlocation(converter:aftertrailingtrivia:)","role":"symbol"}}}