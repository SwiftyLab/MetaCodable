{"variants":[{"paths":["\/documentation\/swiftsyntax\/functiontypesyntax\/unexpectedbetweenleftparenandparameters"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionTypeSyntax"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionTypeSyntax\/unexpectedBetweenLeftParenAndParameters","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftParenAndParameters","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"modules":[{"name":"SwiftSyntax"}],"title":"unexpectedBetweenLeftParenAndParameters","externalID":"s:11SwiftSyntax012FunctionTypeB0V39unexpectedBetweenLeftParenAndParametersAA015UnexpectedNodesB0VSgvp","role":"symbol","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unexpectedBetweenLeftParenAndParameters","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"roleHeading":"Instance Property"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionTypeSyntax":{"url":"\/documentation\/swiftsyntax\/functiontypesyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionTypeSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FunctionTypeSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"FunctionTypeSyntax","kind":"identifier"}],"type":"topic","title":"FunctionTypeSyntax","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/UnexpectedNodesSyntax":{"title":"UnexpectedNodesSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/unexpectednodessyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/UnexpectedNodesSyntax","navigatorTitle":[{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/FunctionTypeSyntax/unexpectedBetweenLeftParenAndParameters":{"title":"unexpectedBetweenLeftParenAndParameters","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenLeftParenAndParameters","kind":"identifier"},{"kind":"text","text":": "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/FunctionTypeSyntax\/unexpectedBetweenLeftParenAndParameters","url":"\/documentation\/swiftsyntax\/functiontypesyntax\/unexpectedbetweenleftparenandparameters"}}}