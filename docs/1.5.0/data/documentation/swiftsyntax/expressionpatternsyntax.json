{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"]]},"metadata":{"modules":[{"name":"SwiftSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionPatternSyntax"}],"symbolKind":"struct","role":"symbol","externalID":"s:11SwiftSyntax017ExpressionPatternB0V","navigatorTitle":[{"text":"ExpressionPatternSyntax","kind":"identifier"}],"title":"ExpressionPatternSyntax","roleHeading":"Structure"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionPatternSyntax"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Examples","level":3,"anchor":"Examples","type":"heading"},{"inlineContent":[{"type":"text","text":"Patterns can be used in switch cases like the following example:"}],"type":"paragraph"},{"code":["switch raw.kind {","  case .expressionPattern:","    return true","  default:","    return false","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","anchor":"Children","text":"Children","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"expression"},{"text":": ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","type":"reference","isActive":true}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/expressionpatternsyntax"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"A pattern that contains an "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(leadingTrivia:_:expression:_:trailingTrivia:)"],"anchor":"Initializers"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/expression","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedAfterExpression","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedBeforeExpression"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/structure"],"anchor":"Type-Properties","title":"Type Properties"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/PatternSyntaxProtocol-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/SyntaxProtocol-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntax":{"url":"\/documentation\/swiftsyntax\/exprsyntax","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","role":"symbol","title":"ExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","type":"unresolvable","title":"Swift.TextOutputStreamable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/Hashable-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","title":"Hashable Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Hashable-Implementations","abstract":[],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/hashable-implementations"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/structure":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier","text":"SyntaxNodeStructure"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/structure","title":"structure","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/expression":{"type":"topic","kind":"symbol","role":"symbol","title":"expression","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/expression","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"expression","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","kind":"typeIdentifier","text":"ExprSyntax"}],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/expression"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/Equatable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/Equatable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/equatable-implementations","title":"Equatable Implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/PatternSyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/PatternSyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/patternsyntaxprotocol-implementations","title":"PatternSyntaxProtocol Implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/unexpectedBeforeExpression":{"type":"topic","kind":"symbol","role":"symbol","title":"unexpectedBeforeExpression","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedBeforeExpression","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedBeforeExpression","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/unexpectedbeforeexpression"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntax":{"url":"\/documentation\/swiftsyntax\/patternsyntax","navigatorTitle":[{"kind":"identifier","text":"PatternSyntax"}],"abstract":[],"kind":"symbol","role":"symbol","title":"PatternSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PatternSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/CustomReflectable-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/CustomReflectable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/customreflectable-implementations","title":"CustomReflectable Implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExprSyntaxProtocol":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"kind":"symbol","abstract":[{"text":"Protocol to which all ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntax"},{"text":" nodes conform.","type":"text"}],"title":"ExprSyntaxProtocol","url":"\/documentation\/swiftsyntax\/exprsyntaxprotocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/unexpectedAfterExpression":{"type":"topic","kind":"symbol","role":"symbol","title":"unexpectedAfterExpression","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/unexpectedAfterExpression","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedAfterExpression","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/unexpectedafterexpression"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/init(leadingTrivia:_:expression:_:trailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(leadingTrivia:_:expression:_:trailingTrivia:)","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"},{"text":"?, ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/init(leadingtrivia:_:expression:_:trailingtrivia:)","title":"init(leadingTrivia:_:expression:_:trailingTrivia:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/SH":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PatternSyntaxProtocol":{"type":"topic","url":"\/documentation\/swiftsyntax\/patternsyntaxprotocol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntaxProtocol","title":"PatternSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PatternSyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Protocol to which all ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PatternSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","navigatorTitle":[{"text":"PatternSyntaxProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/SyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","kind":"article"},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax":{"abstract":[{"text":"A pattern that contains an ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExprSyntaxProtocol","isActive":true},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax","navigatorTitle":[{"text":"ExpressionPatternSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressionPatternSyntax"}],"type":"topic","role":"symbol","title":"ExpressionPatternSyntax","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionPatternSyntax/init(_:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionPatternSyntax\/init(_:)","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/swiftsyntax\/expressionpatternsyntax\/init(_:)","title":"init(_:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"kind":"symbol","title":"SyntaxHashable","role":"symbol","abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}],"url":"\/documentation\/swiftsyntax\/syntaxhashable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxHashable"}]}}}