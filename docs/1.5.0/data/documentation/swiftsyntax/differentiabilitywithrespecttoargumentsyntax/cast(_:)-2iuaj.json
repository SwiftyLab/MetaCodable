{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/cast(_:)-2iuaj"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/cast(_:)-2iuaj"]}],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V","role":"symbol","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":[{"unavailable":false,"message":"This cast will always succeed","deprecated":true,"beta":false}],"symbolKind":"method","title":"cast(_:)","roleHeading":"Instance Method","modules":[{"name":"SwiftSyntax"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current syntax node."}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"This method overloads the general ","type":"text"},{"type":"codeVoice","code":"cast"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"text":" ","type":"text"},{"type":"text","text":"informing the user that the cast will always succeed."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always succeed"}],"type":"paragraph"}],"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax/cast(_:)-2iuaj":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true,"type":"topic","title":"cast(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax\/cast(_:)-2iuaj","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax\/cast(_:)-2iuaj"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DifferentiabilityWithRespectToArgumentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DifferentiabilityWithRespectToArgumentSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/differentiabilitywithrespecttoargumentsyntax","title":"DifferentiabilityWithRespectToArgumentSyntax","navigatorTitle":[{"text":"DifferentiabilityWithRespectToArgumentSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A clause containing differentiability parameters."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"}}}