{"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax\/as(_:)-25wb1","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"type":"text","text":" node."}],"metadata":{"platforms":[{"beta":false,"message":"Use `Syntax.init` for upcasting.","unavailable":false,"deprecated":true}],"title":"as(_:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyAA0B0VSgAFmF::SYNTHESIZED::s:11SwiftSyntax016ClosureParameterB0V","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"role":"symbol","modules":[{"name":"SwiftSyntax"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax"]]},"variants":[{"paths":["\/documentation\/swiftsyntax\/closureparametersyntax\/as(_:)-25wb1"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"type":"text","text":" node created from the current syntax node, as the node can always be upcast to "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true},{"text":" node.","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"as","type":"codeVoice"},{"text":" method and is marked deprecated to produce a warning","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"informing the user the upcast should be performed using the base nodeâ€™s initializer."}]}],"type":"aside","style":"note","name":"Note"}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `Syntax.init` for upcasting."}],"type":"paragraph"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureParameterSyntax/as(_:)-25wb1":{"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax\/as(_:)-25wb1","url":"\/documentation\/swiftsyntax\/closureparametersyntax\/as(_:)-25wb1","title":"as(_:)","abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ClosureParameterSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosureParameterSyntax","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/closureparametersyntax","navigatorTitle":[{"text":"ClosureParameterSyntax","kind":"identifier"}],"title":"ClosureParameterSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ClosureParameterSyntax","abstract":[]}}}