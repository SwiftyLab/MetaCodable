{"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"metadata":{"title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection","role":"collectionGroup"},"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-3jvw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-518v0"],"title":"Initializers"},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedRange"]},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-3filq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-9scak","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-hs5o","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-16i6b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1aipi","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1kh1e","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1xozj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-23o4w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-2nn1b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-30tuq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-3oro2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-465ta","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4kvyj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4t36w","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-51ssx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9oxu2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9wwhd","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-5cjak","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-7zfgh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-8no2m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-1v7ip","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-2xb9l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-9fhuo","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-2uf8v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-427m5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-4ust","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6353z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-66uuk","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6fwca","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6mjt0","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-78ion","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7cr93","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7iy9z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7n2gt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-80m07","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8fy3a","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8zd7q","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/write(to:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/structure"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedLength":{"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmedlength","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"text":" ","type":"text"},{"text":"leading or trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedLength","title":"trimmedLength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/ancestorOrSelf(mapping:)":{"abstract":[{"text":"Returns this node or the first ancestor that satisfies ","type":"text"},{"type":"codeVoice","code":"condition"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"ancestorOrSelf","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mapping"},{"text":": (","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/ancestororself(mapping:)","title":"ancestorOrSelf(mapping:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/ancestorOrSelf(mapping:)","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/nextToken(viewMode:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/nexttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"nextToken(viewMode:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/totalByteRange":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalByteRange","type":"topic","title":"totalByteRange","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/totalbyterange","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea"}],"deprecated":true,"abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/byteSize":{"role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSize","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/bytesize","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"byteSize","kind":"symbol","type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedDescription":{"abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmeddescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"type":"topic","title":"trimmedDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/is(_:)-1v7ip":{"deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-1v7ip","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/is(_:)-1v7ip","title":"is(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedRange":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedRange","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmedrange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"title":"trimmedRange","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-1aipi":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1aipi","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1aipi"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-23o4w":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-23o4w","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-23o4w","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmed(matching:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed(matching:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"trimmed(matching:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","title":"debugDescription(includeTrivia:converter:mark:indentString:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasSequenceExpr":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasSequenceExpr","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/hassequenceexpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasSequenceExpr","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/id":{"abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"title":"id","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/id","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/id"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trailingTrivia":{"abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trailingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTrivia","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"type":"topic","title":"trailingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/previousToken":{"title":"previousToken","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/previoustoken","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"role":"symbol","deprecated":true,"type":"topic","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-8zd7q":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8zd7q","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-8zd7q","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/init(_:)-518v0":{"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/init(_:)-518v0","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-518v0","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Children"},{"kind":"text","text":">("},{"text":"Children","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/cast(_:)-7zfgh":{"role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-7zfgh","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/cast(_:)-7zfgh","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"title":"cast(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-465ta":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-465ta","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-465ta","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/token(at:)":{"title":"token(at:)","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/token(at:)","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasError":{"kind":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"title":"hasError","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasError","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/haserror","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/positionafterskippingleadingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"title":"positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/parent":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/parent","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/parent","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}],"type":"topic","title":"parent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-9oxu2":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9oxu2","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-9oxu2","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/firstToken":{"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/firsttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"firstToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/is(_:)-2xb9l":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-2xb9l","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/is(_:)-2xb9l","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"is(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}],"type":"topic","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/children(viewMode:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/children(viewMode:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/children(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"title":"children(viewMode:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A sequence over the children of this node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/leadingTrivia":{"abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/leadingtrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTrivia","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"type":"topic","title":"leadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-3oro2":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-3oro2","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-3oro2","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":"?"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-6mjt0":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6mjt0","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6mjt0","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/lastToken(viewMode:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken(viewMode:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/lasttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"title":"lastToken(viewMode:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmeddescription(matching:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedDescription(matching:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","title":"trimmedDescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/totalLength":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/totalLength","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/totallength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"title":"totalLength","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-4ust":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-4ust","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-4ust","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-8fy3a":{"title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8fy3a","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-8fy3a"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","role":"symbol","kind":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/startlocation(converter:afterleadingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-30tuq":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-30tuq","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-30tuq","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-66uuk":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-66uuk","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-66uuk","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/keyPathInParent":{"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/keypathinparent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/keyPathInParent","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"keyPathInParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-1kh1e":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1kh1e","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1kh1e","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-7cr93":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7cr93","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7cr93","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/root":{"role":"symbol","title":"root","type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/root","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/root","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/tokens(viewMode:)":{"title":"tokens(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/tokens(viewMode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/tokens(viewmode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/node(at:)":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/node(at:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"title":"node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/debugDescription":{"abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/debugdescription","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"debugDescription","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/debugDescription","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/syntaxTextBytes":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/syntaxtextbytes","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxTextBytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":"]","kind":"text"}],"title":"syntaxTextBytes"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-427m5":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-427m5","title":"isProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-427m5","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/contentLength":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/contentlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/contentLength","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"role":"symbol","deprecated":true,"title":"contentLength","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/range":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"range","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/range","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"title":"range","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/structure":{"title":"structure","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/structure","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/structure","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"kind":"text","text":": "},{"text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-16i6b":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-16i6b","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-16i6b","type":"topic","title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/endPositionBeforeTrailingTrivia":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/endpositionbeforetrailingtrivia","kind":"symbol","title":"endPositionBeforeTrailingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"role":"symbol","type":"topic","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/with(_:_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/with(_:_:)","title":"with(_:_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/with(_:_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/detached":{"title":"detached","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/detached","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detached","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/as(_:)-hs5o":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-hs5o","kind":"symbol","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference"},{"text":" node.","type":"text"}],"deprecated":true,"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/as(_:)-hs5o","type":"topic","title":"as(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-7iy9z":{"title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7iy9z","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7iy9z","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/write(to:)","kind":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/write(to:)","type":"topic","title":"write(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Target"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target"},{"text":")","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-2uf8v":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-2uf8v","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-2uf8v","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-2nn1b":{"title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-2nn1b","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-2nn1b","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/kind":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/kind","kind":"symbol","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/kind","type":"topic","title":"kind","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/nextToken":{"title":"nextToken","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/nexttoken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/nextToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmedByteRange":{"deprecated":true,"type":"topic","kind":"symbol","role":"symbol","title":"trimmedByteRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmedByteRange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmedbyterange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/init(_:)-3jvw":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/init(_:)-3jvw","kind":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/init(_:)-3jvw","type":"topic","title":"init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp"},{"kind":"text","text":"?)"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isImplicit":{"title":"isImplicit","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isimplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isImplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trimmed","kind":"symbol","abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trimmed","type":"topic","title":"trimmed","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/is(_:)-9fhuo":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/is(_:)-9fhuo","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/is(_:)-9fhuo","type":"topic","title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" node.","type":"text"}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/previoustoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/previousToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-4kvyj":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4kvyj","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-4kvyj","type":"topic","title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/index":{"title":"index","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"text":" collection.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/index","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/syntaxNodeType":{"title":"syntaxNodeType","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/syntaxnodetype","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":".Type","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/trailingTriviaLength":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/trailingtrivialength","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/trailingTriviaLength","type":"topic","title":"trailingTriviaLength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-7n2gt":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7n2gt","kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7n2gt","type":"topic","title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/description":{"abstract":[{"type":"text","text":"A source-accurate description of this node."}],"title":"description","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/description","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-51ssx":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-51ssx","role":"symbol","type":"topic","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-51ssx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/endPosition":{"type":"topic","kind":"symbol","title":"endPosition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/endposition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endPosition","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/cast(_:)-5cjak":{"abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"title":"cast(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/cast(_:)-5cjak","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-5cjak","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-6353z":{"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6353z","role":"symbol","type":"topic","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6353z"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"title":"endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasParent":{"abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"title":"hasParent","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/hasparent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasParent","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-1xozj":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1xozj","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1xozj","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/as(_:)-9scak":{"kind":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-9scak","role":"symbol","type":"topic","title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/as(_:)-9scak"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/firstToken(viewMode:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"title":"firstToken(viewMode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/firsttoken(viewmode:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-80m07":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-80m07","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-80m07","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax":{"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax","kind":"symbol","abstract":[],"title":"StringLiteralSegmentListSyntax","navigatorTitle":[{"kind":"identifier","text":"StringLiteralSegmentListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/byteSizeAfterTrimmingTrivia":{"kind":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","role":"symbol","type":"topic","deprecated":true,"title":"byteSizeAfterTrimmingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/bytesizeaftertrimmingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/as(_:)-3filq":{"deprecated":true,"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"title":"as(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/as(_:)-3filq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/as(_:)-3filq","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-9wwhd":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9wwhd","role":"symbol","type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-9wwhd"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/cast(_:)-8no2m":{"deprecated":true,"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"title":"cast(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/cast(_:)-8no2m","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/cast(_:)-8no2m","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/position":{"kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/position","role":"symbol","type":"topic","title":"position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasMaximumNestingLevelOverflow":{"abstract":[],"title":"hasMaximumNestingLevelOverflow","kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/hasmaximumnestingleveloverflow","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/asProtocol(_:)-4t36w":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4t36w","role":"symbol","type":"topic","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/asprotocol(_:)-4t36w"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/hasWarning":{"type":"topic","role":"symbol","title":"hasWarning","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/haswarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/hasWarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-78ion":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-78ion","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-78ion","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/lastToken":{"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/lasttoken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/lastToken","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","title":"lastToken","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/leadingTriviaLength":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/leadingTriviaLength","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/leadingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"title":"leadingTriviaLength","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/isProtocol(_:)-6fwca":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6fwca","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6fwca","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/detach()":{"abstract":[],"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/detach()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/detach()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"detach()","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/byteRange":{"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/byterange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/byteRange","title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"abstract":[],"deprecated":true,"role":"symbol","kind":"symbol"}}}