{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Element"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element"]}],"metadata":{"title":"StringLiteralSegmentListSyntax.Element","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"roleHeading":"Enumeration","modules":[{"name":"SwiftSyntax"}],"symbolKind":"enum","navigatorTitle":[{"text":"Element","kind":"identifier"}],"externalID":"s:11SwiftSyntax024StringLiteralSegmentListB0V7ElementO"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Sequence.Element","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"topicSections":[{"title":"Enumeration Cases","generated":true,"anchor":"Enumeration-Cases","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/expressionSegment(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/stringSegment(_:)"]},{"anchor":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/init(_:)-1fr9b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/init(_:)-4yqbl","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/init(_:)-6tho3"],"title":"Initializers","generated":true},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/as(_:)-26vu7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/as(_:)-9no6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/cast(_:)-10qtf","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/cast(_:)-3ooe","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/is(_:)-6og8l","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/is(_:)-73q7p"]},{"title":"Type Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/structure"],"generated":true,"anchor":"Type-Properties"},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/CustomReflectable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/Equatable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/Hashable-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/SyntaxChildChoices-Implementations","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/SyntaxProtocol-Implementations"],"title":"Default Implementations"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/SyntaxChildChoices-Implementations":{"abstract":[],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/syntaxchildchoices-implementations","title":"SyntaxChildChoices Implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/SyntaxChildChoices-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element":{"type":"topic","title":"StringLiteralSegmentListSyntax.Element","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Element"}],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element","abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element","navigatorTitle":[{"kind":"identifier","text":"Element"}]},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/s20TextOutputStreamableP":{"title":"Swift.TextOutputStreamable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s20TextOutputStreamableP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/expressionSegment(_:)":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/expressionsegment(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"expressionSegment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ExpressionSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"An interpolated expression inside a string literal.","type":"text"}],"title":"StringLiteralSegmentListSyntax.Element.expressionSegment(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/expressionSegment(_:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/SyntaxProtocol-Implementations":{"abstract":[],"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/SyntaxProtocol-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/init(_:)-4yqbl":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/init(_:)-4yqbl","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"text":"conversion is not possible.","type":"text"}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/init(_:)-4yqbl","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/Hashable-Implementations":{"title":"Hashable Implementations","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/hashable-implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/Hashable-Implementations"},"doc://com.SwiftyLab.HelperCoders/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringSegmentSyntax":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax","title":"StringSegmentSyntax","url":"\/documentation\/swiftsyntax\/stringsegmentsyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringSegmentSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"StringSegmentSyntax","kind":"identifier"}],"abstract":[{"text":"A literal segment inside a string segment.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/cast(_:)-3ooe":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/cast(_:)-3ooe","title":"cast(_:)","abstract":[{"type":"text","text":"Force-casts the current syntax node to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"StringSegmentSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V"},{"text":".Type) -> ","kind":"text"},{"text":"StringSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/cast(_:)-3ooe"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/init(_:)-6tho3":{"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StringSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/init(_:)-6tho3","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/init(_:)-6tho3"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/structure":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/structure","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"title":"structure","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/structure","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax":{"role":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax","kind":"symbol","abstract":[],"title":"StringLiteralSegmentListSyntax","navigatorTitle":[{"kind":"identifier","text":"StringLiteralSegmentListSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/init(_:)-1fr9b":{"kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V","text":"ExpressionSegmentSyntax"},{"text":")","kind":"text"}],"title":"init(_:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/init(_:)-1fr9b","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/init(_:)-1fr9b","type":"topic"},"doc://com.SwiftyLab.HelperCoders/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s17CustomReflectableP","title":"Swift.CustomReflectable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildChoices":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxChildChoices"}],"title":"SyntaxChildChoices","url":"\/documentation\/swiftsyntax\/syntaxchildchoices","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildChoices"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildChoices","abstract":[{"text":"Protocol for the enums nested inside ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"type":"text","text":" nodes that enumerate all the"},{"text":" ","type":"text"},{"text":"possible types a child node might have.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/cast(_:)-10qtf":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/cast(_:)-10qtf","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/cast(_:)-10qtf","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V","text":"ExpressionSegmentSyntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V","kind":"typeIdentifier","text":"ExpressionSegmentSyntax"}],"type":"topic","abstract":[{"text":"Force-casts the current syntax node to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax"},{"text":".","type":"text"}],"role":"symbol","title":"cast(_:)"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/stringSegment(_:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stringSegment","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StringSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/stringSegment(_:)","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/stringsegment(_:)","title":"StringLiteralSegmentListSyntax.Element.stringSegment(_:)","abstract":[{"type":"text","text":"A literal segment inside a string segment."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/as(_:)-26vu7":{"title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StringSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V","kind":"typeIdentifier","text":"StringSegmentSyntax"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/as(_:)-26vu7","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/as(_:)-26vu7"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/as(_:)-9no6":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/as(_:)-9no6","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/as(_:)-9no6","title":"as(_:)","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","type":"reference","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V","kind":"typeIdentifier","text":"ExpressionSegmentSyntax"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"ExpressionSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/is(_:)-6og8l":{"title":"is(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/is(_:)-6og8l","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/is(_:)-6og8l","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ExpressionSegmentSyntax","preciseIdentifier":"s:11SwiftSyntax017ExpressionSegmentB0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/ExpressionSegmentSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/ExpressionSegmentSyntax","navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"url":"\/documentation\/swiftsyntax\/expressionsegmentsyntax","title":"ExpressionSegmentSyntax","abstract":[{"type":"text","text":"An interpolated expression inside a string literal."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxHashable":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxHashable","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"kind":"symbol","title":"SyntaxHashable","role":"symbol","abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}],"url":"\/documentation\/swiftsyntax\/syntaxhashable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxHashable"}]},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/Equatable-Implementations":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/equatable-implementations","type":"topic","abstract":[],"title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/Equatable-Implementations","role":"collectionGroup"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/customreflectable-implementations","kind":"article","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/CustomReflectable-Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/StringLiteralSegmentListSyntax/Element/is(_:)-73q7p":{"url":"\/documentation\/swiftsyntax\/stringliteralsegmentlistsyntax\/element\/is(_:)-73q7p","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StringSegmentSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013StringSegmentB0V"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringSegmentSyntax"},{"type":"text","text":"."}],"title":"is(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/StringLiteralSegmentListSyntax\/Element\/is(_:)-73q7p","role":"symbol"}}}