{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntax\/primaryassociatedtypesyntax\/is(_:)-1hucc"]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always fail"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"false"},{"text":" since the leaf node cannot be cast to a different specified type.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"code":"is","type":"codeVoice"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always fail."}]}],"type":"aside"}]}],"metadata":{"symbolKind":"method","modules":[{"name":"SwiftSyntax"}],"platforms":[{"beta":false,"message":"This cast will always fail","deprecated":true,"unavailable":false}],"role":"symbol","title":"is(_:)","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF::SYNTHESIZED::s:11SwiftSyntax021PrimaryAssociatedTypeB0V","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrimaryAssociatedTypeSyntax"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrimaryAssociatedTypeSyntax\/is(_:)-1hucc"},"kind":"symbol","abstract":[{"type":"text","text":"Checks if the current leaf syntax node can be cast to a different specified type."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrimaryAssociatedTypeSyntax/is(_:)-1hucc":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrimaryAssociatedTypeSyntax\/is(_:)-1hucc","abstract":[{"type":"text","text":"Checks if the current leaf syntax node can be cast to a different specified type."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","preciseIdentifier":"s:11SwiftSyntax05_LeafB12NodeProtocolPAAE2isySbqd__mAA0bE0Rd__lF1SL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","title":"is(_:)","url":"\/documentation\/swiftsyntax\/primaryassociatedtypesyntax\/is(_:)-1hucc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxProtocol":{"title":"SyntaxProtocol","abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"type":"text","text":" "},{"text":"protocol to provide common functionality for all syntax nodes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxProtocol","role":"symbol","url":"\/documentation\/swiftsyntax\/syntaxprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxProtocol"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/PrimaryAssociatedTypeSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/PrimaryAssociatedTypeSyntax","type":"topic","title":"PrimaryAssociatedTypeSyntax","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PrimaryAssociatedTypeSyntax"}],"abstract":[],"url":"\/documentation\/swiftsyntax\/primaryassociatedtypesyntax","navigatorTitle":[{"text":"PrimaryAssociatedTypeSyntax","kind":"identifier"}]}}}