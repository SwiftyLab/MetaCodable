{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax"]]},"metadata":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","modules":[{"name":"SwiftSyntax"}],"roleHeading":"API Collection"},"kind":"article","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/init(_:)-3on0h"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedRange"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-1h67v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-2bt0b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3awqs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3e0r5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4g8de","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4y3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5anp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5oa15","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6hyif","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6r79k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6vsg6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-7etxr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9jy73","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9o24f","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-16056","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2fg13","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2ppcx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3g66x","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3nqqc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3ylyy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-43l8j","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4s2jm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4taqm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-5dhmc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-6ea8m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-9yrdb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-cvts","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-mimj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/write(to:)"],"generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/positionAfterSkippingLeadingTrivia":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/positionafterskippingleadingtrivia","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"positionAfterSkippingLeadingTrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"text":" ","type":"text"},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/positionAfterSkippingLeadingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/endPositionBeforeTrailingTrivia":{"title":"endPositionBeforeTrailingTrivia","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPositionBeforeTrailingTrivia","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/endpositionbeforetrailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedByteRange":{"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedByteRange","deprecated":true,"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmedbyterange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}],"type":"topic","title":"trimmedByteRange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/id":{"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/id","type":"topic","title":"id","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isImplicit":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isimplicit","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","deprecated":true,"type":"topic","title":"isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isImplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/syntaxNodeType":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/syntaxnodetype","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxNodeType","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"title":"syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/byteSizeAfterTrimmingTrivia":{"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","deprecated":true,"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/bytesizeaftertrimmingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","title":"byteSizeAfterTrimmingTrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/lastToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/lasttoken(viewmode:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","title":"lastToken(viewMode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/lastToken":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/lastToken","kind":"symbol","abstract":[],"deprecated":true,"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/lasttoken","type":"topic","title":"lastToken","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-4y3":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4y3","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-4y3","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-mimj":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-mimj","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-mimj","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedRange"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedRange","title":"trimmedRange","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmedrange","abstract":[{"text":"The range of this node excluding leading and trailing trivia.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/startLocation(converter:afterLeadingTrivia:)":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/startlocation(converter:afterleadingtrivia:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"role":"symbol","type":"topic","title":"startLocation(converter:afterLeadingTrivia:)","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-3nqqc":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3nqqc","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-3nqqc","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/init(_:)-3on0h":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/init(_:)-3on0h","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","type":"topic","title":"init(_:)","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/init(_:)-3on0h"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/syntaxTextBytes":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/syntaxTextBytes","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","title":"syntaxTextBytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-4taqm":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4taqm","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-4taqm","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-9o24f":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9o24f","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-9o24f","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":"?","kind":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedLength":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmedlength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"role":"symbol","type":"topic","title":"trimmedLength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/position":{"abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/position","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/position","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"type":"topic","title":"position"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/nexttoken","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"role":"symbol","deprecated":true,"type":"topic","title":"nextToken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-2bt0b":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-2bt0b","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":"?"}],"role":"symbol","title":"asProtocol(_:)","kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-2bt0b","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/contentLength":{"title":"contentLength","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/contentlength","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/contentLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-43l8j":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-43l8j","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-43l8j","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/keyPathInParent":{"role":"symbol","title":"keyPathInParent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/keyPathInParent","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/keypathinparent","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/leadingTrivia":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/leadingtrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"type":"topic","title":"leadingTrivia","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTrivia","kind":"symbol","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-3g66x":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3g66x","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-3g66x","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedDescription":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"kind":"symbol","title":"trimmedDescription","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmeddescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-5dhmc":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-5dhmc","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-5dhmc","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-4g8de":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-4g8de","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-4g8de"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-6ea8m":{"title":"isProtocol(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-6ea8m","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-6ea8m","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-1h67v":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-1h67v","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-1h67v","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/byteSize":{"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteSize","deprecated":true,"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/bytesize","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/leadingTriviaLength":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/leadingtrivialength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/leadingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-3e0r5":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-3e0r5","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3e0r5","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-3awqs":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-3awqs","title":"asProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-3awqs","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/firstToken":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/firsttoken","title":"firstToken","abstract":[],"type":"topic","role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"text":" ","type":"text"},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmedDescription(matching:)","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmeddescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"trimmedDescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/totalByteRange":{"kind":"symbol","type":"topic","deprecated":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalByteRange","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/totalbyterange","title":"totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-5oa15":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-5oa15","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5oa15"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax":{"title":"BooleanLiteralExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax","abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanLiteralExprSyntax"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/firstToken(viewMode:)":{"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/firstToken(viewMode:)","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/firsttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic","title":"firstToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-4s2jm":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-4s2jm","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-4s2jm","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-2ppcx":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-2ppcx","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","type":"topic","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2ppcx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-6hyif":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6hyif","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-6hyif","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/endPosition":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endPosition","title":"endPosition","type":"topic","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/endposition","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/write(to:)":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/write(to:)","title":"write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","kind":"typeIdentifier","text":"Target"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/write(to:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-9jy73":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-9jy73","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-9jy73"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-16056":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-16056","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-16056","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasWarning":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"hasWarning","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic"},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasWarning","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/haswarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-2fg13":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-2fg13","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-2fg13","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":".Protocol) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/previousToken":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/previoustoken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","deprecated":true,"type":"topic","title":"previousToken","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trailingTriviaLength":{"abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTriviaLength","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trailingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","title":"trailingTriviaLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/tokens(viewMode:)":{"abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/tokens(viewmode:)","role":"symbol","title":"tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/tokens(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/nextToken(viewMode:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/nexttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","title":"nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/nextToken(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-6vsg6":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6vsg6","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-6vsg6","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/endLocation(converter:afterTrailingTrivia:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/endlocation(converter:aftertrailingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"role":"symbol","type":"topic","title":"endLocation(converter:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-5anp":{"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-5anp","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":"?"}],"role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-5anp","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasError":{"type":"topic","kind":"symbol","title":"hasError","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasError","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/haserror","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-cvts":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-cvts","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-cvts","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/kind":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/kind","type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/kind","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}],"title":"kind","role":"symbol","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/token(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"type":"topic","role":"symbol","kind":"symbol","title":"token(at:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/token(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/token(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/with(_:_:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/with(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/with(_:_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-9yrdb":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-9yrdb","type":"topic","role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-9yrdb"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/parent":{"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/parent","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"type":"topic","title":"parent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/previousToken(viewMode:)":{"role":"symbol","title":"previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/previousToken(viewMode:)","type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/previoustoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/isProtocol(_:)-3ylyy":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/isprotocol(_:)-3ylyy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/isProtocol(_:)-3ylyy"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasSequenceExpr":{"abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasSequenceExpr","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/hassequenceexpr","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","title":"hasSequenceExpr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/ancestorOrSelf(mapping:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ancestorOrSelf","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"mapping"},{"text":": (","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/ancestororself(mapping:)","kind":"symbol","abstract":[{"text":"Returns this node or the first ancestor that satisfies ","type":"text"},{"type":"codeVoice","code":"condition"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/ancestorOrSelf(mapping:)","type":"topic","title":"ancestorOrSelf(mapping:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/children(viewMode:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/children(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"role":"symbol","type":"topic","title":"children(viewMode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/children(viewMode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-6r79k":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-6r79k","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-6r79k","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":"?","kind":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/node(at:)":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","title":"node(at:)","abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/node(at:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/byteRange":{"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/byterange","title":"byteRange","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/byteRange","abstract":[],"deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier","text":"ByteSourceRange"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indentString"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","kind":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmed(matching:)":{"abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed(matching:)","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/index":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"role":"symbol","deprecated":true,"type":"topic","title":"index","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"type":"text","text":" collection."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/index"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/detach()":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detach()","deprecated":true,"role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/detach()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasMaximumNestingLevelOverflow":{"type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/hasmaximumnestingleveloverflow","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasMaximumNestingLevelOverflow","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasMaximumNestingLevelOverflow"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/description":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/description","type":"topic","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"description","role":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/root":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/root","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"role":"symbol","type":"topic","title":"root","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/root"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trimmed","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"trimmed","kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/asProtocol(_:)-7etxr":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/asProtocol(_:)-7etxr","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/asprotocol(_:)-7etxr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":"?","kind":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/hasParent":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/hasparent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","title":"hasParent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/hasParent"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/detached":{"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/detached","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/detached","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/trailingTrivia":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/trailingTrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/trailingtrivia","title":"trailingTrivia","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/debugDescription":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/debugdescription","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","type":"topic","title":"debugDescription","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/debugDescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/totalLength":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"title":"totalLength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/totalLength","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/totallength","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax/range":{"abstract":[{"text":"The range of this node including leading and trailing trivia.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax\/range","role":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax\/range","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"range"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"range"}}}