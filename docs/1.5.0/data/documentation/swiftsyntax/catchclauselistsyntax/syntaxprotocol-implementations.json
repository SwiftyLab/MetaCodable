{"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-4jj5k","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-l3ak"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSize","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/contentLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/description","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detached","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPosition","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasError","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasSequenceExpr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasWarning","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/id","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/index","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isImplicit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/keyPathInParent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/kind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/parent","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/position","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/range","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/root","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxNodeType","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxTextBytes","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTrivia","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTriviaLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedByteRange","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedLength","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedRange"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/ancestorOrSelf(mapping:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-446kb","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-7ohbs","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-c2pg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-18hna","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-1el1m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-2a106","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-4hecw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-55ksr","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5c4mx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5tlwx","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-609wq","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-62w2p","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7fexg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7orfh","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8clbc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8nrys","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-9kva8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-3aap6","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-6b9d5","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-9skvt","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/children(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detach()","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-3knua","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-5cujp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-9lzw8","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-29k7t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2avdn","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2u66v","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-62xdc","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6jacv","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6vz4u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-717lg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-720j3","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7xwf1","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7z3dw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8dc4b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8vm2z","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-9beie","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-ceks","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/node(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/token(at:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/tokens(viewMode:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription(matching:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/with(_:_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/write(to:)"],"generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/structure"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"SwiftSyntax"}],"title":"SyntaxProtocol Implementations"},"sections":[],"kind":"article","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/leadingTriviaLength":{"abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/leadingtrivialength","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTriviaLength","title":"leadingTriviaLength","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/Syntax":{"navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Syntax"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/syntax","abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"type":"text","text":" "},{"text":"Each node has accessors for its known children, and allows efficient","type":"text"},{"type":"text","text":" "},{"type":"text","text":"iteration over the children through its "},{"code":"children","type":"codeVoice"},{"type":"text","text":" property."}],"title":"Syntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/byteSizeAfterTrimmingTrivia":{"title":"byteSizeAfterTrimmingTrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/bytesizeaftertrimmingtrivia","deprecated":true},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"kind":"symbol","role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"text":"includeTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trailingTrivia":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"title":"trailingTrivia","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTrivia","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trailingtrivia"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/as(_:)-c2pg":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-c2pg","title":"as(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/as(_:)-c2pg","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"type":"topic","role":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endLocation(converter:afterTrailingTrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/endPosition":{"title":"endPosition","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPosition","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/endposition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedByteRange":{"title":"trimmedByteRange","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedByteRange","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmedbyterange","type":"topic","role":"symbol","kind":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/node(at:)":{"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"node(at:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/node(at:)","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/lasttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmed":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmed","role":"symbol","title":"trimmed","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/tokens(viewMode:)":{"abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/byteSize":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteSize","type":"topic","deprecated":true,"abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/bytesize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"byteSize"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-55ksr":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":"?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-55ksr","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-55ksr"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/startLocation(converter:afterLeadingTrivia:)":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/startLocation(converter:afterLeadingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedDescription(matching:)":{"type":"topic","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"text":" ","type":"text"},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription(matching:)","title":"trimmedDescription(matching:)","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmeddescription(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-8vm2z":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8vm2z","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-8vm2z","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-9beie":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-9beie","title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-9beie"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/endPositionBeforeTrailingTrivia":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/endPositionBeforeTrailingTrivia","kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/endpositionbeforetrailingtrivia","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"title":"endPositionBeforeTrailingTrivia","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/range":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"range"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/range","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/range","abstract":[{"type":"text","text":"The range of this node including leading and trailing trivia."}],"title":"range"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasWarning":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasWarning","title":"hasWarning","kind":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/haswarning"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-6vz4u":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-6vz4u","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6vz4u","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/parent":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/parent","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/parent","type":"topic","role":"symbol","title":"parent","kind":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-1el1m":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-1el1m","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-1el1m","title":"asProtocol(_:)","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/is(_:)-5cujp":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"deprecated":true,"title":"is(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-5cujp","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/is(_:)-5cujp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxChildren":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxChildren"}],"title":"SyntaxChildren","type":"topic","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/syntaxchildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax"},{"text":" nodes of the given node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasMaximumNestingLevelOverflow","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/hasmaximumnestingleveloverflow","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"hasMaximumNestingLevelOverflow","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-ceks":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-ceks","type":"topic","kind":"symbol","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-ceks","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/lastToken":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/lasttoken","abstract":[],"title":"lastToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/lastToken"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasParent":{"type":"topic","title":"hasParent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasParent","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/hasparent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/nextToken(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"nextToken(viewMode:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken(viewMode:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/nexttoken(viewmode:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/init(_:)-l3ak":{"kind":"symbol","type":"topic","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Children","preciseIdentifier":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc8ChildrenL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-l3ak","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/init(_:)-l3ak"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trailingTriviaLength":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trailingtrivialength","title":"trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"role":"symbol","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trailingTriviaLength","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/cast(_:)-3aap6":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/cast(_:)-3aap6","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"title":"cast(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4castyqd__qd__mAaBRd__lF1SL_qd__mfp","text":"S"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-3aap6","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-2avdn":{"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-2avdn","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2avdn","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/is(_:)-3knua":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-3knua","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"text":" node.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","deprecated":true,"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/is(_:)-3knua","kind":"symbol","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/nextToken":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/nexttoken","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/nextToken","role":"symbol","title":"nextToken","deprecated":true,"kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmed(matching:)":{"title":"trimmed(matching:)","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmed(matching:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmed(matching:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-717lg":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-717lg","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-717lg","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-8dc4b":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-8dc4b","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-8dc4b","title":"isProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/with(_:_:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/with(_:_:)","kind":"symbol","title":"with(_:_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE4withyxs15WritableKeyPathCyxqd__G_qd__tlF1TL_qd__mfp","text":"T"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-62xdc":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-62xdc","type":"topic","title":"isProtocol(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-62xdc","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-18hna":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-18hna","role":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-18hna"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/is(_:)-9lzw8":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/is(_:)-9lzw8","kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/is(_:)-9lzw8","type":"topic","title":"is(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/cast(_:)-6b9d5":{"deprecated":true,"title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-6b9d5","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/cast(_:)-6b9d5"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/leadingTrivia":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/leadingtrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"title":"leadingTrivia","type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/leadingTrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/structure":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/structure","title":"structure","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/write(to:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/write(to:)","kind":"symbol","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/write(to:)","type":"topic","title":"write(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE5write2toyqd__z_ts16TextOutputStreamRd__lF6TargetL_qd__mfp","text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/detach()":{"type":"topic","role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/detach()","title":"detach()","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detach()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/firstToken":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/firsttoken","abstract":[],"kind":"symbol","role":"symbol","deprecated":true,"title":"firstToken","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-7xwf1":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7xwf1","title":"isProtocol(_:)","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-7xwf1","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-7fexg":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-7fexg","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":".Protocol) -> ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":"?"}],"type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7fexg","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/ancestorOrSelf(mapping:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/ancestorOrSelf(mapping:)","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/ancestororself(mapping:)","abstract":[{"type":"text","text":"Returns this node or the first ancestor that satisfies "},{"type":"codeVoice","code":"condition"},{"text":".","type":"text"}],"title":"ancestorOrSelf(mapping:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ancestorOrSelf","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"mapping","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","text":"T"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE14ancestorOrSelf7mappingqd__SgAfA0B0VXE_tlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/byteRange":{"role":"symbol","type":"topic","deprecated":true,"title":"byteRange","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/byteRange","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/byterange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"kind":"text","text":": "},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/root":{"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/root","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/root","title":"root","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasSequenceExpr":{"abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"title":"hasSequenceExpr","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasSequenceExpr","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/hassequenceexpr","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/firstToken(viewMode:)":{"abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"type":"topic","role":"symbol","title":"firstToken(viewMode:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/firsttoken(viewmode:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/debugDescription":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/debugDescription","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/debugdescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"debugDescription","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-4hecw":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-4hecw","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-4hecw","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/totalByteRange":{"type":"topic","kind":"symbol","title":"totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalByteRange","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/totalbyterange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangea","text":"ByteSourceRange","kind":"typeIdentifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-29k7t":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-29k7t","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-29k7t","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-7z3dw":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-7z3dw","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-7z3dw","kind":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/positionAfterSkippingLeadingTrivia":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/positionafterskippingleadingtrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"role":"symbol","title":"positionAfterSkippingLeadingTrivia","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/positionAfterSkippingLeadingTrivia","kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/syntaxNodeType":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/syntaxnodetype","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"title":"syntaxNodeType","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxNodeType"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/token(at:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/token(at:)","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/token(at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"token(at:)","role":"symbol","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/id":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/id","title":"id","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CatchClauseListSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CatchClauseListSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax","abstract":[],"title":"CatchClauseListSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/totalLength":{"title":"totalLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/totallength","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/totalLength","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/position":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/position","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"title":"position","role":"symbol","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/contentLength":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/contentlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/contentLength","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic","role":"symbol","title":"contentLength","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/hasError":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/haserror","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/hasError","title":"hasError"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-8nrys":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","title":"asProtocol(_:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-8nrys","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8nrys","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":"?","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/kind":{"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/kind","kind":"symbol","title":"kind","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax":{"url":"\/documentation\/swiftsyntax","type":"topic","abstract":[],"role":"collection","title":"SwiftSyntax","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-609wq":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-609wq","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-609wq","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/as(_:)-7ohbs":{"abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF1SL_qd__mfp","text":"S"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-7ohbs","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/as(_:)-7ohbs","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-5tlwx":{"type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-5tlwx","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5tlwx","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-2a106":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-2a106","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-2a106","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-2u66v":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-2u66v","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-2u66v"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-720j3":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-720j3","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-720j3","kind":"symbol","title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-62w2p":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-62w2p","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-62w2p","type":"topic","role":"symbol","kind":"symbol","title":"asProtocol(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedRange":{"abstract":[{"type":"text","text":"The range of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedRange","title":"trimmedRange","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmedrange"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/children(viewMode:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/children(viewMode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren"}],"title":"children(viewMode:)","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/children(viewmode:)","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/cast(_:)-9skvt":{"title":"cast(_:)","kind":"symbol","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/cast(_:)-9skvt","deprecated":true,"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/cast(_:)-9skvt","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/previousToken(viewMode:)":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/previoustoken(viewmode:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken(viewMode:)","role":"symbol","title":"previousToken(viewMode:)","kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/syntaxTextBytes":{"kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/syntaxtextbytes","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/syntaxTextBytes","role":"symbol","title":"syntaxTextBytes","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isImplicit":{"deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isImplicit","title":"isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isimplicit"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/description":{"abstract":[{"type":"text","text":"A source-accurate description of this node."}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/description","title":"description","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/description","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedLength":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmedlength","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedLength","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"kind":"symbol","role":"symbol","title":"trimmedLength"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-5c4mx":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-5c4mx","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-5c4mx"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/init(_:)-4jj5k":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/init(_:)-4jj5k","type":"topic","title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc1SL_qd__mfp","text":"S"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/init(_:)-4jj5k"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-7orfh":{"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-7orfh","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":".Protocol) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-7orfh"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/detached":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"kind":"symbol","type":"topic","title":"detached","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/detached","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/detached"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/keyPathInParent":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/keypathinparent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/keyPathInParent","title":"keyPathInParent","type":"topic","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/trimmedDescription":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/trimmedDescription","role":"symbol","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"trimmedDescription","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/trimmeddescription"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-8clbc":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-8clbc","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":".Protocol) -> "},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-8clbc"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/TokenDiagnostic":{"url":"\/documentation\/swiftsyntax\/tokendiagnostic","navigatorTitle":[{"text":"TokenDiagnostic","kind":"identifier"}],"abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"surrounding structure, this defines the type of the error."},{"text":" ","type":"text"},{"code":"byteOffset","type":"codeVoice"},{"text":" specifies at which offset the error occurred.","type":"text"}],"kind":"symbol","role":"symbol","title":"TokenDiagnostic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/TokenDiagnostic","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenDiagnostic"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/isProtocol(_:)-6jacv":{"title":"isProtocol(_:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/isprotocol(_:)-6jacv","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":".Protocol) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/isProtocol(_:)-6jacv"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/as(_:)-446kb":{"title":"as(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/as(_:)-446kb","type":"topic","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/as(_:)-446kb","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/asProtocol(_:)-9kva8":{"url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/asprotocol(_:)-9kva8","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":".Protocol) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/asProtocol(_:)-9kva8","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SyntaxKind/functionDecl":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxKind\/functionDecl","abstract":[],"url":"\/documentation\/swiftsyntax\/syntaxkind\/functiondecl","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"role":"symbol","title":"SyntaxKind.functionDecl"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/previousToken":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/previousToken","deprecated":true,"title":"previousToken","type":"topic","kind":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/previoustoken","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CatchClauseListSyntax/index":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CatchClauseListSyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SyntaxChildren"},{"text":" collection.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntax\/catchclauselistsyntax\/index","deprecated":true,"title":"index","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}]}}}