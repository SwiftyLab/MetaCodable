{"seeAlsoSections":[{"title":"Strategies","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DecodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/EncodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy"],"generated":true,"anchor":"Strategies"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"externalID":"s:11MetaCodable7CodedAtyys12StaticStringVd_tcfm","platforms":[{"unavailable":false,"introducedAt":"5.9","beta":false,"deprecated":false,"name":"Swift"}],"symbolKind":"macro","role":"symbol","modules":[{"name":"MetaCodable"}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}],"roleHeading":"Macro","title":"CodedAt(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/codedat(_:)"]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAt"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"path"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":"...)","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path value located at.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"If single argument provided for ","type":"text"},{"type":"codeVoice","code":"path"},{"type":"text","text":", then that argument is"},{"text":" ","type":"text"},{"text":"chosen as ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":". i.e for JSON:"}],"type":"paragraph"},{"code":["{ \"key\": \"value\" }"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"text","text":"the field can declare custom key:"}]},{"syntax":"swift","type":"codeListing","code":["@CodedAt(\"key\")","let field: String"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If multiple arguments provided, then field is decoded\/encoded"},{"text":" ","type":"text"},{"text":"nested by all the arguments as ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":". i.e for JSON:","type":"text"}]},{"type":"codeListing","syntax":"json","code":["{ \"deeply\": { \"nested\": { \"key\": \"value\" } } }"]},{"type":"paragraph","inlineContent":[{"text":"the field can declare custom key:","type":"text"}]},{"code":["@CodedAt(\"deeply\", \"nested\", \"key\")","let field: String"],"type":"codeListing","syntax":"swift"}]},{"content":[{"inlineContent":[{"text":"If no arguments provided, then field needs to be directly decoded from","type":"text"},{"type":"text","text":" "},{"text":"and encoded to parent ","type":"text"},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" respectively rather"},{"type":"text","text":" "},{"type":"text","text":"than at a "},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"decoder","type":"codeVoice"},{"type":"text","text":" instance in parent type "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" implementation’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"init(from:)"},{"text":" and ","type":"text"},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" instance in parent type "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" "},{"type":"text","text":"implementation’s "},{"code":"encode(to:)","type":"codeVoice"},{"type":"text","text":" method is directly passed to field type’s"},{"type":"text","text":" "},{"code":"init(from:)","type":"codeVoice"},{"type":"text","text":" and "},{"code":"encode(to:)","type":"codeVoice"},{"type":"text","text":" method respectively."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using this some core "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" types can be reused across multiple"},{"text":" ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations. i.e. for different vehicle types in JSON:","type":"text"}]},{"syntax":"json","code":["[","  {","    \"id\": 5,","    \"name\": \"Maruti Suzuki Dzire\",","    \"type\": \"Sedan\",","    \"brand\": \"Maruti\"","  },","  {","    \"id\": 105,","    \"name\": \"Vande Bharat Express\",","    \"start\": \"Delhi\",","    \"destination\": \"Bhopal\"","  }","]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"core "},{"type":"codeVoice","code":"Vehicle"},{"type":"text","text":" model with common properties can be used with"},{"text":" ","type":"text"},{"type":"text","text":"specialized "},{"type":"codeVoice","code":"Car"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Train"},{"text":" models:","type":"text"}]},{"syntax":"swift","code":["@Codable","struct Vehicle {","    let id: Int","    let name: String","}","","@Codable","struct Car {","    @CodedAt","    let base: Vehicle","    let type: String","    let brand: String","}","","@Codable","struct Train {","    @CodedAt","    let base: Vehicle","    let start: String","    let destination: String","}"],"type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For enums\/protocols, this attribute can be used to support internally"},{"text":" ","type":"text"},{"type":"text","text":"tagged data. The "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided represents the path"},{"type":"text","text":" "},{"type":"text","text":"where value identifying each case\/conforming type respectively is"},{"type":"text","text":" "},{"text":"decoded\/encoded. By default, this value is decoded\/encoded as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"String"},{"type":"text","text":" unless different type specified with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()"},{"text":" and","type":"text"},{"type":"text","text":" "},{"text":"compared with value for each enum-case identifier or conformed type","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},{"type":"text","text":". i.e. for enum:"}]},{"syntax":"swift","code":["@Codable","@CodedAt(\"type\")","enum Command {","    case load(key: String)","    case store(key: String, value: Int)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"or protocol:"}]},{"type":"codeListing","syntax":"swift","code":["@Codable","@CodedAt(\"type\")","@CodedAs<Int>","protocol Command {","    var key: String { get }","}","","@Codable","struct Load: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"load\" }","    let key: String","}","","@Codable","struct Store: Command, DynamicCodable {","    static var identifier: DynamicCodableIdentifier<String> { \"store\" }","    let key: String","    let value: Int","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"the encoded JSON for internally tagged data will be of following variations:"}]},{"code":["{ \"key\": \"MyKey\", \"type\": \"load\" }"],"type":"codeListing","syntax":"json"},{"type":"codeListing","syntax":"json","code":["{ \"key\": \"MyKey\", \"value\": 42, \"type\": \"store\" }"]}]}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"text":" ","type":"text"},{"text":"is a variable declaration. ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","isActive":true},{"type":"text","text":" macro uses this macro"},{"text":" ","type":"text"},{"text":"when generating final implementations.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note"},{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"type":"text","text":"When applied to fields, the field type must confirm to"},{"type":"text","text":" "},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"references":{"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided with field name as final","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"CodedIn(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"title":"ContentAt(_:_:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContentAt"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/UnTagged()":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnTagged"},{"text":"()","kind":"text"}],"abstract":[{"text":"Indicates the cases of enum lack distinct identifier.","type":"text"}],"url":"\/documentation\/metacodable\/untagged()","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","type":"topic","title":"UnTagged()","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodableCommonStrategy":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy","title":"CodableCommonStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CodableCommonStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A marker type used to represent a common type conversion strategy for the "},{"type":"codeVoice","code":"@Codable"},{"type":"text","text":" macro."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableCommonStrategy","kind":"identifier"}],"url":"\/documentation\/metacodable\/codablecommonstrategy","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codingkeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field names\/associated value label will be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the provided case format."}],"title":"CodingKeys(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/Inherits(decodable:encodable:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","title":"Inherits(decodable:encodable:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates whether super class conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" or not."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Inherits","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"decodable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"encodable","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/metacodable\/inherits(decodable:encodable:)","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable/identifier":{"title":"identifier","role":"symbol","type":"topic","abstract":[{"text":"The identifier value(s) for this type.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11MetaCodable07DynamicB10IdentifierO","kind":"typeIdentifier","text":"DynamicCodableIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11MetaCodable07DynamicB0P15IdentifierValueQa","text":"IdentifierValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"required":true,"kind":"symbol","url":"\/documentation\/metacodable\/dynamiccodable\/identifier","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable\/identifier"},"doc://MetaCodable/documentation/MetaCodable/DecodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DecodedAt(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded to a specific"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided, different from the encoding path.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"DecodedAt","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"title":"DecodedAt(_:)","role":"symbol","url":"\/documentation\/metacodable\/decodedat(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"title":"CodedAt(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/EncodedAt(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodedAt"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Indicates the field needs to be encoded to a specific"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided, different from the decoding path.","type":"text"}],"url":"\/documentation\/metacodable\/encodedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/EncodedAt(_:)","type":"topic","title":"EncodedAt(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/metacodable\/codedas(_:_:)","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"type":"text","text":" "},{"type":"text","text":"additional variable "},{"type":"codeVoice","code":"CodingKey"},{"text":"s.","type":"text"}],"title":"CodedAs(_:_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"title":"Codable(commonStrategies:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"type":"text","text":" "},{"text":"declarations.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)"},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedas()","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"title":"CodedAs()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable":{"abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"topic","title":"MetaCodable","kind":"symbol"}}}