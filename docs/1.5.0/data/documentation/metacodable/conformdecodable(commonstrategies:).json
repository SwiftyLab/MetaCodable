{"abstract":[{"text":"Generate ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"text":" ","type":"text"},{"text":"declarations. This macro is named ","type":"text"},{"code":"ConformDecodable","type":"codeVoice"},{"type":"text","text":" to avoid conflicts"},{"type":"text","text":" "},{"type":"text","text":"with the standard library "},{"type":"codeVoice","code":"Decodable"},{"text":" protocol.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformDecodable(commonStrategies:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformEncodable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"],"generated":true,"title":"Macros","anchor":"Macros"}],"kind":"symbol","variants":[{"paths":["\/documentation\/metacodable\/conformdecodable(commonstrategies:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","platforms":[{"unavailable":false,"introducedAt":"5.9","beta":false,"deprecated":false,"name":"Swift"}],"externalID":"s:11MetaCodable16ConformDecodable16commonStrategiesySayAA0B14CommonStrategyVG_tcfm","symbolKind":"macro","title":"ConformDecodable(commonStrategies:)","modules":[{"name":"MetaCodable"}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConformDecodable"},{"kind":"text","text":"("},{"text":"commonStrategies","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier","text":"CodableCommonStrategy"},{"kind":"text","text":"])"}],"roleHeading":"Macro"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(extension, conformances: ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"text":", names: named(CodingKeys), named(DecodingKeys), named(init(from:))) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, conformances: ","kind":"text"},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"kind":"text","text":", names: named(CodingKeys), named(init(from:))) "},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConformDecodable"},{"text":"(","kind":"text"},{"text":"commonStrategies","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV","kind":"typeIdentifier","text":"CodableCommonStrategy","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy"},{"kind":"text","text":"] = [])"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"An array of CodableCommonStrategy values specifying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type conversion strategies to be automatically applied to all properties of the type."}],"type":"paragraph"}],"name":"commonStrategies"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":1,"anchor":"Usage","text":"Usage"},{"inlineContent":[{"type":"text","text":"By default the field name is used as "},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field value during","type":"text"},{"type":"text","text":" "},{"text":"decoding. Following customization can be done on fields to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provide custom decode behavior:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference","isActive":true},{"type":"text","text":" providing single string value as custom coding key."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" providing multiple string value as nested coding"},{"type":"text","text":" "},{"text":"key path.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","isActive":true},{"text":" with one or more string value as nested container","type":"text"},{"type":"text","text":" "},{"type":"text","text":"coding key path, with variable name as coding key."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"type":"text","text":" with no path arguments, when type is composition"},{"text":" ","type":"text"},{"type":"text","text":"of multiple "},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"},{"text":" to provide custom decoding behavior for","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types or implement decoding for non-"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","type":"reference","isActive":true},{"type":"text","text":" to provide default value when decoding fails."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)"},{"text":" to provide custom values for enum cases.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" to provide enum-case\/protocol identifier tag path.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","isActive":true},{"text":" to provide enum-case\/protocol identifier tag type.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)"},{"type":"text","text":" to provided enum-case\/protocol content path."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"reference","isActive":true},{"type":"text","text":" to ignore specific"},{"text":" ","type":"text"},{"type":"text","text":"properties\/cases\/types from decoding."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","type":"reference","isActive":true},{"text":" to work with different case style ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":"s.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","type":"reference"},{"type":"text","text":" to ignore decoding"},{"text":" ","type":"text"},{"type":"text","text":"all initialized properties\/case associated variables."}]}]}]},{"text":"Effect","level":1,"type":"heading","anchor":"Effect"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro composes extension macro expansion for "},{"code":"Decodable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"conformance of type:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Extension macro expansion, to confirm to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" protocol"},{"text":" ","type":"text"},{"type":"text","text":"if the type doesnâ€™t already conform to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extension macro expansion, to generate custom "},{"type":"codeVoice","code":"CodingKey"},{"text":" type for","type":"text"},{"text":" ","type":"text"},{"text":"the attached declaration named ","type":"text"},{"type":"codeVoice","code":"CodingKeys"},{"type":"text","text":" and use this type for"},{"type":"text","text":" "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"init(from:)"},{"type":"text","text":" method."}]}]},{"content":[{"inlineContent":[{"text":"If attached declaration already conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" this macro expansion"},{"text":" ","type":"text"},{"text":"is skipped.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"text":"The attached declaration must be of a ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"or "},{"code":"actor","type":"codeVoice"},{"type":"text","text":" type. "},{"overridingTitle":"See the limitations for this macro","isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","overridingTitleInlineContent":[{"type":"text","text":"See the limitations for this macro"}]},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"references":{"doc://MetaCodable/documentation/MetaCodable/Limitations":{"abstract":[{"type":"text","text":"All the usage limitations for "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"reference"},{"text":".","type":"text"}],"title":"Limitations","kind":"article","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","url":"\/documentation\/metacodable\/limitations","type":"topic","role":"article"},"doc://MetaCodable/documentation/MetaCodable":{"abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"topic","title":"MetaCodable","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodableCommonStrategy":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy","title":"CodableCommonStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CodableCommonStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A marker type used to represent a common type conversion strategy for the "},{"type":"codeVoice","code":"@Codable"},{"type":"text","text":" macro."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableCommonStrategy","kind":"identifier"}],"url":"\/documentation\/metacodable\/codablecommonstrategy","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"title":"CodedAt(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"title":"ContentAt(_:_:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContentAt"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedas()","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"title":"CodedAs()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"title":"Codable(commonStrategies:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"type":"text","text":" "},{"text":"declarations.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)"},"doc://MetaCodable/documentation/MetaCodable/MemberInit()":{"kind":"symbol","url":"\/documentation\/metacodable\/memberinit()","abstract":[{"text":"Generate memberwise initializer(s) of ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":" and "},{"code":"actor","type":"codeVoice"},{"text":" types","type":"text"},{"type":"text","text":" "},{"text":"by leveraging custom attributes provided on variable declarations.","type":"text"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberInit","kind":"identifier"},{"text":"()","kind":"text"}],"title":"MemberInit()"},"doc://MetaCodable/documentation/MetaCodable/ConformEncodable(commonStrategies:)":{"kind":"symbol","url":"\/documentation\/metacodable\/conformencodable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"text":"declarations. This macro is named ","type":"text"},{"type":"codeVoice","code":"ConformEncodable"},{"text":" to avoid conflicts","type":"text"},{"text":" ","type":"text"},{"text":"with the standard library ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" protocol."}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformEncodable(commonStrategies:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ConformEncodable","kind":"identifier"},{"kind":"text","text":"("},{"text":"commonStrategies","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"kind":"text","text":"])"}],"title":"ConformEncodable(commonStrategies:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","title":"IgnoreDecoding()","url":"\/documentation\/metacodable\/ignoredecoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codingkeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field names\/associated value label will be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the provided case format."}],"title":"CodingKeys(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"title":"CodedBy(_:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodedBy","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field or enum\/protocol identifier needs to be decoded and"},{"text":" ","type":"text"},{"type":"text","text":"encoded by the provided "},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"text":"()","kind":"text"}],"kind":"symbol","title":"IgnoreCodingInitialized()","url":"\/documentation\/metacodable\/ignorecodinginitialized()","type":"topic","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"type":"text","text":" "},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/ConformDecodable(commonStrategies:)":{"url":"\/documentation\/metacodable\/conformdecodable(commonstrategies:)","abstract":[{"type":"text","text":"Generate "},{"code":"Decodable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"text":" ","type":"text"},{"type":"text","text":"declarations. This macro is named "},{"type":"codeVoice","code":"ConformDecodable"},{"text":" to avoid conflicts","type":"text"},{"text":" ","type":"text"},{"text":"with the standard library ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" protocol."}],"role":"symbol","title":"ConformDecodable(commonStrategies:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformDecodable(commonStrategies:)","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConformDecodable"},{"text":"(","kind":"text"},{"text":"commonStrategies","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodableCommonStrategy","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","url":"\/documentation\/metacodable\/default(_:)","title":"Default(_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when decoding fails and"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided with field name as final","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"CodedIn(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/metacodable\/codedas(_:_:)","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"type":"text","text":" "},{"type":"text","text":"additional variable "},{"type":"codeVoice","code":"CodingKey"},{"text":"s.","type":"text"}],"title":"CodedAs(_:_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","role":"symbol"}}}