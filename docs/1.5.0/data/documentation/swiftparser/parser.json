{"sections":[],"metadata":{"roleHeading":"Structure","symbolKind":"struct","externalID":"s:11SwiftParser0B0V","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol","title":"Parser","modules":[{"name":"SwiftParser"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftparser\/parser"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A parser for the Swift programming language."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser"},{"type":"text","text":" implements a recursive descent parser that produces a SwiftSyntax"},{"type":"text","text":" "},{"text":"tree. Its implementation is divided among a set of files named for the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"class of syntax nodes they parse. For example, declaration parsing happens"},{"type":"text","text":" "},{"type":"text","text":"in "},{"code":"Declaration.swift","type":"codeVoice"},{"type":"text","text":", and expression parsing happens in "},{"type":"codeVoice","code":"Expression.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Parsing Swift","level":1,"anchor":"Parsing-Swift","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Broadly, the parser has a one-to-one correspondence between syntax nodes","type":"text"},{"type":"text","text":" "},{"text":"and parsing functions. If a function consumes input from the token stream,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it must be marked "},{"code":"mutating","type":"codeVoice"},{"text":" to do so. Thus, parsing functions that only","type":"text"},{"type":"text","text":" "},{"type":"text","text":"serve e.g. to read the current token and disambiguate the parse, or recover"},{"type":"text","text":" "},{"text":"from a bad parse should be left ","type":"text"},{"type":"codeVoice","code":"nonmutating"},{"text":" to indicate that they do not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"consume tokens."}]},{"inlineContent":[{"text":"Token consumption is generally either unconditional via ","type":"text"},{"type":"codeVoice","code":"TokenConsumer.consumeAnyToken()"},{"text":" ","type":"text"},{"type":"text","text":"or conditional via a combination of "},{"type":"codeVoice","code":"TokenConsumer\/at(_:where:)"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"TokenConsumer.eat(_:)"},{"type":"text","text":". When parsing conditionally, "},{"code":"at","type":"codeVoice"},{"type":"text","text":" returns a"},{"type":"text","text":" "},{"type":"text","text":"handle that is passed to "},{"type":"codeVoice","code":"eat"},{"text":". This ensures that any structure that is","type":"text"},{"type":"text","text":" "},{"text":"checked for is actually parsed by the parser at that position. If the parser","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"detects any unexpected structure, an assertion is raised. To perform"},{"type":"text","text":" "},{"text":"conditional consumption and validation in one step, use ","type":"text"},{"code":"consume(if:)","type":"codeVoice"},{"type":"text","text":" for"},{"text":" ","type":"text"},{"type":"text","text":"one kind of token, or "},{"type":"codeVoice","code":"consume(ifAny:)"},{"text":" to consume many kinds of tokens.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"It can also be useful to expect the presence of certain structural elements.","type":"text"},{"type":"text","text":" "},{"text":"For example, a function that parses the content of code items might expect","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an opening brace, its items, and also expect a closing brace:"}]},{"type":"codeListing","syntax":null,"code":["let lbrace = self.eat(.leftBrace)","\/*  *\/","let rbrace = self.expect(.rightBrace)"]},{"inlineContent":[{"text":"Unlike ","type":"text"},{"code":"TokenConsumer.eat(_:)","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Parser.expect(_:remapping:)"},{"type":"text","text":" returns"},{"text":" ","type":"text"},{"text":"a ","type":"text"},{"type":"codeVoice","code":"missing"},{"text":" token of the given kind. This allows the tree to remain","type":"text"},{"type":"text","text":" "},{"type":"text","text":"well-formed even when the input text is not, all without affecting"},{"text":" ","type":"text"},{"type":"text","text":"source fidelity."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For compound syntactic structures, parsing loops are often required. The general"},{"type":"text","text":" "},{"text":"structure of a source-preserving loop is","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var keepGoing: RawTokenSyntax? = nil","repeat {","  \/\/ Parse an element","  let element = self.parseElement()","","  \/\/ Consume the delimiter","  keepGoing = self.consume(if: .delimiter)","  elements.append(RawElementSyntax(element, ..., keepGoing))","} while keepGoing != nil"]},{"inlineContent":[{"type":"text","text":"Such parsing loops are kept enclosed in "},{"type":"codeVoice","code":"do"},{"type":"text","text":" blocks to avoid having their"},{"text":" ","type":"text"},{"type":"text","text":"state leak into surrounding scopes."}],"type":"paragraph"},{"level":1,"type":"heading","text":"Lookahead","anchor":"Lookahead"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser provides at most one token worth of lookahead via"},{"type":"text","text":" "},{"type":"codeVoice","code":"peek()"},{"type":"text","text":". If more tokens are required to disambiguate a parse, a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Parser.Lookahead"},{"type":"text","text":" instance should be constructed instead with"},{"type":"text","text":" "},{"code":"Parser.lookahead()","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","text":"Source Fidelity","level":1,"anchor":"Source-Fidelity"},{"type":"paragraph","inlineContent":[{"text":"The syntax trees produced by this parser are required to faithfully","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent the input source text. As such, there are no utilities that allow"},{"text":" ","type":"text"},{"type":"text","text":"for skipping tokens in the parser. In addition, consumed tokens must become"},{"text":" ","type":"text"},{"type":"text","text":"part of at  least one syntax node."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The exception to this is parser lookahead, which is allowed to skip as many"},{"text":" ","type":"text"},{"type":"text","text":"tokens as needed to disambiguate a parse. However, because lookahead"},{"type":"text","text":" "},{"type":"text","text":"operates on a copy of the lexical stream, no input tokens are lost.."}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser"]]},"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:swiftVersion:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/lookaheadRanges"],"anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:maximumNestingLevel:swiftVersion:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-30y1m","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-8hjcw","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-2gtt2","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-dj0z"],"anchor":"Type-Methods","generated":true,"title":"Type Methods"},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/SwiftVersion"],"generated":true,"anchor":"Enumerations","title":"Enumerations"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/LookaheadRanges":{"title":"LookaheadRanges","url":"\/documentation\/swiftparser\/lookaheadranges","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LookaheadRanges"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LookaheadRanges"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/LookaheadRanges","abstract":[{"type":"text","text":"Record the lookahead ranges for syntax nodes."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:parseTransition:)-2gtt2":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parseIncrementally"},{"kind":"text","text":"("},{"text":"source","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"parseTransition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IncrementalParseTransition","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"text":"?) -> (tree","kind":"text"},{"kind":"text","text":": "},{"text":"SourceFileSyntax","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V","kind":"typeIdentifier"},{"text":", lookaheadRanges","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser15LookaheadRangesV","text":"LookaheadRanges"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:parsetransition:)-2gtt2","abstract":[{"type":"text","text":"Parse the source code in the given string as Swift source file with support"},{"type":"text","text":" "},{"type":"text","text":"for incremental parsing."}],"kind":"symbol","role":"symbol","deprecated":true,"title":"parseIncrementally(source:parseTransition:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-2gtt2","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parse(source:maximumNestingLevel:swiftVersion:)":{"title":"parse(source:maximumNestingLevel:swiftVersion:)","url":"\/documentation\/swiftparser\/parser\/parse(source:maximumnestinglevel:swiftversion:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parse"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">, "},{"text":"maximumNestingLevel","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"text":"swiftVersion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SwiftVersion","preciseIdentifier":"s:11SwiftParser0B0V0A7VersionO","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V","text":"SourceFileSyntax","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:maximumNestingLevel:swiftVersion:)","abstract":[{"type":"text","text":"Parse the source code in the given buffer as Swift source file. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"Parser.init"},{"type":"text","text":" for more details."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:parseTransition:)-dj0z":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parseIncrementally"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"parseTransition"},{"kind":"text","text":": "},{"text":"IncrementalParseTransition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"IncrementalParseResult","preciseIdentifier":"s:11SwiftParser22IncrementalParseResultV"}],"url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:parsetransition:)-dj0z","abstract":[{"type":"text","text":"Parse the source code in the given string as Swift source file with support"},{"type":"text","text":" "},{"type":"text","text":"for incremental parsing."}],"kind":"symbol","role":"symbol","title":"parseIncrementally(source:parseTransition:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:parseTransition:)-dj0z","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/lookaheadRanges":{"title":"lookaheadRanges","url":"\/documentation\/swiftparser\/parser\/lookaheadranges","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookaheadRanges"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser15LookaheadRangesV","text":"LookaheadRanges"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/lookaheadRanges","abstract":[{"type":"text","text":"See comments in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/LookaheadRanges"}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"maximumNestingLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"parseTransition"},{"text":": ","kind":"text"},{"text":"IncrementalParseTransition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"arena"},{"kind":"text","text":": "},{"text":"ParsingSyntaxArena","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax07ParsingB5ArenaC"},{"kind":"text","text":"?, "},{"text":"swiftVersion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftParser0B0V0A7VersionO","text":"SwiftVersion","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/swiftparser\/parser\/init(_:maximumnestinglevel:parsetransition:arena:swiftversion:)","abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser","isActive":true},{"type":"text","text":" from the given input buffer."}],"kind":"symbol","role":"symbol","title":"init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:arena:swiftVersion:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser","kind":"symbol","title":"SwiftParser","type":"topic","url":"\/documentation\/swiftparser","abstract":[],"role":"collection"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/init(_:maximumNestingLevel:parseTransition:swiftVersion:)":{"title":"init(_:maximumNestingLevel:parseTransition:swiftVersion:)","url":"\/documentation\/swiftparser\/parser\/init(_:maximumnestinglevel:parsetransition:swiftversion:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maximumNestingLevel"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"text":"parseTransition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IncrementalParseTransition","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"swiftVersion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser0B0V0A7VersionO","text":"SwiftVersion"},{"kind":"text","text":"?)"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/init(_:maximumNestingLevel:parseTransition:swiftVersion:)","abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser","isActive":true},{"type":"text","text":" from the given string."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/SwiftVersion":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwiftVersion"}],"url":"\/documentation\/swiftparser\/parser\/swiftversion","abstract":[{"type":"text","text":"A Swift language version."}],"navigatorTitle":[{"kind":"identifier","text":"SwiftVersion"}],"kind":"symbol","role":"symbol","title":"Parser.SwiftVersion","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/SwiftVersion","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:maximumNestingLevel:parseTransition:)-30y1m":{"title":"parseIncrementally(source:maximumNestingLevel:parseTransition:)","url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:maximumnestinglevel:parsetransition:)-30y1m","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parseIncrementally"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"kind":"text","text":"<"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">, "},{"text":"maximumNestingLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"parseTransition","kind":"externalParam"},{"kind":"text","text":": "},{"text":"IncrementalParseTransition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC"},{"kind":"text","text":"?) -> (tree"},{"kind":"text","text":": "},{"text":"SourceFileSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V"},{"text":", lookaheadRanges","kind":"text"},{"kind":"text","text":": "},{"text":"LookaheadRanges","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftParser15LookaheadRangesV"},{"text":")","kind":"text"}],"type":"topic","deprecated":true,"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-30y1m","abstract":[{"type":"text","text":"Parse the source code in the given buffer as Swift source file with support"},{"type":"text","text":" "},{"type":"text","text":"for incremental parsing."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parseIncrementally(source:maximumNestingLevel:parseTransition:)-8hjcw":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parseIncrementally","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":">, ","kind":"text"},{"text":"maximumNestingLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"parseTransition"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftParser26IncrementalParseTransitionC","text":"IncrementalParseTransition","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"IncrementalParseResult","preciseIdentifier":"s:11SwiftParser22IncrementalParseResultV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftparser\/parser\/parseincrementally(source:maximumnestinglevel:parsetransition:)-8hjcw","abstract":[{"type":"text","text":"Parse the source code in the given buffer as Swift source file with support"},{"type":"text","text":" "},{"type":"text","text":"for incremental parsing."}],"kind":"symbol","role":"symbol","title":"parseIncrementally(source:maximumNestingLevel:parseTransition:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parseIncrementally(source:maximumNestingLevel:parseTransition:)-8hjcw","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser/parse(source:)":{"title":"parse(source:)","url":"\/documentation\/swiftparser\/parser\/parse(source:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"kind":"text","text":"("},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceFileSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax010SourceFileB0V"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser\/parse(source:)","abstract":[{"type":"text","text":"Parse the source code in the given string as Swift source file. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"Parser.init"},{"type":"text","text":" for more details."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftParser/Parser":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftparser\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftParser\/Parser","abstract":[{"text":"A parser for the Swift programming language.","type":"text"}]}}}