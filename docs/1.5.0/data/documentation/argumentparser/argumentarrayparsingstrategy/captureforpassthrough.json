{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"captureForPassthrough","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy"}],"roleHeading":"Type Property","externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV21captureForPassthroughACvpZ","modules":[{"name":"ArgumentParser"}],"symbolKind":"property","role":"symbol","title":"captureForPassthrough"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"captureForPassthrough","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"captureForPassthrough"},{"text":" parsing strategy if you need to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"capture a userâ€™s input to manually pass it unchanged to another command."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"When you use this parsing strategy, the parser stops parsing flags and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"options as soon as it encounters a positional argument or an unrecognized"},{"text":" ","type":"text"},{"text":"flag, and captures all remaining inputs in the array argument.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the "},{"code":"Example","type":"codeVoice"},{"type":"text","text":" command defined below has an "},{"code":"words","type":"codeVoice"},{"text":" array that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uses the "},{"code":"captureForPassthrough","type":"codeVoice"},{"type":"text","text":" parsing strategy:"}]},{"type":"codeListing","syntax":null,"code":["@main","struct Example: ParsableCommand {","    @Flag var verbose = false","","    @Argument(parsing: .captureForPassthrough)","    var words: [String] = []","","    func run() {","        print(words.joined(separator: \"\\n\"))","    }","}"]},{"inlineContent":[{"type":"text","text":"Any values after the first unrecognized input are captured in the "},{"type":"codeVoice","code":"words"},{"type":"text","text":" "},{"text":"array.","type":"text"}],"type":"paragraph"},{"code":["$ example --verbose one two --other","one","two","--other","$ example one two --verbose","one","two","--verbose"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"With the "},{"code":"captureForPassthrough","type":"codeVoice"},{"type":"text","text":" parsing strategy, the "},{"type":"codeVoice","code":"--"},{"type":"text","text":" terminator"},{"type":"text","text":" "},{"type":"text","text":"is included in the captured values."}],"type":"paragraph"},{"syntax":null,"code":["$ example --verbose one two -- --other","one","two","--","--other"],"type":"codeListing"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This parsing strategy can be surprising for users, particularly"},{"type":"text","text":" "},{"type":"text","text":"when combined with options and flags. Prefer "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","isActive":true},{"text":" or","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","type":"reference"},{"type":"text","text":" whenever possible, since users can always terminate"},{"type":"text","text":" "},{"type":"text","text":"options and flags with the "},{"code":"--","type":"codeVoice"},{"type":"text","text":" terminator. With the "},{"type":"codeVoice","code":"remaining"},{"text":" ","type":"text"},{"text":"parsing strategy, the input ","type":"text"},{"type":"codeVoice","code":"--verbose -- one two --other"},{"text":" would have","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the same result as the first example above."}]}],"name":"Note","style":"note"}]}],"variants":[{"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough"},"abstract":[{"type":"text","text":"Parse all remaining inputs after parsing any known options or flags,"},{"text":" ","type":"text"},{"text":"including dash-prefixed inputs and the ","type":"text"},{"code":"--","type":"codeVoice"},{"text":" terminator.","type":"text"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/captureForPassthrough":{"title":"captureForPassthrough","abstract":[{"type":"text","text":"Parse all remaining inputs after parsing any known options or flags,"},{"text":" ","type":"text"},{"type":"text","text":"including dash-prefixed inputs and the "},{"type":"codeVoice","code":"--"},{"text":" terminator.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"captureForPassthrough"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining","title":"remaining","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","abstract":[{"text":"Parse only unprefixed values from the command-line input, ignoring","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any inputs that have a dash prefix; this is the default strategy."}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"title":"ArgumentArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"text":" ","type":"text"},{"text":"into an array.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","role":"symbol","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/allUnrecognized":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allUnrecognized"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized","title":"allUnrecognized","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","abstract":[{"text":"After parsing, capture all unrecognized inputs in this argument array.","type":"text"}]}}}