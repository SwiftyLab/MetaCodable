{"metadata":{"title":"unconditional","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unconditional","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SingleValueParsingStrategy","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV"}],"role":"symbol","roleHeading":"Type Property","symbolKind":"property","externalID":"s:14ArgumentParser26SingleValueParsingStrategyV13unconditionalACvpZ","modules":[{"name":"ArgumentParser"}]},"variants":[{"paths":["\/documentation\/argumentparser\/singlevalueparsingstrategy\/unconditional"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Parse the next input, even if it could be interpreted as an option or"},{"type":"text","text":" "},{"type":"text","text":"flag."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unconditional","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SingleValueParsingStrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"For inputs such as ","type":"text"},{"code":"--foo --bar baz","type":"codeVoice"},{"type":"text","text":", if "},{"code":".unconditional","type":"codeVoice"},{"type":"text","text":" is used for "},{"type":"codeVoice","code":"foo"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"this would read "},{"type":"codeVoice","code":"--bar"},{"text":" as the value for ","type":"text"},{"type":"codeVoice","code":"foo"},{"type":"text","text":" and would use "},{"type":"codeVoice","code":"baz"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the next positional argument."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This allows reading negative numeric values or capturing flags to be"},{"type":"text","text":" "},{"type":"text","text":"passed through to another program since the leading hyphen is normally"},{"type":"text","text":" "},{"type":"text","text":"interpreted as the start of another option."}],"type":"paragraph"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This is usually "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" what users would expect. Use with caution."}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy":{"role":"symbol","title":"SingleValueParsingStrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"code":"@Option","type":"codeVoice"},{"type":"text","text":" arguments."}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueParsingStrategy","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/unconditional":{"title":"unconditional","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/unconditional","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unconditional"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy","kind":"typeIdentifier"}],"abstract":[{"text":"Parse the next input, even if it could be interpreted as an option or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"flag."}]}}}