{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/singlevalueparsingstrategy"]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"type":"codeVoice","code":"@Option"},{"text":" arguments.","type":"text"}],"topicSections":[{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/next","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional"],"anchor":"Type-Properties"},{"generated":true,"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/Equatable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:14ArgumentParser26SingleValueParsingStrategyV","navigatorTitle":[{"text":"SingleValueParsingStrategy","kind":"identifier"}],"title":"SingleValueParsingStrategy","symbolKind":"struct","role":"symbol","modules":[{"name":"ArgumentParser"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"],"type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueParsingStrategy"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"style":"note","name":"See Also","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","type":"reference","isActive":true}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/Equatable-Implementations","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/equatable-implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[]},"doc://com.SwiftyLab.HelperCoders/SH":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.SwiftyLab.HelperCoders/SQ":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"title":"ArrayParsingStrategy","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayParsingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/arrayparsingstrategy"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/unconditional":{"title":"unconditional","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/unconditional","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unconditional"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy","kind":"typeIdentifier"}],"abstract":[{"text":"Parse the next input, even if it could be interpreted as an option or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"flag."}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy":{"role":"symbol","title":"SingleValueParsingStrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"code":"@Option","type":"codeVoice"},{"type":"text","text":" arguments."}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueParsingStrategy","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/next":{"title":"next","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/next","abstract":[{"type":"text","text":"Parse the input after the option and expect it to be a value."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/next"},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy/scanningForValue":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Parse the next input, as long as that input canâ€™t be interpreted as"},{"text":" ","type":"text"},{"text":"an option or flag.","type":"text"}],"title":"scanningForValue","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scanningForValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/scanningforvalue","kind":"symbol"}}}