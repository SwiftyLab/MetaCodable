{"variants":[{"paths":["\/documentation\/argumentparser\/flag"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-38n7u","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-5fggj","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:exclusivity:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:help:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/wrappedValue"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/CustomStringConvertible-Implementations"],"title":"Default Implementations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser"]]},"sections":[],"metadata":{"modules":[{"name":"ArgumentParser"}],"externalID":"s:14ArgumentParser4FlagV","roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Flag"}],"role":"symbol","title":"Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Flag"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"code":"@Flag","type":"codeVoice"},{"type":"text","text":" wrapper to define a property of your custom type as a"},{"type":"text","text":" "},{"type":"text","text":"command-line flag. A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"flag"}]},{"type":"text","text":" is a dash-prefixed label that can be provided on"},{"type":"text","text":" "},{"type":"text","text":"the command line, such as "},{"type":"codeVoice","code":"-d"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"--debug"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"For example, the following program declares a flag that lets a user indicate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that seconds should be included when printing the time."}],"type":"paragraph"},{"code":["@main","struct Time: ParsableCommand {","    @Flag var includeSeconds = false","","    mutating func run() {","        if includeSeconds {","            print(Date.now.formatted(.dateTime.hour().minute().second()))","        } else {","            print(Date.now.formatted(.dateTime.hour().minute()))","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"code":"includeSeconds","type":"codeVoice"},{"type":"text","text":" has a default value of "},{"code":"false","type":"codeVoice"},{"text":", but becomes ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"--include-seconds"},{"type":"text","text":" is provided on the command line."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["$ time","11:09 AM","$ time --include-seconds","11:09:15 AM"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A flag can have a value that is a "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":", an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":", or any "},{"code":"EnumerableFlag","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"type. When using an "},{"code":"EnumerableFlag","type":"codeVoice"},{"type":"text","text":" type as a flag, the individual cases"},{"text":" ","type":"text"},{"text":"form the flags that are used on the command line.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["@main","struct Math: ParsableCommand {","    enum Operation: EnumerableFlag {","        case add","        case multiply","    }","","    @Flag var operation: Operation","","    mutating func run() {","        print(\"Time to \\(operation)!\")","    }","}"]},{"inlineContent":[{"type":"text","text":"Instead of using the name of the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" property as the flag in this"},{"type":"text","text":" "},{"type":"text","text":"case, the two cases of the "},{"type":"codeVoice","code":"Operation"},{"text":" enumeration become valid flags.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" property is neither optional nor given a default value, so"},{"text":" ","type":"text"},{"type":"text","text":"one of the two flags is required."}],"type":"paragraph"},{"code":["$ math --add","Time to add!","$ math","Error: Missing one of: '--add', '--multiply'"],"type":"codeListing","syntax":null}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"relationshipsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/s8CopyableP","doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","doc:\/\/com.SwiftyLab.HelperCoders\/Se","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(help:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(help:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"role":"symbol","abstract":[{"text":"Creates an array property with no default value that gets its values from the presence of zero or more flags, where the allowed flags are defined by an ","type":"text"},{"type":"codeVoice","code":"EnumerableFlag"},{"type":"text","text":" type."}],"kind":"symbol","title":"init(help:)","url":"\/documentation\/argumentparser\/flag\/init(help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:exclusivity:help:)":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser4FlagVA2A010EnumerableC0RzlE5Valuexmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"EnumerableFlag"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:exclusivity:help:)","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:exclusivity:help:)","abstract":[{"type":"text","text":"Creates a property with a default value provided by standard Swift default value syntax that gets its value from the presence of a flag."}],"title":"init(wrappedValue:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"title":"init(name:inversion:exclusivity:help:)","abstract":[{"type":"text","text":"Creates a Boolean property that reads its value from the presence of"},{"text":" ","type":"text"},{"text":"one or more inverted flags.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","type":"topic","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"title":"init(wrappedValue:name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/wrappedValue":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser4FlagV5Valuexmfp"}],"kind":"symbol","title":"wrappedValue","abstract":[{"text":"The value presented by this property wrapper.","type":"text"}],"role":"symbol","url":"\/documentation\/argumentparser\/flag\/wrappedvalue"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:name:help:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:help:)","title":"init(wrappedValue:name:help:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:help:)","type":"topic","abstract":[{"text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of a flag.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/CustomStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/CustomStringConvertible-Implementations","url":"\/documentation\/argumentparser\/flag\/customstringconvertible-implementations","abstract":[],"title":"CustomStringConvertible Implementations"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(exclusivity:help:)-38n7u":{"url":"\/documentation\/argumentparser\/flag\/init(exclusivity:help:)-38n7u","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","title":"init(exclusivity:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-38n7u","kind":"symbol","abstract":[{"type":"text","text":"Creates a property that gets its value from the presence of a flag,"},{"text":" ","type":"text"},{"type":"text","text":"where the allowed flags are defined by an "},{"type":"codeVoice","code":"EnumerableFlag"},{"text":" type.","type":"text"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"kind":"text","text":"?)"}],"kind":"symbol","title":"init(name:inversion:exclusivity:help:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"},"doc://com.SwiftyLab.HelperCoders/s8CopyableP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:help:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:help:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser4FlagV12wrappedValue4helpACySayqd__GGAF_AA0A4HelpVSgtcAFRszAA010EnumerableC0Rd__lufc7ElementL_qd__mfp","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"kind":"symbol","title":"init(wrappedValue:help:)","abstract":[{"text":"Creates an array property that gets its values from the presence of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"zero or more flags, where the allowed flags are defined by an"},{"type":"text","text":" "},{"type":"codeVoice","code":"EnumerableFlag"},{"type":"text","text":" type."}],"role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"url":"\/documentation\/argumentparser\/flag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"type":"topic","title":"Flag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"navigatorTitle":[{"text":"Flag","kind":"identifier"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(exclusivity:help:)-5fggj":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"EnumerableFlag","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(exclusivity:help:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(exclusivity:help:)-5fggj","abstract":[{"type":"text","text":"Creates a property with no default value that gets its value from the presence of a flag."}],"type":"topic","url":"\/documentation\/argumentparser\/flag\/init(exclusivity:help:)-5fggj","kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/Se":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:help:)":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:help:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"kind":"symbol","title":"init(name:help:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"Creates an integer property that gets its value from the number of times"},{"text":" ","type":"text"},{"type":"text","text":"a flag appears."}],"role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:help:)"}}}