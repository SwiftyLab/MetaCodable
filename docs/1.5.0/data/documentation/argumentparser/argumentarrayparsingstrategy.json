{"abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"type":"text","text":" "},{"text":"into an array.","type":"text"}],"topicSections":[{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/unconditionalRemaining"],"title":"Type Properties"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/Equatable-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy"]}],"metadata":{"roleHeading":"Structure","symbolKind":"struct","externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"title":"ArgumentArrayParsingStrategy","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/SQ","doc:\/\/com.SwiftyLab.HelperCoders\/SH","doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"title":"ArgumentArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"text":" ","type":"text"},{"text":"into an array.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","role":"symbol","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/unconditionalRemaining":{"abstract":[],"title":"unconditionalRemaining","deprecated":true,"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/unconditionalRemaining","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unconditionalRemaining"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/unconditionalremaining"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/postTerminator":{"kind":"symbol","role":"symbol","abstract":[{"text":"Before parsing arguments, capture all inputs that follow the ","type":"text"},{"type":"codeVoice","code":"--"},{"type":"text","text":" "},{"type":"text","text":"terminator in this argument array."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"postTerminator","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","title":"postTerminator","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/postterminator"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SQ"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/captureForPassthrough":{"title":"captureForPassthrough","abstract":[{"type":"text","text":"Parse all remaining inputs after parsing any known options or flags,"},{"text":" ","type":"text"},{"type":"text","text":"including dash-prefixed inputs and the "},{"type":"codeVoice","code":"--"},{"text":" terminator.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"captureForPassthrough"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining","title":"remaining","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","abstract":[{"text":"Parse only unprefixed values from the command-line input, ignoring","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any inputs that have a dash prefix; this is the default strategy."}]},"doc://com.SwiftyLab.HelperCoders/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/s8SendableP"},"doc://com.SwiftyLab.HelperCoders/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/SH"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/allUnrecognized":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allUnrecognized"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized","title":"allUnrecognized","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","abstract":[{"text":"After parsing, capture all unrecognized inputs in this argument array.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy/Equatable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/equatable-implementations"}}}