{"metadata":{"externalID":"s:14ArgumentParser20ArrayParsingStrategyV24unconditionalSingleValueACvpZ","symbolKind":"property","roleHeading":"Type Property","role":"symbol","modules":[{"name":"ArgumentParser"}],"title":"unconditionalSingleValue","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unconditionalSingleValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"}]},"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/unconditionalSingleValue","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Parse the value immediately after the option while allowing repeating options, joining multiple into an array."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unconditionalSingleValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is identical to "},{"code":".singleValue","type":"codeVoice"},{"text":" except that the value will be read","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the input immediately after the option, even if it could be interpreted as an option."}]},{"type":"paragraph","inlineContent":[{"text":"For example, for a parsable type with a property defined as","type":"text"},{"type":"text","text":" "},{"code":"@Option(parsing: .unconditionalSingleValue) var read: [String]","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"the input ","type":"text"},{"type":"codeVoice","code":"--read foo --read bar"},{"text":" would result in the array","type":"text"},{"type":"text","text":" "},{"code":"[\"foo\", \"bar\"]","type":"codeVoice"},{"text":" â€“ just as it would have been the case for ","type":"text"},{"type":"codeVoice","code":".singleValue"},{"type":"text","text":"."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"However, the input ","type":"text"},{"code":"--read --name Foo Bar --read baz","type":"codeVoice"},{"text":" would result in","type":"text"},{"type":"text","text":" "},{"code":"read","type":"codeVoice"},{"type":"text","text":" being set to the array "},{"code":"[\"--name\", \"baz\"]","type":"codeVoice"},{"type":"text","text":". This is usually "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" what users"},{"text":" ","type":"text"},{"text":"would expect. Use with caution.","type":"text"}]}],"style":"note","name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/unconditionalsinglevalue"]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"title":"ArrayParsingStrategy","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayParsingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/arrayparsingstrategy"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy/unconditionalSingleValue":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unconditionalSingleValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/unconditionalSingleValue","title":"unconditionalSingleValue","url":"\/documentation\/argumentparser\/arrayparsingstrategy\/unconditionalsinglevalue","abstract":[{"type":"text","text":"Parse the value immediately after the option while allowing repeating options, joining multiple into an array."}],"type":"topic","role":"symbol","kind":"symbol"}}}