{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remaining"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","text":"ArrayParsingStrategy","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"code":".remaining","type":"codeVoice"},{"type":"text","text":" can be used for capturing pass-through flags. For example, for"},{"text":" ","type":"text"},{"text":"a parsable type defined as","type":"text"},{"text":" ","type":"text"},{"code":"@Option(parsing: .remaining) var passthrough: [String]","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["$ cmd --passthrough --foo 1 --bar 2 -xvf","------------","options.passthrough == [\"--foo\", \"1\", \"--bar\", \"2\", \"-xvf\"]"],"type":"codeListing","syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"This will read all inputs following the option without attempting to do any parsing. This is","type":"text"},{"type":"text","text":" "},{"text":"usually ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" what users would expect. Use with caution."}]}],"style":"note","name":"Note","type":"aside"},{"inlineContent":[{"type":"text","text":"Consider using a trailing "},{"type":"codeVoice","code":"@Argument"},{"type":"text","text":" instead and letting users explicitly turn off parsing"},{"type":"text","text":" "},{"type":"text","text":"through the terminator "},{"code":"--","type":"codeVoice"},{"type":"text","text":". That is the more common approach. For example:"}],"type":"paragraph"},{"type":"codeListing","code":["struct Options: ParsableArguments {","    @Option var title: String","    @Argument var remainder: [String]","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would parse the input "},{"type":"codeVoice","code":"--title Foo -- Bar --baz"},{"type":"text","text":" such that the "},{"type":"codeVoice","code":"remainder"},{"text":" ","type":"text"},{"type":"text","text":"would hold the value "},{"type":"codeVoice","code":"[\"Bar\", \"--baz\"]"},{"text":".","type":"text"}]}]}],"metadata":{"symbolKind":"property","role":"symbol","title":"remaining","externalID":"s:14ArgumentParser20ArrayParsingStrategyV9remainingACvpZ","roleHeading":"Type Property","modules":[{"name":"ArgumentParser"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remaining"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","kind":"typeIdentifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/remaining"},"kind":"symbol","abstract":[{"text":"Parse all remaining arguments into an array.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"variants":[{"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/remaining"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"title":"ArrayParsingStrategy","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayParsingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/arrayparsingstrategy"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy/remaining":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remaining","kind":"identifier"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy\/remaining","role":"symbol","url":"\/documentation\/argumentparser\/arrayparsingstrategy\/remaining","abstract":[{"type":"text","text":"Parse all remaining arguments into an array."}],"title":"remaining"}}}