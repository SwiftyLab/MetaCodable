{"kind":"symbol","abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg"},"metadata":{"title":"init(name:inversion:exclusivity:help:)","extendedModule":"ArgumentParser","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"roleHeading":"Initializer","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}]},"externalID":"s:14ArgumentParser4FlagVAASbRszlE4name9inversion11exclusivity4helpACySbGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","symbolKind":"init","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"text":" = .long, ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":" = .chooseLast, "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","kind":"typeIdentifier"},{"text":"? = nil)","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"name","content":[{"inlineContent":[{"text":"A specification for what names are allowed for this flag.","type":"text"}],"type":"paragraph"}]},{"name":"inversion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for converting this flagâ€™s name into an on\/off pair."}]}]},{"name":"exclusivity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior to use when an on\/off pair of flags is specified."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Information about how to use this flag."}],"type":"paragraph"}],"name":"help"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Use this initializer to create a Boolean flag with an on\/off pair."},{"type":"text","text":" "},{"type":"text","text":"With the following declaration, for example, the user can specify either "},{"code":"--use-https","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"--no-use-https"},{"type":"text","text":" to set the "},{"type":"codeVoice","code":"useHTTPS"},{"type":"text","text":" flag to "},{"code":"true","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", respectively.","type":"text"}],"type":"paragraph"},{"code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"kind":"text","text":"?)"}],"kind":"symbol","title":"init(name:inversion:exclusivity:help:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagExclusivity","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flagexclusivity","abstract":[{"text":"The options for treating enumeration-based flags as exclusive.","type":"text"}],"navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"FlagExclusivity","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"type":"topic","abstract":[{"text":"Help information for a command-line argument.","type":"text"}],"title":"ArgumentHelp","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","title":"FlagInversion","type":"topic","abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"type":"codeVoice","code":"true"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flaginversion"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"NameSpecification","kind":"identifier"}],"url":"\/documentation\/argumentparser\/namespecification","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"text":"label.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"kind":"symbol","role":"symbol","title":"NameSpecification","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"url":"\/documentation\/argumentparser\/flag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"type":"topic","title":"Flag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"navigatorTitle":[{"text":"Flag","kind":"identifier"}],"role":"symbol"}}}