{"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","text":"NameSpecification"},{"kind":"text","text":" = .long, "},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity","kind":"typeIdentifier"},{"text":" = .chooseLast, ","kind":"text"},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp"},{"text":"? = nil)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A default value to use for this property, provided","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implicitly by the compiler during property wrapper initialization."}],"type":"paragraph"}],"name":"wrappedValue"},{"content":[{"inlineContent":[{"type":"text","text":"A specification for what names are allowed for this flag."}],"type":"paragraph"}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for converting this flagâ€™s name into an on\/off pair."}]}],"name":"inversion"},{"name":"exclusivity","content":[{"inlineContent":[{"type":"text","text":"The behavior to use when an on\/off pair of flags is specified."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Information about how to use this flag.","type":"text"}],"type":"paragraph"}],"name":"help"}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this initializer to create a Boolean flag with an on\/off pair.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"With the following declaration, for example, the user can specify either "},{"code":"--use-https","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"--no-use-https"},{"type":"text","text":" to set the "},{"type":"codeVoice","code":"useHTTPS"},{"type":"text","text":" flag to "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":", respectively."}]},{"type":"codeListing","syntax":"swift","code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool = true"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag"]]},"metadata":{"role":"symbol","extendedModule":"ArgumentParser","roleHeading":"Initializer","modules":[{"name":"ArgumentParser"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(wrappedValue:name:inversion:exclusivity:help:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"kind":"text","text":"?)"}],"externalID":"s:14ArgumentParser4FlagVAASbRszlE12wrappedValue4name9inversion11exclusivity4helpACySbGSb_AA17NameSpecificationVAA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags.","type":"text"}],"sections":[],"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"url":"\/documentation\/argumentparser\/flag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"type":"topic","title":"Flag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"navigatorTitle":[{"text":"Flag","kind":"identifier"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"NameSpecification","kind":"identifier"}],"url":"\/documentation\/argumentparser\/namespecification","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"text":"label.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"kind":"symbol","role":"symbol","title":"NameSpecification","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","title":"FlagInversion","type":"topic","abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"type":"codeVoice","code":"true"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flaginversion"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagExclusivity","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flagexclusivity","abstract":[{"text":"The options for treating enumeration-based flags as exclusive.","type":"text"}],"navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"FlagExclusivity","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"title":"init(wrappedValue:name:inversion:exclusivity:help:)"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"type":"topic","abstract":[{"text":"Help information for a command-line argument.","type":"text"}],"title":"ArgumentHelp","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}]}}}