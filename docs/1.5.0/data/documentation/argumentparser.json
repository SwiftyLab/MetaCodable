{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser"]}],"sections":[],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","interfaceLanguage":"swift"},"topicSections":[{"title":"Protocols","anchor":"Protocols","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncMainProtocol","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncParsableCommand","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExpressibleByArgument","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableArguments","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableCommand"],"generated":true},{"title":"Structures","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Argument","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentVisibility","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CleanExit","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandConfiguration","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandGroup","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionKind","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionShell","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExitCode","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Option","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/OptionGroup","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ValidationError"],"anchor":"Structures","generated":true},{"anchor":"Extended-Modules","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Swift"],"title":"Extended Modules","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"modules":[{"name":"ArgumentParser"}],"symbolKind":"module","role":"collection","roleHeading":"Framework","title":"ArgumentParser","externalID":"ArgumentParser"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CleanExit":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CleanExit"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/cleanexit","navigatorTitle":[{"text":"CleanExit","kind":"identifier"}],"title":"CleanExit","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CleanExit","abstract":[{"type":"text","text":"An error type that represents a clean (non-error state) exit of the"},{"text":" ","type":"text"},{"type":"text","text":"utility."}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/SingleValueParsingStrategy":{"role":"symbol","title":"SingleValueParsingStrategy","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/SingleValueParsingStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"code":"@Option","type":"codeVoice"},{"type":"text","text":" arguments."}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueParsingStrategy","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ParsableArguments":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParsableArguments","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/parsablearguments","navigatorTitle":[{"kind":"identifier","text":"ParsableArguments"}],"title":"ParsableArguments","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableArguments","abstract":[{"text":"A type that can be parsed from a programâ€™s command-line arguments.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ValidationError":{"navigatorTitle":[{"kind":"identifier","text":"ValidationError"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ValidationError","url":"\/documentation\/argumentparser\/validationerror","title":"ValidationError","abstract":[{"type":"text","text":"An error type that is presented to the user as an error with parsing their"},{"type":"text","text":" "},{"text":"command-line input.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"title":"ArgumentArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"text":" ","type":"text"},{"text":"into an array.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","kind":"symbol","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","role":"symbol","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CompletionShell":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CompletionShell","kind":"identifier"}],"title":"CompletionShell","abstract":[{"text":"A shell for which the parser can generate a completion script.","type":"text"}],"navigatorTitle":[{"text":"CompletionShell","kind":"identifier"}],"url":"\/documentation\/argumentparser\/completionshell","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionShell","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CommandGroup":{"abstract":[{"text":"A set of commands grouped together under a common name.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandGroup","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandGroup"}],"title":"CommandGroup","navigatorTitle":[{"text":"CommandGroup","kind":"identifier"}],"url":"\/documentation\/argumentparser\/commandgroup","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArrayParsingStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"title":"ArrayParsingStrategy","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayParsingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/arrayparsingstrategy"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Argument":{"type":"topic","kind":"symbol","title":"Argument","abstract":[{"text":"A property wrapper that represents a positional command-line argument.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Argument","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Argument","url":"\/documentation\/argumentparser\/argument","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Argument","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ParsableCommand":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParsableCommand"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/parsablecommand","navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"title":"ParsableCommand","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ParsableCommand","abstract":[{"type":"text","text":"A type that can be executed as part of a nested tree of commands."}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagExclusivity":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagExclusivity","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flagexclusivity","abstract":[{"text":"The options for treating enumeration-based flags as exclusive.","type":"text"}],"navigatorTitle":[{"text":"FlagExclusivity","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"FlagExclusivity","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagExclusivity","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/EnumerableFlag":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnumerableFlag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/enumerableflag","abstract":[{"text":"A type that represents the different possible flags to be used by a","type":"text"},{"type":"text","text":" "},{"code":"@Flag","type":"codeVoice"},{"text":" property.","type":"text"}],"navigatorTitle":[{"text":"EnumerableFlag","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"EnumerableFlag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/EnumerableFlag","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Option":{"abstract":[{"text":"A property wrapper that represents a command-line option.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Option","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Option"}],"title":"Option","navigatorTitle":[{"text":"Option","kind":"identifier"}],"url":"\/documentation\/argumentparser\/option","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/NameSpecification":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"NameSpecification","kind":"identifier"}],"url":"\/documentation\/argumentparser\/namespecification","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"text":"label.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"kind":"symbol","role":"symbol","title":"NameSpecification","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/NameSpecification","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CompletionKind":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"CompletionKind","kind":"identifier"}],"title":"CompletionKind","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CompletionKind","abstract":[{"text":"The type of completion to use for an argument or option value.","type":"text"}],"url":"\/documentation\/argumentparser\/completionkind","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CompletionKind","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentHelp":{"type":"topic","abstract":[{"text":"Help information for a command-line argument.","type":"text"}],"title":"ArgumentHelp","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"url":"\/documentation\/argumentparser\/argumenthelp","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentHelp","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentHelp","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ArgumentVisibility":{"abstract":[{"text":"Visibility level of an argumentâ€™s help.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ArgumentVisibility","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentVisibility","kind":"identifier"}],"title":"ArgumentVisibility","navigatorTitle":[{"kind":"identifier","text":"ArgumentVisibility"}],"url":"\/documentation\/argumentparser\/argumentvisibility","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/FlagInversion":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"kind":"symbol","title":"FlagInversion","type":"topic","abstract":[{"text":"The options for converting a Boolean flag into a ","type":"text"},{"type":"codeVoice","code":"true"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/FlagInversion","navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flaginversion"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/CommandConfiguration":{"url":"\/documentation\/argumentparser\/commandconfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CommandConfiguration","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/CommandConfiguration","role":"symbol","title":"CommandConfiguration","type":"topic","navigatorTitle":[{"text":"CommandConfiguration","kind":"identifier"}],"abstract":[{"type":"text","text":"The configuration for a command."}],"kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Flag":{"url":"\/documentation\/argumentparser\/flag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flag","kind":"identifier"}],"type":"topic","title":"Flag","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Flag","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"navigatorTitle":[{"text":"Flag","kind":"identifier"}],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/AsyncParsableCommand":{"navigatorTitle":[{"kind":"identifier","text":"AsyncParsableCommand"}],"title":"AsyncParsableCommand","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncParsableCommand","abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"type":"text","text":" "},{"text":"commands.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncParsableCommand","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ExitCode":{"url":"\/documentation\/argumentparser\/exitcode","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExitCode","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExitCode","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExitCode"}],"type":"topic","title":"ExitCode","abstract":[{"text":"An error type that only includes an exit code.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/OptionGroup":{"title":"OptionGroup","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/OptionGroup","abstract":[{"type":"text","text":"A wrapper that transparently includes a parsable type."}],"kind":"symbol","url":"\/documentation\/argumentparser\/optiongroup","role":"symbol","navigatorTitle":[{"text":"OptionGroup","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionGroup","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/ExpressibleByArgument":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/ExpressibleByArgument","type":"topic","title":"ExpressibleByArgument","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByArgument","kind":"identifier"}],"abstract":[{"text":"A type that can be expressed as a command-line argument.","type":"text"}],"url":"\/documentation\/argumentparser\/expressiblebyargument","navigatorTitle":[{"text":"ExpressibleByArgument","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser":{"kind":"symbol","role":"collection","url":"\/documentation\/argumentparser","abstract":[],"title":"ArgumentParser","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/Swift":{"url":"\/documentation\/argumentparser\/swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/Swift","role":"collection","kind":"symbol","type":"topic","title":"Swift","abstract":[]},"doc://com.SwiftyLab.HelperCoders/documentation/ArgumentParser/AsyncMainProtocol":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/ArgumentParser\/AsyncMainProtocol","url":"\/documentation\/argumentparser\/asyncmainprotocol","title":"AsyncMainProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncMainProtocol","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncMainProtocol"}],"abstract":[{"type":"text","text":"A type that can designate an "},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as the programâ€™s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"entry point."}],"deprecated":true,"type":"topic"}}}