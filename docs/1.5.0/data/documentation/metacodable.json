{"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":" framework exposes custom macros which can be used to generate dynamic "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations. The core of the framework is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)"},{"type":"text","text":" macro which generates the implementation aided by data provided with using other macros."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"MetaCodable"},{"type":"text","text":" aims to supercharge your "},{"code":"Codable","type":"codeVoice"},{"text":" implementations by providing these inbox features:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Allows custom ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" value declaration per variable with "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference","isActive":true},{"text":" passing single argument, instead of requiring you to write all the ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" values.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Allows to create flattened model for nested ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" values with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows to create composition of multiple ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" types with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference","isActive":true},{"type":"text","text":" passing no arguments."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Allows to read data from additional fallback "},{"code":"CodingKey","type":"codeVoice"},{"text":"s provided with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Allows to provide default value in case of decoding failures with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","isActive":true},{"text":", or only in case of failures when missing value with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","type":"reference","isActive":true},{"text":". Different default values can also be used for value missing and other errors respectively with ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows to create custom decoding\/encoding strategies with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","type":"reference","isActive":true},{"type":"text","text":" and using them with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:properties:)","isActive":true,"type":"reference"},{"type":"text","text":" or others. i.e. "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/LossySequenceCoder","type":"reference","isActive":true},{"text":" etc.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows applying common strategies like ","type":"text"},{"code":"ValueCoder","type":"codeVoice"},{"type":"text","text":" to all properties of a type through the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)"},{"text":" parameter, reducing the need for repetitive property annotations.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Allows specifying different case values with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)"},{"type":"text","text":" and case value\/protocol type identifier type different from "},{"code":"String","type":"codeVoice"},{"text":" with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows specifying enum-case\/protocol type identifier path with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"text":" and case content path with ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows decoding\/encoding enums that lack distinct identifiers for each case data with ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows to ignore specific properties\/cases from decoding\/encoding with ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","isActive":true},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","type":"reference"},{"text":". Allows to ignore encoding based on custom conditions with ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","isActive":true},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Allows to use camel-case names for variables according to "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions"},{"text":", while enabling a type\/case to work with different case style keys with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Allows to ignore all initialized properties of a type\/case from decoding\/encoding with "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","isActive":true,"type":"reference"},{"text":" unless explicitly asked to decode\/encode by attaching any coding attributes, i.e. ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true,"type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","type":"reference","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","isActive":true},{"text":" etc.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows to generate protocol decoding\/encoding ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","isActive":true,"type":"reference"},{"type":"text","text":"s with "},{"code":"MetaProtocolCodable","type":"codeVoice"},{"text":" build tool plugin from ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable"},{"type":"text","text":" types."}]}]}],"type":"unorderedList"},{"inlineContent":[{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","type":"reference","overridingTitleInlineContent":[{"type":"strong","inlineContent":[{"text":"See the limitations for this macro","type":"text"}]}],"overridingTitle":"See the limitations for this macro","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Installation","level":2,"anchor":"Installation"},{"tabs":[{"title":"Swift Package Manager","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference"},{"text":" is a tool for automating the distribution of Swift code and is integrated into the ","type":"text"},{"type":"codeVoice","code":"swift"},{"text":" compiler.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Once you have your Swift package set up, adding "},{"type":"codeVoice","code":"MetaCodable"},{"text":" as a dependency is as easy as adding it to the ","type":"text"},{"code":"dependencies","type":"codeVoice"},{"text":" value of your ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":[".package(url: \"https:\/\/github.com\/SwiftyLab\/MetaCodable.git\", from: \"1.0.0\"),"]},{"type":"paragraph","inlineContent":[{"text":"Then you can add the ","type":"text"},{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":" module product as dependency to the "},{"code":"target","type":"codeVoice"},{"type":"text","text":"s of your choosing, by adding it to the "},{"code":"dependencies","type":"codeVoice"},{"text":" value of your ","type":"text"},{"code":"target","type":"codeVoice"},{"type":"text","text":"s."}]},{"syntax":"swift","code":[".product(name: \"MetaCodable\", package: \"MetaCodable\"),"],"type":"codeListing"}]},{"title":"CocoaPods","content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/cocoapods.org"},{"type":"text","text":" is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate "},{"type":"codeVoice","code":"MetaCodable"},{"type":"text","text":" into your Xcode project using CocoaPods, specify it in your "},{"type":"codeVoice","code":"Podfile"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"ruby","code":["pod 'MetaCodable'"]}]}],"type":"tabNavigator"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/metacodable"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"platforms":[{"beta":false,"name":"Swift","introducedAt":"5.9"}],"symbolKind":"module","modules":[{"name":"MetaCodable"}],"roleHeading":"Framework","externalID":"MetaCodable","role":"collection","title":"MetaCodable"},"kind":"symbol","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros."}],"hierarchy":{"paths":[[]]},"topicSections":[{"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/MetaCodable\/tutorials\/Usage","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations"]},{"anchor":"Macros","title":"Macros","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformDecodable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformEncodable(commonStrategies:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"]},{"anchor":"Strategies","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/DecodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/EncodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy"],"title":"Strategies"},{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:properties:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:properties:)-7j53l","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:properties:)-47t86","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:_:properties:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:_:_:properties:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","doc:\/\/MetaCodable\/documentation\/MetaCodable\/LossySequenceCoder"],"anchor":"Helpers","title":"Helpers"},{"anchor":"Fallback-value","title":"Fallback value","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)"]},{"title":"Ignoring","anchor":"Ignoring","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(basedOn:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]},{"title":"Dynamic Coding","identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig"],"anchor":"Dynamic-Coding"},{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeyNameStrategy"],"anchor":"Enumerations","generated":true,"title":"Enumerations"}],"references":{"https://www.swift.org/documentation/api-design-guidelines/#general-conventions":{"url":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions","identifier":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions","type":"link","title":"Swift API Design Guidelines","titleInlineContent":[{"text":"Swift API Design Guidelines","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codingkeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field names\/associated value label will be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the provided case format."}],"title":"CodingKeys(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"title":"CodedAt(_:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/MemberInit()":{"kind":"symbol","url":"\/documentation\/metacodable\/memberinit()","abstract":[{"text":"Generate memberwise initializer(s) of ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":" and "},{"code":"actor","type":"codeVoice"},{"text":" types","type":"text"},{"type":"text","text":" "},{"text":"by leveraging custom attributes provided on variable declarations.","type":"text"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberInit","kind":"identifier"},{"text":"()","kind":"text"}],"title":"MemberInit()"},"doc://MetaCodable/documentation/MetaCodable/MetaCodableConfig":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MetaCodableConfig","role":"symbol","url":"\/documentation\/metacodable\/metacodableconfig","fragments":[{"kind":"keyword","text":"configuration"},{"text":" ","kind":"text"},{"kind":"keyword","text":"file"},{"text":" ","kind":"text"},{"text":"MetaCodableConfig","kind":"identifier"}],"abstract":[{"text":"The configuration file providing additional customization options for ","type":"text"},{"type":"codeVoice","code":"MetaProtocolCodable"},{"type":"text","text":" build tool plugin."}],"title":"MetaCodableConfig"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:properties:)":{"title":"CodedBy(_:properties:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Parent"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Helper"},{"text":", each ","kind":"text"},{"text":"Property","kind":"genericParameter"},{"text":">((repeat each ","kind":"text"},{"text":"Property","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Helper","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"properties","kind":"externalParam"},{"text":": repeat ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Parent"},{"text":", each ","kind":"text"},{"text":"Property","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by the created "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" "},{"text":"instance from provided arguments.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:properties:)","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:properties:)"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:)","url":"\/documentation\/metacodable\/default(ifmissing:)","title":"Default(ifMissing:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"ifMissing","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when value is missing"},{"text":" ","type":"text"},{"text":"and when not initialized explicitly in memberwise initializer(s).","type":"text"}]},"https://cocoapods.org":{"url":"https:\/\/cocoapods.org","identifier":"https:\/\/cocoapods.org","type":"link","title":"CocoaPods","titleInlineContent":[{"type":"text","text":"CocoaPods"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding and encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder/Coded":{"role":"symbol","title":"Coded","url":"\/documentation\/metacodable\/helpercoder\/coded","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded","abstract":[{"type":"text","text":"The actual type of value that is going to be decoded\/encoded."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coded"}],"type":"topic","kind":"symbol","required":true},"doc://MetaCodable/documentation/MetaCodable/CodingKeyNameStrategy":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeyNameStrategy","type":"topic","abstract":[{"type":"text","text":"The values that determine the equivalent"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":" value for a property name.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodingKeyNameStrategy","kind":"identifier"}],"title":"CodingKeyNameStrategy","role":"symbol","url":"\/documentation\/metacodable\/codingkeynamestrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodingKeyNameStrategy"}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","url":"\/documentation\/metacodable\/default(_:)","title":"Default(_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"abstract":[{"text":"Provides a ","type":"text"},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when decoding fails and"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/DecodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DecodedAt(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded to a specific"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided, different from the encoding path.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"DecodedAt","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"title":"DecodedAt(_:)","role":"symbol","url":"\/documentation\/metacodable\/decodedat(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(ifMissing:forErrors:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(ifMissing:forErrors:)","url":"\/documentation\/metacodable\/default(ifmissing:forerrors:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ifMissing","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forErrors","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"text":"Provides different ","type":"text"},{"code":"default","type":"codeVoice"},{"type":"text","text":" values to be used for missing value"},{"text":" ","type":"text"},{"text":"and decoding errors.","type":"text"}],"title":"Default(ifMissing:forErrors:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Inherits(decodable:encodable:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Inherits(decodable:encodable:)","title":"Inherits(decodable:encodable:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Indicates whether super class conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" or not."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Inherits","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"decodable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"encodable","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/metacodable\/inherits(decodable:encodable:)","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/ConformDecodable(commonStrategies:)":{"url":"\/documentation\/metacodable\/conformdecodable(commonstrategies:)","abstract":[{"type":"text","text":"Generate "},{"code":"Decodable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"text":" ","type":"text"},{"type":"text","text":"declarations. This macro is named "},{"type":"codeVoice","code":"ConformDecodable"},{"text":" to avoid conflicts","type":"text"},{"text":" ","type":"text"},{"text":"with the standard library ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" protocol."}],"role":"symbol","title":"ConformDecodable(commonStrategies:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformDecodable(commonStrategies:)","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConformDecodable"},{"text":"(","kind":"text"},{"text":"commonStrategies","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CodableCommonStrategy","kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Codable(commonStrategies:)":{"title":"Codable(commonStrategies:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"commonStrategies"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":" types by leveraging custom attributes provided on variable","type":"text"},{"type":"text","text":" "},{"text":"declarations.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable(commonStrategies:)","role":"symbol","url":"\/documentation\/metacodable\/codable(commonstrategies:)"},"doc://MetaCodable/documentation/MetaCodable/ContentAt(_:_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ContentAt(_:_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/contentat(_:_:)","abstract":[{"type":"text","text":"Indicates the enum-case associated values or protocol conforming types need"},{"type":"text","text":" "},{"type":"text","text":"to be decoded\/encoded at the "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"title":"ContentAt(_:_:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContentAt"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Limitations":{"abstract":[{"type":"text","text":"All the usage limitations for "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"reference"},{"text":".","type":"text"}],"title":"Limitations","kind":"article","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Limitations","url":"\/documentation\/metacodable\/limitations","type":"topic","role":"article"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicCodable"}],"url":"\/documentation\/metacodable\/dynamiccodable","abstract":[{"type":"text","text":"A type that can be decoded\/encoded dynamically based on unique identifier."}],"title":"DynamicCodable","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodable","kind":"identifier"}]},"https://swift.org/package-manager/":{"url":"https:\/\/swift.org\/package-manager\/","identifier":"https:\/\/swift.org\/package-manager\/","type":"link","title":"Swift Package Manager","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}]},"doc://MetaCodable/documentation/MetaCodable/UnTagged()":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnTagged"},{"text":"()","kind":"text"}],"abstract":[{"text":"Indicates the cases of enum lack distinct identifier.","type":"text"}],"url":"\/documentation\/metacodable\/untagged()","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/UnTagged()","type":"topic","title":"UnTagged()","kind":"symbol"},"doc://MetaCodable/tutorials/Usage":{"title":"Discover MetaCodable","abstract":[{"code":"MetaCodable","type":"codeVoice"},{"type":"text","text":" supercharges "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros. Remove previous boiler-plate for "},{"code":"Codable","type":"codeVoice"},{"text":" implementations and create ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" conformances faster than ever before."}],"role":"overview","url":"\/tutorials\/usage","identifier":"doc:\/\/MetaCodable\/tutorials\/Usage","kind":"overview","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodableCommonStrategy":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodableCommonStrategy","title":"CodableCommonStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CodableCommonStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A marker type used to represent a common type conversion strategy for the "},{"type":"codeVoice","code":"@Codable"},{"type":"text","text":" macro."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableCommonStrategy","kind":"identifier"}],"url":"\/documentation\/metacodable\/codablecommonstrategy","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","title":"IgnoreDecoding()","url":"\/documentation\/metacodable\/ignoredecoding()","type":"topic","abstract":[{"text":"Indicates the field\/case\/type needs to ignored from decoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Indicates the field\/case\/type needs to ignored from encoding.","type":"text"}],"title":"IgnoreEncoding()"},"doc://MetaCodable/documentation/MetaCodable/CodedAs(_:_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/metacodable\/codedas(_:_:)","abstract":[{"type":"text","text":"Provides values to be used for an enum-case instead of using case name or"},{"type":"text","text":" "},{"type":"text","text":"additional variable "},{"type":"codeVoice","code":"CodingKey"},{"text":"s.","type":"text"}],"title":"CodedAs(_:_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs(_:_:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-7toka":{"type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-7toka","url":"\/documentation\/metacodable\/ignoreencoding(if:)-7toka","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"if"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[{"text":"Indicates the field needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"text":"is not satisfied.","type":"text"}],"title":"IgnoreEncoding(if:)"},"doc://MetaCodable/documentation/MetaCodable/DynamicCodableIdentifier":{"type":"topic","url":"\/documentation\/metacodable\/dynamiccodableidentifier","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicCodableIdentifier","kind":"identifier"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodableIdentifier","kind":"symbol","navigatorTitle":[{"text":"DynamicCodableIdentifier","kind":"identifier"}],"title":"DynamicCodableIdentifier","role":"symbol","abstract":[{"type":"text","text":"The identifier option for "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/DynamicCodable","isActive":true},{"type":"text","text":" types."}]},"doc://MetaCodable/documentation/MetaCodable/HelperCoder":{"type":"topic","navigatorTitle":[{"text":"HelperCoder","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HelperCoder","kind":"identifier"}],"title":"HelperCoder","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder","url":"\/documentation\/metacodable\/helpercoder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type that helps to decode and encode underlying "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder\/Coded"},{"type":"text","text":" type"},{"text":" ","type":"text"},{"text":"from provided ","type":"text"},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and to provided "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" respectively."}]},"doc://MetaCodable/documentation/MetaCodable/CodedAs()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAs()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedas()","abstract":[{"text":"Provides the identifier actual type for internally\/adjacently tagged enums","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and protocols."}],"title":"CodedAs()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedAs"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">()","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(if:)-1iuvv":{"type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(if:)-1iuvv","url":"\/documentation\/metacodable\/ignoreencoding(if:)-1iuvv","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"IgnoreEncoding","kind":"identifier"},{"kind":"text","text":"<each "},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"if","kind":"externalParam"},{"kind":"text","text":": (repeat each "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Indicates the field\/case needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"text":"is not satisfied.","type":"text"}],"title":"IgnoreEncoding(if:)"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:arguments:_:properties:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by the created "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" "},{"text":"instance from provided arguments.","type":"text"}],"title":"CodedBy(_:arguments:_:properties:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:_:properties:)","url":"\/documentation\/metacodable\/codedby(_:arguments:_:properties:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Parent"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Helper"},{"text":", ","kind":"text"},{"text":"Argument1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Argument2","kind":"genericParameter"},{"text":", each ","kind":"text"},{"text":"Property","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Argument1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Argument2"},{"text":", repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Property"},{"text":") -> ","kind":"text"},{"text":"Helper","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"arguments"},{"kind":"text","text":": "},{"text":"Argument1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Argument2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"properties"},{"kind":"text","text":": repeat "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Parent","kind":"typeIdentifier"},{"text":", each ","kind":"text"},{"text":"Property","kind":"typeIdentifier"},{"text":">)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding(basedOn:)":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding(basedOn:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreEncoding"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"basedOn"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"kind":"symbol","title":"IgnoreEncoding(basedOn:)","url":"\/documentation\/metacodable\/ignoreencoding(basedon:)","type":"topic","abstract":[{"text":"Indicates the field needs to be encoded only if provided condition","type":"text"},{"type":"text","text":" "},{"text":"is not satisfied, based on the containing object.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","type":"topic","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided with field name as final","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"CodedIn(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"title":"CodedBy(_:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodedBy","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field or enum\/protocol identifier needs to be decoded and"},{"text":" ","type":"text"},{"type":"text","text":"encoded by the provided "},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:)"},"doc://MetaCodable/documentation/MetaCodable":{"abstract":[{"text":"Supercharge ","type":"text"},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"text":" implementations with macros.","type":"text"}],"url":"\/documentation\/metacodable","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"topic","title":"MetaCodable","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/LossySequenceCoder":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LossySequenceCoder"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LossySequenceCoder","kind":"identifier"}],"title":"LossySequenceCoder","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/LossySequenceCoder","url":"\/documentation\/metacodable\/lossysequencecoder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/HelperCoder"},{"type":"text","text":" that helps decoding\/encoding lossy sequence."}],"deprecated":true},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:arguments:_:_:properties:)":{"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Parent"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Helper"},{"text":", ","kind":"text"},{"text":"Argument1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Argument2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Argument3","kind":"genericParameter"},{"kind":"text","text":", each "},{"text":"Property","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Argument1"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Argument2"},{"text":", ","kind":"text"},{"text":"Argument3","kind":"typeIdentifier"},{"text":", repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"Property"},{"kind":"text","text":") -> "},{"text":"Helper","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"arguments","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Argument1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Argument2"},{"text":", ","kind":"text"},{"text":"Argument3","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"properties","kind":"externalParam"},{"text":": repeat ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"Parent","kind":"typeIdentifier"},{"text":", each ","kind":"text"},{"text":"Property","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"CodedBy(_:arguments:_:_:properties:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:_:_:properties:)","url":"\/documentation\/metacodable\/codedby(_:arguments:_:_:properties:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by the created "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" "},{"text":"instance from provided arguments.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/ConformEncodable(commonStrategies:)":{"kind":"symbol","url":"\/documentation\/metacodable\/conformencodable(commonstrategies:)","abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"text":", ","type":"text"},{"code":"class","type":"codeVoice"},{"text":", ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":", "},{"code":"actor","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":" types by leveraging custom attributes provided on variable"},{"type":"text","text":" "},{"text":"declarations. This macro is named ","type":"text"},{"type":"codeVoice","code":"ConformEncodable"},{"text":" to avoid conflicts","type":"text"},{"text":" ","type":"text"},{"text":"with the standard library ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" protocol."}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/ConformEncodable(commonStrategies:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ConformEncodable","kind":"identifier"},{"kind":"text","text":"("},{"text":"commonStrategies","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodableCommonStrategy","preciseIdentifier":"s:11MetaCodable0B14CommonStrategyV"},{"kind":"text","text":"])"}],"title":"ConformEncodable(commonStrategies:)"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:arguments:properties:)-7j53l":{"kind":"symbol","abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by the created "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" "},{"text":"instance from provided arguments.","type":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:properties:)-7j53l","title":"CodedBy(_:arguments:properties:)","role":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Parent"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Helper"},{"text":", each ","kind":"text"},{"text":"Argument","kind":"genericParameter"},{"text":", each ","kind":"text"},{"text":"Property","kind":"genericParameter"},{"text":">((repeat each ","kind":"text"},{"text":"Argument","kind":"typeIdentifier"},{"kind":"text","text":", repeat each "},{"text":"Property","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Helper"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"arguments"},{"text":": repeat each ","kind":"text"},{"text":"Argument","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"properties"},{"kind":"text","text":": repeat "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Parent","kind":"typeIdentifier"},{"text":", each ","kind":"text"},{"kind":"typeIdentifier","text":"Property"},{"kind":"text","text":">)"}],"url":"\/documentation\/metacodable\/codedby(_:arguments:properties:)-7j53l"},"doc://MetaCodable/documentation/MetaCodable/EncodedAt(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodedAt"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Indicates the field needs to be encoded to a specific"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided, different from the decoding path.","type":"text"}],"url":"\/documentation\/metacodable\/encodedat(_:)","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/EncodedAt(_:)","type":"topic","title":"EncodedAt(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"text":"()","kind":"text"}],"kind":"symbol","title":"IgnoreCodingInitialized()","url":"\/documentation\/metacodable\/ignorecodinginitialized()","type":"topic","abstract":[{"text":"Indicates by default initialized properties\/associated values for","type":"text"},{"type":"text","text":" "},{"text":"the attached type\/enum-case will be ignored for decoding\/encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:arguments:properties:)-47t86":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by the created "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" "},{"text":"instance from provided arguments.","type":"text"}],"title":"CodedBy(_:arguments:properties:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:arguments:properties:)-47t86","url":"\/documentation\/metacodable\/codedby(_:arguments:properties:)-47t86","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Parent"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Helper"},{"text":", ","kind":"text"},{"text":"Argument1","kind":"genericParameter"},{"text":", each ","kind":"text"},{"text":"Property","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Argument1","kind":"typeIdentifier"},{"kind":"text","text":", repeat each "},{"text":"Property","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Helper"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"Argument1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"properties"},{"kind":"text","text":": repeat "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Parent","kind":"typeIdentifier"},{"text":", each ","kind":"text"},{"kind":"typeIdentifier","text":"Property"},{"kind":"text","text":">)"}]}}}