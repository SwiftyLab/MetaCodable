{"sections":[],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/ListBuilder-Implementations"},"topicSections":[{"generated":true,"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildArray(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildBlock(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildEither(first:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildEither(second:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildExpression(_:)-1zqgu","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildExpression(_:)-8866t","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildExpression(_:)-8egww","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildFinalResult(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildLimitedAvailability(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildOptional(_:)"]}],"metadata":{"roleHeading":"API Collection","title":"ListBuilder Implementations","modules":[{"name":"SwiftSyntaxBuilder"}],"role":"collectionGroup"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildExpression(_:)-8866t":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildExpression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FinalResult","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa"},{"text":") -> ","kind":"text"},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildexpression(_:)-8866t","title":"buildExpression(_:)","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildExpression(_:)-8866t","abstract":[{"text":"Add all the elements of ","type":"text"},{"type":"codeVoice","code":"expression"},{"type":"text","text":" to this result builder, effectively flattening them."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildEither(second:)":{"kind":"symbol","title":"buildEither(second:)","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildeither(second:)","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"kind":"text","text":"("},{"text":"second","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildEither(second:)","abstract":[{"type":"text","text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’"},{"text":" ","type":"text"},{"type":"text","text":"statements by folding conditional results into a single result."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildArray(_:)":{"title":"buildArray(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildArray(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildArray","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"},{"kind":"text","text":"]) -> "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildarray(_:)","abstract":[{"text":"Enables support for ‘for..in’ loops by combining the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"results of all iterations into a single result."}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder":{"abstract":[],"type":"topic","title":"StringLiteralSegmentListBuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StringLiteralSegmentListBuilder"}],"navigatorTitle":[{"text":"StringLiteralSegmentListBuilder","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildEither(first:)":{"title":"buildEither(first:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildEither(first:)","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildeither(first:)","abstract":[{"text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"type":"text","text":" "},{"type":"text","text":"statements by folding conditional results into a single result."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildEither"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"first"},{"kind":"text","text":": "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildExpression(_:)-1zqgu":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildExpression(_:)-1zqgu","title":"buildExpression(_:)","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildexpression(_:)-1zqgu","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"buildExpression","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","text":"Expression"},{"text":") -> ","kind":"text"},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Provides contextual type information for statement"},{"text":" ","type":"text"},{"text":"expressions to translate them into partial results.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildLimitedAvailability(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildLimitedAvailability"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildlimitedavailability(_:)","abstract":[{"type":"text","text":"This will be called on the partial result of an ‘if’"},{"type":"text","text":" "},{"type":"text","text":"#available’ block to allow the result builder to erase type"},{"type":"text","text":" "},{"type":"text","text":"information."}],"kind":"symbol","role":"symbol","title":"buildLimitedAvailability(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildLimitedAvailability(_:)","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildBlock(_:)":{"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildBlock(_:)","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildblock(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildBlock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"kind":"text","text":"...) -> "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"}],"title":"buildBlock(_:)","role":"symbol","abstract":[{"type":"text","text":"Required by every result builder to build combined results from"},{"text":" ","type":"text"},{"type":"text","text":"statement blocks."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildExpression(_:)-8egww":{"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildexpression(_:)-8egww","title":"buildExpression(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildExpression"},{"text":"(","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","text":"Expression","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildExpression(_:)-8egww","abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildOptional(_:)":{"title":"buildOptional(_:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildOptional(_:)","url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildoptional(_:)","abstract":[{"type":"text","text":"Enables support for "},{"code":"if","type":"codeVoice"},{"text":" statements that do not have an ","type":"text"},{"type":"codeVoice","code":"else"},{"text":".","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildOptional"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/StringLiteralSegmentListBuilder/buildFinalResult(_:)":{"url":"\/documentation\/swiftsyntaxbuilder\/stringliteralsegmentlistbuilder\/buildfinalresult(_:)","title":"buildFinalResult(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/StringLiteralSegmentListBuilder\/buildFinalResult(_:)","abstract":[{"type":"text","text":"This will be called on the partial result from the outermost"},{"type":"text","text":" "},{"type":"text","text":"block statement to produce the final returned result."}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildFinalResult"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"FinalResult","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa"}]}}}