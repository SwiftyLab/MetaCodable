{"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/precedencegroupnamelistbuilder\/buildexpression(_:)-4ujye"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrecedenceGroupNameListBuilder"]]},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"ListBuilder.buildExpression(_:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrecedenceGroupNameListBuilder\/buildExpression(_:)-4ujye","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"buildExpression","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"expression"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"text":"<","kind":"text"},{"text":"Expression","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Expression","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","kind":"typeIdentifier"}]}]}],"metadata":{"symbolKind":"method","externalID":"s:18SwiftSyntaxBuilder04ListC0PAAE15buildExpressionySay7ElementQyd__Gqd__STRd__11FinalResult_AEQZAFRSlFZ::SYNTHESIZED::s:18SwiftSyntaxBuilder023PrecedenceGroupNameListC0V","roleHeading":"Type Method","extendedModule":"SwiftSyntaxBuilder","role":"symbol","title":"buildExpression(_:)","modules":[{"name":"SwiftSyntaxBuilder"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildExpression"},{"text":"(","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","text":"Sequence"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Component":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Component"}],"title":"ListBuilder.Component","abstract":[{"text":"The type of a partial result, which will be carried through all of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"build methods."}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/component"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/PrecedenceGroupNameListBuilder":{"navigatorTitle":[{"kind":"identifier","text":"PrecedenceGroupNameListBuilder"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PrecedenceGroupNameListBuilder","kind":"identifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/precedencegroupnamelistbuilder","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrecedenceGroupNameListBuilder","type":"topic","title":"PrecedenceGroupNameListBuilder","abstract":[],"role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/PrecedenceGroupNameListBuilder/buildExpression(_:)-4ujye":{"title":"buildExpression(_:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildExpression"},{"text":"(","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/precedencegroupnamelistbuilder\/buildexpression(_:)-4ujye","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/PrecedenceGroupNameListBuilder\/buildExpression(_:)-4ujye","role":"symbol","kind":"symbol","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Expression":{"title":"ListBuilder.Expression","url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/expression","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Expression","abstract":[{"text":"The type of individual statement expressions in the transformed function,","type":"text"},{"text":" ","type":"text"},{"text":"which defaults to Component if buildExpression() is not provided.","type":"text"}],"kind":"symbol","role":"symbol"}}}