{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildArray(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildBlock(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildEither(first:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildEither(second:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildExpression(_:)-4aglp","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildExpression(_:)-6wezm","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildExpression(_:)-92m3b","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildFinalResult(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildLimitedAvailability(_:)","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildOptional(_:)"]}],"sections":[],"metadata":{"modules":[{"name":"SwiftSyntaxBuilder"}],"roleHeading":"API Collection","role":"collectionGroup","title":"ListBuilder Implementations"},"kind":"article","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/ListBuilder-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildBlock(_:)":{"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildblock(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildBlock","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"},{"kind":"text","text":"...) -> "},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"role":"symbol","abstract":[{"type":"text","text":"Required by every result builder to build combined results from"},{"type":"text","text":" "},{"text":"statement blocks.","type":"text"}],"title":"buildBlock(_:)","type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildBlock(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildEither(first:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildEither(first:)","type":"topic","kind":"symbol","title":"buildEither(first:)","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildeither(first:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"text":"first","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"abstract":[{"type":"text","text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’"},{"text":" ","type":"text"},{"text":"statements by folding conditional results into a single result.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildExpression(_:)-4aglp":{"url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildexpression(_:)-4aglp","abstract":[],"title":"buildExpression(_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildExpression"},{"text":"(","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona","text":"Expression"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildExpression(_:)-4aglp"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder":{"navigatorTitle":[{"text":"SimpleStringLiteralSegmentListBuilder","kind":"identifier"}],"abstract":[],"type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder","title":"SimpleStringLiteralSegmentListBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListBuilder"}],"kind":"symbol","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildExpression(_:)-6wezm":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildExpression(_:)-6wezm","type":"topic","kind":"symbol","title":"buildExpression(_:)","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildexpression(_:)-6wezm","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildExpression"},{"kind":"text","text":"("},{"text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P10Expressiona"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"}],"abstract":[{"text":"Provides contextual type information for statement","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"expressions to translate them into partial results."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildOptional(_:)":{"url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildoptional(_:)","abstract":[{"type":"text","text":"Enables support for "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statements that do not have an "},{"code":"else","type":"codeVoice"},{"text":".","type":"text"}],"title":"buildOptional(_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildOptional","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildOptional(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildExpression(_:)-92m3b":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildExpression(_:)-92m3b","type":"topic","kind":"symbol","title":"buildExpression(_:)","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildexpression(_:)-92m3b","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buildExpression","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FinalResult","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"abstract":[{"text":"Add all the elements of ","type":"text"},{"code":"expression","type":"codeVoice"},{"type":"text","text":" to this result builder, effectively flattening them."}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildLimitedAvailability(_:)":{"url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildlimitedavailability(_:)","abstract":[{"type":"text","text":"This will be called on the partial result of an ‘if’"},{"type":"text","text":" "},{"text":"#available’ block to allow the result builder to erase type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"information."}],"title":"buildLimitedAvailability(_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildLimitedAvailability"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildLimitedAvailability(_:)"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildArray(_:)":{"url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildarray(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildArray(_:)","kind":"symbol","title":"buildArray(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buildArray","kind":"identifier"},{"kind":"text","text":"(["},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"text":"]) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Enables support for ‘for..in’ loops by combining the"},{"text":" ","type":"text"},{"text":"results of all iterations into a single result.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildFinalResult(_:)":{"abstract":[{"text":"This will be called on the partial result from the outermost","type":"text"},{"type":"text","text":" "},{"type":"text","text":"block statement to produce the final returned result."}],"type":"topic","kind":"symbol","title":"buildFinalResult(_:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildFinalResult(_:)","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildfinalresult(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildFinalResult"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"kind":"text","text":") -> "},{"text":"FinalResult","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P11FinalResultQa"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SimpleStringLiteralSegmentListBuilder/buildEither(second:)":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SimpleStringLiteralSegmentListBuilder\/buildEither(second:)","type":"topic","kind":"symbol","title":"buildEither(second:)","url":"\/documentation\/swiftsyntaxbuilder\/simplestringliteralsegmentlistbuilder\/buildeither(second:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"text":"second","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}],"abstract":[{"text":"With buildEither(first:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"statements by folding conditional results into a single result."}]}}}