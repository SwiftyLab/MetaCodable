{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"header"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/CodeBlockItemListBuilder","text":"CodeBlockItemListBuilder","kind":"attribute","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V"},{"text":" ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CodeBlockItemListSyntax"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"For example, you can construct","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["while x < 5 {","  x += 1","}"]},{"inlineContent":[{"type":"text","text":"using this call"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["try WhileStmtSyntax(\"while x < 5\") {","  ExprSyntax(\"x += 1\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Throws an error if "},{"code":"header","type":"codeVoice"},{"type":"text","text":" defines a different node type than the type the initializer is called on. E.g. if calling "},{"type":"codeVoice","code":"try IfStmtSyntax(\"while x < 5\") {}"}]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/HasTrailingCodeBlock\/init(_:bodyBuilder:)-36fsi","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftSyntaxBuilder"}],"role":"symbol","externalID":"s:18SwiftSyntaxBuilder20HasTrailingCodeBlockPAA0aB004StmtB8ProtocolRzrlE_04bodyC0xAA0B10NodeStringV_AD0fg8ItemListB0VyKXEtKcfc","symbolKind":"init","roleHeading":"Initializer","extendedModule":"SwiftSyntaxBuilder","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StmtSyntaxProtocol"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(_:bodyBuilder:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"type":"codeVoice","code":"header"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"code":"bodyBuilder","type":"codeVoice"},{"type":"text","text":" is used to build the node’s body."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/HasTrailingCodeBlock"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/hastrailingcodeblock\/init(_:bodybuilder:)-36fsi"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/syntaxnodestring","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"text":" ","type":"text"},{"text":"nodes are, but instead of producing a node, it stores the string interpolation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxNodeString"}],"title":"SyntaxNodeString","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/CodeBlockItemListBuilder":{"abstract":[],"type":"topic","title":"CodeBlockItemListBuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/CodeBlockItemListBuilder","url":"\/documentation\/swiftsyntaxbuilder\/codeblockitemlistbuilder","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListBuilder"}],"navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/CodeBlockItemListSyntax":{"url":"\/documentation\/swiftsyntax\/codeblockitemlistsyntax","navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","role":"symbol","title":"CodeBlockItemListSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/CodeBlockItemListSyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CodeBlockItemListSyntax","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/HasTrailingCodeBlock":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HasTrailingCodeBlock","kind":"identifier"}],"title":"HasTrailingCodeBlock","abstract":[],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/HasTrailingCodeBlock","navigatorTitle":[{"text":"HasTrailingCodeBlock","kind":"identifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/hastrailingcodeblock"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/HasTrailingCodeBlock/init(_:bodyBuilder:)-36fsi":{"title":"init(_:bodyBuilder:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"StmtSyntaxProtocol","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Constructs a syntax node where "},{"type":"codeVoice","code":"header"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"code":"bodyBuilder","type":"codeVoice"},{"text":" is used to build the node’s body.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/HasTrailingCodeBlock\/init(_:bodyBuilder:)-36fsi","url":"\/documentation\/swiftsyntaxbuilder\/hastrailingcodeblock\/init(_:bodybuilder:)-36fsi","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString"},{"text":", ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol"}}}