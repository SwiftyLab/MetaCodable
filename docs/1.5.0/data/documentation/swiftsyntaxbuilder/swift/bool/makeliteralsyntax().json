{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/bool\/makeliteralsyntax()"]}],"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax","text":"BooleanLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method is usually not called directly. Instead, conforming types can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be turned into syntax trees using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."]},{"type":"paragraph","inlineContent":[{"text":"Or interpolated into a Swift source code literal with the syntax","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"\\(literal: <value>)"},{"text":":","type":"text"}]},{"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"type":"codeListing","syntax":null}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool"]]},"sections":[],"metadata":{"roleHeading":"Instance Method","title":"makeLiteralSyntax()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V"}],"extendedModule":"Swift","externalID":"s:Sb18SwiftSyntaxBuilderE011makeLiteralB00aB007Booleane4ExprB0VyF","modules":[{"relatedModules":["Swift"],"name":"SwiftSyntaxBuilder"}],"role":"symbol"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool\/makeLiteralSyntax()","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Bool":{"url":"\/documentation\/swiftsyntaxbuilder\/swift\/bool","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool","role":"symbol","navigatorTitle":[{"text":"Bool","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol","title":"Bool","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Bool/makeLiteralSyntax()":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swift\/bool\/makeliteralsyntax()","abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Bool\/makeLiteralSyntax()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"BooleanLiteralExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V"}],"title":"makeLiteralSyntax()"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"literal","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ExpressibleByLiteralSyntax","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","title":"init(literal:)","role":"symbol","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"code":"Array<String>","type":"codeVoice"},{"text":" will result in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an array literal containing string literals:"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"url":"\/documentation\/swiftsyntaxbuilder\/swift","abstract":[],"kind":"symbol","role":"collection","title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/BooleanLiteralExprSyntax":{"title":"BooleanLiteralExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/BooleanLiteralExprSyntax","abstract":[],"kind":"symbol","url":"\/documentation\/swiftsyntax\/booleanliteralexprsyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanLiteralExprSyntax"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}]}}}