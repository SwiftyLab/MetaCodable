{"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Dictionary"]]},"kind":"symbol","sections":[],"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax014DictionaryExprB0V","text":"DictionaryExprSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DictionaryExprSyntax","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"type":"text","text":"be turned into syntax trees using "},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","isActive":true},{"text":":","type":"text"}]},{"syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing"},{"inlineContent":[{"text":"Or interpolated into a Swift source code literal with the syntax","type":"text"},{"type":"text","text":" "},{"code":"\\(literal: <value>)","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":null,"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/swift\/dictionary\/makeliteralsyntax()"]}],"metadata":{"role":"symbol","title":"makeLiteralSyntax()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"DictionaryExprSyntax","preciseIdentifier":"s:11SwiftSyntax014DictionaryExprB0V","kind":"typeIdentifier"}],"roleHeading":"Instance Method","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:SD18SwiftSyntaxBuilderAA020ExpressibleByLiteralB0RzAaBR_rlE04makefB00aB0014DictionaryExprB0VyF","modules":[{"name":"SwiftSyntaxBuilder","relatedModules":["Swift"]}],"symbolKind":"method"},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Dictionary\/makeLiteralSyntax()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Dictionary/makeLiteralSyntax()":{"title":"makeLiteralSyntax()","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax014DictionaryExprB0V","text":"DictionaryExprSyntax","kind":"typeIdentifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/swift\/dictionary\/makeliteralsyntax()","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Dictionary\/makeLiteralSyntax()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"type":"text","text":"."}]}},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/DictionaryExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DictionaryExprSyntax"}],"kind":"symbol","title":"DictionaryExprSyntax","type":"topic","abstract":[{"text":"A dictionary literal","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/DictionaryExprSyntax","navigatorTitle":[{"text":"DictionaryExprSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntax\/dictionaryexprsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"literal","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ExpressibleByLiteralSyntax","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","title":"init(literal:)","role":"symbol","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"code":"Array<String>","type":"codeVoice"},{"text":" will result in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an array literal containing string literals:"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift":{"url":"\/documentation\/swiftsyntaxbuilder\/swift","abstract":[],"kind":"symbol","role":"collection","title":"Swift","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift","type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/Swift/Dictionary":{"url":"\/documentation\/swiftsyntaxbuilder\/swift\/dictionary","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/Swift\/Dictionary","role":"symbol","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol","title":"Dictionary","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"identifier"}]}}}