{"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/enumcaseelementlistbuilder\/buildeither(first:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Type Method","externalID":"s:18SwiftSyntaxBuilder04ListC0PAAE11buildEither5firstSay11FinalResult_7ElementQZGAI_tFZ::SYNTHESIZED::s:18SwiftSyntaxBuilder019EnumCaseElementListC0V","title":"buildEither(first:)","extendedModule":"SwiftSyntaxBuilder","modules":[{"name":"SwiftSyntaxBuilder"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildEither"},{"kind":"text","text":"("},{"kind":"externalParam","text":"first"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]},"abstract":[{"text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’","type":"text"},{"type":"text","text":" "},{"text":"statements by folding conditional results into a single result.","type":"text"}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"first"},{"text":" ","kind":"text"},{"text":"component","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Component","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"text":") -> ","kind":"text"},{"text":"Component","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"}]}]}],"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseElementListBuilder\/buildEither(first:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseElementListBuilder"]]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseElementListBuilder/buildEither(first:)":{"kind":"symbol","abstract":[{"type":"text","text":"With buildEither(second:), enables support for ‘if-else’ and ‘switch’"},{"text":" ","type":"text"},{"text":"statements by folding conditional results into a single result.","type":"text"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseElementListBuilder\/buildEither(first:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buildEither","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"first"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Component","preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder04ListC0P9Componenta","kind":"typeIdentifier","text":"Component"}],"url":"\/documentation\/swiftsyntaxbuilder\/enumcaseelementlistbuilder\/buildeither(first:)","title":"buildEither(first:)","type":"topic","role":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ListBuilder/Component":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Component"}],"title":"ListBuilder.Component","abstract":[{"text":"The type of a partial result, which will be carried through all of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"build methods."}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ListBuilder\/Component","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/swiftsyntaxbuilder\/listbuilder\/component"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/EnumCaseElementListBuilder":{"role":"symbol","navigatorTitle":[{"text":"EnumCaseElementListBuilder","kind":"identifier"}],"title":"EnumCaseElementListBuilder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumCaseElementListBuilder"}],"type":"topic","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/EnumCaseElementListBuilder","kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/enumcaseelementlistbuilder","abstract":[]}}}