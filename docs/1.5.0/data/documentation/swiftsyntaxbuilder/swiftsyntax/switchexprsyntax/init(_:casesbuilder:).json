{"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/SwitchExprSyntax\/init(_:casesBuilder:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"header","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","text":"SyntaxNodeString"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"SwitchCaseListBuilder","kind":"attribute","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwitchCaseListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder014SwitchCaseListC0V"},{"kind":"text","text":" "},{"text":"casesBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"SwitchCaseListSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax","preciseIdentifier":"s:11SwiftSyntax014SwitchCaseListB0V"},{"kind":"text","text":" = { SwitchCaseListSyntax([]) }) "},{"kind":"keyword","text":"throws"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"For example, to construct"}],"type":"paragraph"},{"syntax":"swift","code":["switch direction {","case .up:","  goUp()","case .down:","  goDown()","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"using this call"}]},{"type":"codeListing","syntax":"swift","code":["try SwitchExprSyntax(\"switch direction\") {","  SwitchCaseSyntax(\"case .up: goUp()\")","  SwitchCaseSyntax(\"case .down: goDown()\")","}"]},{"type":"paragraph","inlineContent":[{"text":"Throws an error if ","type":"text"},{"type":"codeVoice","code":"header"},{"type":"text","text":" does not start a switch expression. E.g. if calling "},{"code":"try SwitchExprSyntax(\"if x < 42\") {}","type":"codeVoice"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Constructs a "},{"code":"switch","type":"codeVoice"},{"text":" expression where ","type":"text"},{"code":"header","type":"codeVoice"},{"text":" builds the text before the opening ","type":"text"},{"type":"codeVoice","code":"{"},{"type":"text","text":" and "},{"type":"codeVoice","code":"casesBuilder"},{"type":"text","text":" can be used to build the case items."}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/SwitchExprSyntax"]]},"variants":[{"paths":["\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/switchexprsyntax\/init(_:casesbuilder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"init","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax010SwitchExprB0V0aB7BuilderE_05casesE0AcD0B10NodeStringV_AA0c8CaseListB0VyKXEtKcfc","modules":[{"name":"SwiftSyntaxBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Initializer","title":"init(_:casesBuilder:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"casesBuilder"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014SwitchCaseListB0V","text":"SwitchCaseListSyntax"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"role":"symbol"},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwitchCaseListBuilder":{"type":"topic","kind":"symbol","title":"SwitchCaseListBuilder","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchCaseListBuilder"}],"url":"\/documentation\/swiftsyntaxbuilder\/switchcaselistbuilder","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwitchCaseListBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchCaseListBuilder","kind":"identifier"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax","abstract":[],"title":"SwiftSyntax","role":"collection","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/SwitchExprSyntax":{"title":"SwitchExprSyntax","role":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/SwitchExprSyntax","navigatorTitle":[{"text":"SwitchExprSyntax","kind":"identifier"}],"url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/switchexprsyntax","kind":"symbol","type":"topic","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchExprSyntax","kind":"identifier","preciseIdentifier":"s:11SwiftSyntax010SwitchExprB0V"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntax/SwitchCaseListSyntax":{"abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchCaseListSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"SwitchCaseListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntax\/SwitchCaseListSyntax","title":"SwitchCaseListSyntax","kind":"symbol","url":"\/documentation\/swiftsyntax\/switchcaselistsyntax"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/SwitchExprSyntax/init(_:casesBuilder:)":{"type":"topic","abstract":[{"text":"Constructs a ","type":"text"},{"code":"switch","type":"codeVoice"},{"type":"text","text":" expression where "},{"code":"header","type":"codeVoice"},{"type":"text","text":" builds the text before the opening "},{"type":"codeVoice","code":"{"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"casesBuilder"},{"text":" can be used to build the case items.","type":"text"}],"title":"init(_:casesBuilder:)","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/switchexprsyntax\/init(_:casesbuilder:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","text":"SyntaxNodeString"},{"kind":"text","text":", "},{"text":"casesBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11SwiftSyntax014SwitchCaseListB0V","kind":"typeIdentifier","text":"SwitchCaseListSyntax"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/SwitchExprSyntax\/init(_:casesBuilder:)","role":"symbol","kind":"symbol"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxNodeString","type":"topic","url":"\/documentation\/swiftsyntaxbuilder\/syntaxnodestring","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"text":" ","type":"text"},{"text":"nodes are, but instead of producing a node, it stores the string interpolation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxNodeString"}],"title":"SyntaxNodeString","role":"symbol","kind":"symbol"}}}