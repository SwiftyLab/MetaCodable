{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendInterpolation","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Literal","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"literal","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B19StringInterpolationV06appendE07literal6formatyxSg_0A11BasicFormat0iJ0CtAA020ExpressibleByLiteralB0RzlF0M0L_xmfp","kind":"typeIdentifier","text":"Literal"},{"text":"?, ","kind":"text"},{"text":"format","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat","preciseIdentifier":"s:16SwiftBasicFormat0bC0C","text":"BasicFormat","kind":"typeIdentifier"},{"kind":"text","text":" = BasicFormat()) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Literal","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P","text":"ExpressibleByLiteralSyntax","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"aside","style":"note","name":"See Also","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","isActive":true}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxStringInterpolation"]]},"identifier":{"url":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxStringInterpolation\/appendInterpolation(literal:format:)-27ovn","interfaceLanguage":"swift"},"abstract":[{"text":"Interpolates a literal or similar expression syntax equivalent to ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftsyntaxbuilder\/syntaxstringinterpolation\/appendinterpolation(literal:format:)-27ovn"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"symbolKind":"method","title":"appendInterpolation(literal:format:)","extendedModule":"SwiftSyntaxBuilder","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appendInterpolation"},{"kind":"text","text":"<"},{"text":"Literal","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B19StringInterpolationV06appendE07literal6formatyxSg_0A11BasicFormat0iJ0CtAA020ExpressibleByLiteralB0RzlF0M0L_xmfp","text":"Literal"},{"text":"?, ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"BasicFormat","kind":"typeIdentifier","preciseIdentifier":"s:16SwiftBasicFormat0bC0C"},{"kind":"text","text":")"}],"externalID":"s:18SwiftSyntaxBuilder0B19StringInterpolationV06appendE07literal6formatyxSg_0A11BasicFormat0iJ0CtAA020ExpressibleByLiteralB0RzlF","role":"symbol","modules":[{"name":"SwiftSyntaxBuilder"}]},"references":{"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/ExpressibleByLiteralSyntax":{"type":"topic","kind":"symbol","title":"ExpressibleByLiteralSyntax","abstract":[{"type":"text","text":"A Swift type whose value can be represented directly in source code by a"},{"type":"text","text":" "},{"type":"text","text":"Swift literal."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByLiteralSyntax"}],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/ExpressibleByLiteralSyntax","url":"\/documentation\/swiftsyntaxbuilder\/expressiblebyliteralsyntax","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByLiteralSyntax"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxStringInterpolation":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxStringInterpolation"}],"url":"\/documentation\/swiftsyntaxbuilder\/syntaxstringinterpolation","kind":"symbol","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxStringInterpolation","title":"SyntaxStringInterpolation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SyntaxStringInterpolation","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"The string interpolation type used for creating syntax nodes.","type":"text"}]},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SwiftSyntax/ExprSyntax/init(literal:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"literal","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ExpressibleByLiteralSyntax","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftsyntaxbuilder\/swiftsyntax\/exprsyntax\/init(literal:)","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SwiftSyntax\/ExprSyntax\/init(literal:)","title":"init(literal:)","role":"symbol","abstract":[{"text":"Returns a syntax tree for an expression that represents the value of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided instance. For example, passing an "},{"code":"Array<String>","type":"codeVoice"},{"text":" will result in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an array literal containing string literals:"}],"type":"topic"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder":{"role":"collection","url":"\/documentation\/swiftsyntaxbuilder","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder","title":"SwiftSyntaxBuilder"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftSyntaxBuilder/SyntaxStringInterpolation/appendInterpolation(literal:format:)-27ovn":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appendInterpolation"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Literal"},{"kind":"text","text":">("},{"text":"literal","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Literal","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B19StringInterpolationV06appendE07literal6formatyxSg_0A11BasicFormat0iJ0CtAA020ExpressibleByLiteralB0RzlF0M0L_xmfp"},{"text":"?, ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16SwiftBasicFormat0bC0C","text":"BasicFormat"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Interpolates a literal or similar expression syntax equivalent to "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","role":"symbol","kind":"symbol","title":"appendInterpolation(literal:format:)","url":"\/documentation\/swiftsyntaxbuilder\/syntaxstringinterpolation\/appendinterpolation(literal:format:)-27ovn","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftSyntaxBuilder\/SyntaxStringInterpolation\/appendInterpolation(literal:format:)-27ovn"},"doc://com.SwiftyLab.HelperCoders/documentation/SwiftBasicFormat/BasicFormat":{"title":"BasicFormat","identifier":"doc:\/\/com.SwiftyLab.HelperCoders\/documentation\/SwiftBasicFormat\/BasicFormat","abstract":[{"type":"text","text":"A rewriter that performs a “basic” format of the passed tree."}],"kind":"symbol","url":"\/documentation\/swiftbasicformat\/basicformat","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicFormat"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicFormat"}]}}}